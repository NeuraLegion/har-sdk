{
  "openapi": "3.1.0",
  "info": { "title": "FastAPI", "version": "0.1.0" },
  "paths": {
    "/": {
      "get": {
        "summary": "Home",
        "description": "Provides a redirect page to the docs.",
        "operationId": "home__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "text/html": { "schema": { "type": "string" } } }
          }
        }
      }
    },
    "/authorization_test": {
      "get": {
        "summary": "Test Authorization",
        "description": "Returns the user, if authenticated correctly.",
        "operationId": "test_authorization_authorization_test_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Test Authorization Authorization Test Get"
                }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/platforms/v1": {
      "get": {
        "tags": ["platforms"],
        "summary": "List Platforms",
        "operationId": "List_platforms_platforms_v1_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/PlatformRead" },
                  "type": "array",
                  "title": "Response List Platforms Platforms V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["platforms"],
        "summary": "Platform",
        "operationId": "platform_platforms_v1_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PlatformCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/counts/platforms/v1": {
      "get": {
        "tags": ["platforms"],
        "summary": "Count Of Platforms",
        "operationId": "Count_of_platforms_counts_platforms_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Count Of Platforms Counts Platforms V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/platforms/v1/{identifier}": {
      "get": {
        "tags": ["platforms"],
        "summary": "Platform",
        "operationId": "platform_platforms_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PlatformRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["platforms"],
        "summary": "Platform",
        "operationId": "platform_platforms_v1__identifier__put",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PlatformCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      },
      "delete": {
        "tags": ["platforms"],
        "summary": "Platform",
        "operationId": "platform_platforms_v1__identifier__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/case_studies/v1": {
      "get": {
        "tags": ["case_studies"],
        "summary": "List Case Studies",
        "operationId": "List_case_studies_case_studies_v1_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/CaseStudyRead" },
                  "type": "array",
                  "title": "Response List Case Studies Case Studies V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["case_studies"],
        "summary": "Case Study",
        "operationId": "case_study_case_studies_v1_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CaseStudyCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/counts/case_studies/v1": {
      "get": {
        "tags": ["case_studies"],
        "summary": "Count Of Case Studies",
        "operationId": "Count_of_case_studies_counts_case_studies_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Count Of Case Studies Counts Case Studies V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/case_studies/v1/{identifier}": {
      "get": {
        "tags": ["case_studies"],
        "summary": "Case Study",
        "operationId": "case_study_case_studies_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CaseStudyRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["case_studies"],
        "summary": "Case Study",
        "operationId": "case_study_case_studies_v1__identifier__put",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CaseStudyCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      },
      "delete": {
        "tags": ["case_studies"],
        "summary": "Case Study",
        "operationId": "case_study_case_studies_v1__identifier__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/platforms/{platform}/case_studies/v1": {
      "get": {
        "tags": ["case_studies"],
        "summary": "List Case Studies",
        "operationId": "List_case_studies_platforms__platform__case_studies_v1_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/CaseStudyRead" },
                  "type": "array",
                  "title": "Response List Case Studies Platforms  Platform  Case Studies V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/platforms/{platform}/case_studies/v1/{identifier}": {
      "get": {
        "tags": ["case_studies"],
        "summary": "Case Study",
        "operationId": "case_study_platforms__platform__case_studies_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CaseStudyRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/case_studies/v1/{identifier}/content": {
      "get": {
        "tags": ["case_studies"],
        "summary": "Case Study",
        "operationId": "case_study_case_studies_v1__identifier__content_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Case Study Case Studies V1  Identifier  Content Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/case_studies/v1/{identifier}/content/{distribution_idx}": {
      "get": {
        "tags": ["case_studies"],
        "summary": "Case Study",
        "operationId": "case_study_case_studies_v1__identifier__content__distribution_idx__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "type": "integer", "title": "Distribution Idx" },
            "name": "distribution_idx",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Default",
              "default": false
            },
            "name": "default",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Case Study Case Studies V1  Identifier  Content  Distribution Idx  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/computational_assets/v1": {
      "get": {
        "tags": ["computational_assets"],
        "summary": "List Computational Assets",
        "operationId": "List_computational_assets_computational_assets_v1_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ComputationalAssetRead"
                  },
                  "type": "array",
                  "title": "Response List Computational Assets Computational Assets V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["computational_assets"],
        "summary": "Computational Asset",
        "operationId": "computational_asset_computational_assets_v1_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComputationalAssetCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/counts/computational_assets/v1": {
      "get": {
        "tags": ["computational_assets"],
        "summary": "Count Of Computational Assets",
        "operationId": "Count_of_computational_assets_counts_computational_assets_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Count Of Computational Assets Counts Computational Assets V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/computational_assets/v1/{identifier}": {
      "get": {
        "tags": ["computational_assets"],
        "summary": "Computational Asset",
        "operationId": "computational_asset_computational_assets_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputationalAssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["computational_assets"],
        "summary": "Computational Asset",
        "operationId": "computational_asset_computational_assets_v1__identifier__put",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComputationalAssetCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      },
      "delete": {
        "tags": ["computational_assets"],
        "summary": "Computational Asset",
        "operationId": "computational_asset_computational_assets_v1__identifier__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/platforms/{platform}/computational_assets/v1": {
      "get": {
        "tags": ["computational_assets"],
        "summary": "List Computational Assets",
        "operationId": "List_computational_assets_platforms__platform__computational_assets_v1_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ComputationalAssetRead"
                  },
                  "type": "array",
                  "title": "Response List Computational Assets Platforms  Platform  Computational Assets V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/platforms/{platform}/computational_assets/v1/{identifier}": {
      "get": {
        "tags": ["computational_assets"],
        "summary": "Computational Asset",
        "operationId": "computational_asset_platforms__platform__computational_assets_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputationalAssetRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/contacts/v1": {
      "get": {
        "tags": ["contacts"],
        "summary": "List Contacts",
        "operationId": "List_contacts_contacts_v1_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/ContactRead" },
                  "type": "array",
                  "title": "Response List Contacts Contacts V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["contacts"],
        "summary": "Contact",
        "operationId": "contact_contacts_v1_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ContactCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/counts/contacts/v1": {
      "get": {
        "tags": ["contacts"],
        "summary": "Count Of Contacts",
        "operationId": "Count_of_contacts_counts_contacts_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Count Of Contacts Counts Contacts V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/v1/{identifier}": {
      "get": {
        "tags": ["contacts"],
        "summary": "Contact",
        "operationId": "contact_contacts_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ContactRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["contacts"],
        "summary": "Contact",
        "operationId": "contact_contacts_v1__identifier__put",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ContactCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      },
      "delete": {
        "tags": ["contacts"],
        "summary": "Contact",
        "operationId": "contact_contacts_v1__identifier__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/platforms/{platform}/contacts/v1": {
      "get": {
        "tags": ["contacts"],
        "summary": "List Contacts",
        "operationId": "List_contacts_platforms__platform__contacts_v1_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/ContactRead" },
                  "type": "array",
                  "title": "Response List Contacts Platforms  Platform  Contacts V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/platforms/{platform}/contacts/v1/{identifier}": {
      "get": {
        "tags": ["contacts"],
        "summary": "Contact",
        "operationId": "contact_platforms__platform__contacts_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ContactRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/datasets/v1": {
      "get": {
        "tags": ["datasets"],
        "summary": "List Datasets",
        "operationId": "List_datasets_datasets_v1_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod", "schema.org", "dcat-ap"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "items": { "$ref": "#/components/schemas/DatasetRead" },
                      "type": "array"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/SchemaDotOrgDataset"
                      },
                      "type": "array"
                    },
                    {
                      "items": { "$ref": "#/components/schemas/DcatApWrapper" },
                      "type": "array"
                    }
                  ],
                  "title": "Response List Datasets Datasets V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["datasets"],
        "summary": "Dataset",
        "operationId": "dataset_datasets_v1_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DatasetCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/counts/datasets/v1": {
      "get": {
        "tags": ["datasets"],
        "summary": "Count Of Datasets",
        "operationId": "Count_of_datasets_counts_datasets_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Count Of Datasets Counts Datasets V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/datasets/v1/{identifier}": {
      "get": {
        "tags": ["datasets"],
        "summary": "Dataset",
        "operationId": "dataset_datasets_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod", "schema.org", "dcat-ap"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/DatasetRead" },
                    { "$ref": "#/components/schemas/SchemaDotOrgDataset" },
                    { "$ref": "#/components/schemas/DcatApWrapper" }
                  ],
                  "title": "Response Dataset Datasets V1  Identifier  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["datasets"],
        "summary": "Dataset",
        "operationId": "dataset_datasets_v1__identifier__put",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DatasetCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      },
      "delete": {
        "tags": ["datasets"],
        "summary": "Dataset",
        "operationId": "dataset_datasets_v1__identifier__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/platforms/{platform}/datasets/v1": {
      "get": {
        "tags": ["datasets"],
        "summary": "List Datasets",
        "operationId": "List_datasets_platforms__platform__datasets_v1_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod", "schema.org", "dcat-ap"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "items": { "$ref": "#/components/schemas/DatasetRead" },
                      "type": "array"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/SchemaDotOrgDataset"
                      },
                      "type": "array"
                    },
                    {
                      "items": { "$ref": "#/components/schemas/DcatApWrapper" },
                      "type": "array"
                    }
                  ],
                  "title": "Response List Datasets Platforms  Platform  Datasets V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/platforms/{platform}/datasets/v1/{identifier}": {
      "get": {
        "tags": ["datasets"],
        "summary": "Dataset",
        "operationId": "dataset_platforms__platform__datasets_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod", "schema.org", "dcat-ap"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/DatasetRead" },
                    { "$ref": "#/components/schemas/SchemaDotOrgDataset" },
                    { "$ref": "#/components/schemas/DcatApWrapper" }
                  ],
                  "title": "Response Dataset Platforms  Platform  Datasets V1  Identifier  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/datasets/v1/{identifier}/content": {
      "get": {
        "tags": ["datasets"],
        "summary": "Dataset",
        "operationId": "dataset_datasets_v1__identifier__content_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Dataset Datasets V1  Identifier  Content Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/datasets/v1/{identifier}/content/{distribution_idx}": {
      "get": {
        "tags": ["datasets"],
        "summary": "Dataset",
        "operationId": "dataset_datasets_v1__identifier__content__distribution_idx__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "type": "integer", "title": "Distribution Idx" },
            "name": "distribution_idx",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Default",
              "default": false
            },
            "name": "default",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Dataset Datasets V1  Identifier  Content  Distribution Idx  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/educational_resources/v1": {
      "get": {
        "tags": ["educational_resources"],
        "summary": "List Educational Resources",
        "operationId": "List_educational_resources_educational_resources_v1_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EducationalResourceRead"
                  },
                  "type": "array",
                  "title": "Response List Educational Resources Educational Resources V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["educational_resources"],
        "summary": "Educational Resource",
        "operationId": "educational_resource_educational_resources_v1_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducationalResourceCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/counts/educational_resources/v1": {
      "get": {
        "tags": ["educational_resources"],
        "summary": "Count Of Educational Resources",
        "operationId": "Count_of_educational_resources_counts_educational_resources_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Count Of Educational Resources Counts Educational Resources V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/educational_resources/v1/{identifier}": {
      "get": {
        "tags": ["educational_resources"],
        "summary": "Educational Resource",
        "operationId": "educational_resource_educational_resources_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationalResourceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["educational_resources"],
        "summary": "Educational Resource",
        "operationId": "educational_resource_educational_resources_v1__identifier__put",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducationalResourceCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      },
      "delete": {
        "tags": ["educational_resources"],
        "summary": "Educational Resource",
        "operationId": "educational_resource_educational_resources_v1__identifier__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/platforms/{platform}/educational_resources/v1": {
      "get": {
        "tags": ["educational_resources"],
        "summary": "List Educational Resources",
        "operationId": "List_educational_resources_platforms__platform__educational_resources_v1_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EducationalResourceRead"
                  },
                  "type": "array",
                  "title": "Response List Educational Resources Platforms  Platform  Educational Resources V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/platforms/{platform}/educational_resources/v1/{identifier}": {
      "get": {
        "tags": ["educational_resources"],
        "summary": "Educational Resource",
        "operationId": "educational_resource_platforms__platform__educational_resources_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationalResourceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/events/v1": {
      "get": {
        "tags": ["events"],
        "summary": "List Events",
        "operationId": "List_events_events_v1_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/EventRead" },
                  "type": "array",
                  "title": "Response List Events Events V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["events"],
        "summary": "Event",
        "operationId": "event_events_v1_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EventCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/counts/events/v1": {
      "get": {
        "tags": ["events"],
        "summary": "Count Of Events",
        "operationId": "Count_of_events_counts_events_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Count Of Events Counts Events V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/events/v1/{identifier}": {
      "get": {
        "tags": ["events"],
        "summary": "Event",
        "operationId": "event_events_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EventRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["events"],
        "summary": "Event",
        "operationId": "event_events_v1__identifier__put",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EventCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      },
      "delete": {
        "tags": ["events"],
        "summary": "Event",
        "operationId": "event_events_v1__identifier__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/platforms/{platform}/events/v1": {
      "get": {
        "tags": ["events"],
        "summary": "List Events",
        "operationId": "List_events_platforms__platform__events_v1_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/EventRead" },
                  "type": "array",
                  "title": "Response List Events Platforms  Platform  Events V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/platforms/{platform}/events/v1/{identifier}": {
      "get": {
        "tags": ["events"],
        "summary": "Event",
        "operationId": "event_platforms__platform__events_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EventRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiments/v1": {
      "get": {
        "tags": ["experiments"],
        "summary": "List Experiments",
        "operationId": "List_experiments_experiments_v1_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/ExperimentRead" },
                  "type": "array",
                  "title": "Response List Experiments Experiments V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["experiments"],
        "summary": "Experiment",
        "operationId": "experiment_experiments_v1_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ExperimentCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/counts/experiments/v1": {
      "get": {
        "tags": ["experiments"],
        "summary": "Count Of Experiments",
        "operationId": "Count_of_experiments_counts_experiments_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Count Of Experiments Counts Experiments V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/experiments/v1/{identifier}": {
      "get": {
        "tags": ["experiments"],
        "summary": "Experiment",
        "operationId": "experiment_experiments_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ExperimentRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["experiments"],
        "summary": "Experiment",
        "operationId": "experiment_experiments_v1__identifier__put",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ExperimentCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      },
      "delete": {
        "tags": ["experiments"],
        "summary": "Experiment",
        "operationId": "experiment_experiments_v1__identifier__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/platforms/{platform}/experiments/v1": {
      "get": {
        "tags": ["experiments"],
        "summary": "List Experiments",
        "operationId": "List_experiments_platforms__platform__experiments_v1_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/ExperimentRead" },
                  "type": "array",
                  "title": "Response List Experiments Platforms  Platform  Experiments V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/platforms/{platform}/experiments/v1/{identifier}": {
      "get": {
        "tags": ["experiments"],
        "summary": "Experiment",
        "operationId": "experiment_platforms__platform__experiments_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ExperimentRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiments/v1/{identifier}/content": {
      "get": {
        "tags": ["experiments"],
        "summary": "Experiment",
        "operationId": "experiment_experiments_v1__identifier__content_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Experiment Experiments V1  Identifier  Content Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiments/v1/{identifier}/content/{distribution_idx}": {
      "get": {
        "tags": ["experiments"],
        "summary": "Experiment",
        "operationId": "experiment_experiments_v1__identifier__content__distribution_idx__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "type": "integer", "title": "Distribution Idx" },
            "name": "distribution_idx",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Default",
              "default": false
            },
            "name": "default",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Experiment Experiments V1  Identifier  Content  Distribution Idx  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ml_models/v1": {
      "get": {
        "tags": ["ml_models"],
        "summary": "List Ml Models",
        "operationId": "List_ml_models_ml_models_v1_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/MLModelRead" },
                  "type": "array",
                  "title": "Response List Ml Models Ml Models V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["ml_models"],
        "summary": "Ml Model",
        "operationId": "ml_model_ml_models_v1_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MLModelCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/counts/ml_models/v1": {
      "get": {
        "tags": ["ml_models"],
        "summary": "Count Of Ml Models",
        "operationId": "Count_of_ml_models_counts_ml_models_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Count Of Ml Models Counts Ml Models V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/ml_models/v1/{identifier}": {
      "get": {
        "tags": ["ml_models"],
        "summary": "Ml Model",
        "operationId": "ml_model_ml_models_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MLModelRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["ml_models"],
        "summary": "Ml Model",
        "operationId": "ml_model_ml_models_v1__identifier__put",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MLModelCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      },
      "delete": {
        "tags": ["ml_models"],
        "summary": "Ml Model",
        "operationId": "ml_model_ml_models_v1__identifier__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/platforms/{platform}/ml_models/v1": {
      "get": {
        "tags": ["ml_models"],
        "summary": "List Ml Models",
        "operationId": "List_ml_models_platforms__platform__ml_models_v1_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/MLModelRead" },
                  "type": "array",
                  "title": "Response List Ml Models Platforms  Platform  Ml Models V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/platforms/{platform}/ml_models/v1/{identifier}": {
      "get": {
        "tags": ["ml_models"],
        "summary": "Ml Model",
        "operationId": "ml_model_platforms__platform__ml_models_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MLModelRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ml_models/v1/{identifier}/content": {
      "get": {
        "tags": ["ml_models"],
        "summary": "Ml Model",
        "operationId": "ml_model_ml_models_v1__identifier__content_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Ml Model Ml Models V1  Identifier  Content Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ml_models/v1/{identifier}/content/{distribution_idx}": {
      "get": {
        "tags": ["ml_models"],
        "summary": "Ml Model",
        "operationId": "ml_model_ml_models_v1__identifier__content__distribution_idx__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "type": "integer", "title": "Distribution Idx" },
            "name": "distribution_idx",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Default",
              "default": false
            },
            "name": "default",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Ml Model Ml Models V1  Identifier  Content  Distribution Idx  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/news/v1": {
      "get": {
        "tags": ["news"],
        "summary": "List News",
        "operationId": "List_news_news_v1_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/NewsRead" },
                  "type": "array",
                  "title": "Response List News News V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["news"],
        "summary": "News",
        "operationId": "news_news_v1_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NewsCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/counts/news/v1": {
      "get": {
        "tags": ["news"],
        "summary": "Count Of News",
        "operationId": "Count_of_news_counts_news_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Count Of News Counts News V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/news/v1/{identifier}": {
      "get": {
        "tags": ["news"],
        "summary": "News",
        "operationId": "news_news_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NewsRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["news"],
        "summary": "News",
        "operationId": "news_news_v1__identifier__put",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NewsCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      },
      "delete": {
        "tags": ["news"],
        "summary": "News",
        "operationId": "news_news_v1__identifier__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/platforms/{platform}/news/v1": {
      "get": {
        "tags": ["news"],
        "summary": "List News",
        "operationId": "List_news_platforms__platform__news_v1_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/NewsRead" },
                  "type": "array",
                  "title": "Response List News Platforms  Platform  News V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/platforms/{platform}/news/v1/{identifier}": {
      "get": {
        "tags": ["news"],
        "summary": "News",
        "operationId": "news_platforms__platform__news_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NewsRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/organisations/v1": {
      "get": {
        "tags": ["organisations"],
        "summary": "List Organisations",
        "operationId": "List_organisations_organisations_v1_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/OrganisationRead" },
                  "type": "array",
                  "title": "Response List Organisations Organisations V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["organisations"],
        "summary": "Organisation",
        "operationId": "organisation_organisations_v1_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrganisationCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/counts/organisations/v1": {
      "get": {
        "tags": ["organisations"],
        "summary": "Count Of Organisations",
        "operationId": "Count_of_organisations_counts_organisations_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Count Of Organisations Counts Organisations V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/v1/{identifier}": {
      "get": {
        "tags": ["organisations"],
        "summary": "Organisation",
        "operationId": "organisation_organisations_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrganisationRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["organisations"],
        "summary": "Organisation",
        "operationId": "organisation_organisations_v1__identifier__put",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrganisationCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      },
      "delete": {
        "tags": ["organisations"],
        "summary": "Organisation",
        "operationId": "organisation_organisations_v1__identifier__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/platforms/{platform}/organisations/v1": {
      "get": {
        "tags": ["organisations"],
        "summary": "List Organisations",
        "operationId": "List_organisations_platforms__platform__organisations_v1_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/OrganisationRead" },
                  "type": "array",
                  "title": "Response List Organisations Platforms  Platform  Organisations V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/platforms/{platform}/organisations/v1/{identifier}": {
      "get": {
        "tags": ["organisations"],
        "summary": "Organisation",
        "operationId": "organisation_platforms__platform__organisations_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrganisationRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/persons/v1": {
      "get": {
        "tags": ["persons"],
        "summary": "List Persons",
        "operationId": "List_persons_persons_v1_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/PersonRead" },
                  "type": "array",
                  "title": "Response List Persons Persons V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["persons"],
        "summary": "Person",
        "operationId": "person_persons_v1_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PersonCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/counts/persons/v1": {
      "get": {
        "tags": ["persons"],
        "summary": "Count Of Persons",
        "operationId": "Count_of_persons_counts_persons_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Count Of Persons Counts Persons V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/persons/v1/{identifier}": {
      "get": {
        "tags": ["persons"],
        "summary": "Person",
        "operationId": "person_persons_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PersonRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["persons"],
        "summary": "Person",
        "operationId": "person_persons_v1__identifier__put",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PersonCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      },
      "delete": {
        "tags": ["persons"],
        "summary": "Person",
        "operationId": "person_persons_v1__identifier__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/platforms/{platform}/persons/v1": {
      "get": {
        "tags": ["persons"],
        "summary": "List Persons",
        "operationId": "List_persons_platforms__platform__persons_v1_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/PersonRead" },
                  "type": "array",
                  "title": "Response List Persons Platforms  Platform  Persons V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/platforms/{platform}/persons/v1/{identifier}": {
      "get": {
        "tags": ["persons"],
        "summary": "Person",
        "operationId": "person_platforms__platform__persons_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PersonRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/publications/v1": {
      "get": {
        "tags": ["publications"],
        "summary": "List Publications",
        "operationId": "List_publications_publications_v1_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/PublicationRead" },
                  "type": "array",
                  "title": "Response List Publications Publications V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["publications"],
        "summary": "Publication",
        "operationId": "publication_publications_v1_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PublicationCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/counts/publications/v1": {
      "get": {
        "tags": ["publications"],
        "summary": "Count Of Publications",
        "operationId": "Count_of_publications_counts_publications_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Count Of Publications Counts Publications V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/publications/v1/{identifier}": {
      "get": {
        "tags": ["publications"],
        "summary": "Publication",
        "operationId": "publication_publications_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PublicationRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["publications"],
        "summary": "Publication",
        "operationId": "publication_publications_v1__identifier__put",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PublicationCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      },
      "delete": {
        "tags": ["publications"],
        "summary": "Publication",
        "operationId": "publication_publications_v1__identifier__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/platforms/{platform}/publications/v1": {
      "get": {
        "tags": ["publications"],
        "summary": "List Publications",
        "operationId": "List_publications_platforms__platform__publications_v1_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/PublicationRead" },
                  "type": "array",
                  "title": "Response List Publications Platforms  Platform  Publications V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/platforms/{platform}/publications/v1/{identifier}": {
      "get": {
        "tags": ["publications"],
        "summary": "Publication",
        "operationId": "publication_platforms__platform__publications_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PublicationRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/publications/v1/{identifier}/content": {
      "get": {
        "tags": ["publications"],
        "summary": "Publication",
        "operationId": "publication_publications_v1__identifier__content_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Publication Publications V1  Identifier  Content Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/publications/v1/{identifier}/content/{distribution_idx}": {
      "get": {
        "tags": ["publications"],
        "summary": "Publication",
        "operationId": "publication_publications_v1__identifier__content__distribution_idx__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "type": "integer", "title": "Distribution Idx" },
            "name": "distribution_idx",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Default",
              "default": false
            },
            "name": "default",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Publication Publications V1  Identifier  Content  Distribution Idx  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/v1": {
      "get": {
        "tags": ["projects"],
        "summary": "List Projects",
        "operationId": "List_projects_projects_v1_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/ProjectRead" },
                  "type": "array",
                  "title": "Response List Projects Projects V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["projects"],
        "summary": "Project",
        "operationId": "project_projects_v1_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProjectCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/counts/projects/v1": {
      "get": {
        "tags": ["projects"],
        "summary": "Count Of Projects",
        "operationId": "Count_of_projects_counts_projects_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Count Of Projects Counts Projects V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/projects/v1/{identifier}": {
      "get": {
        "tags": ["projects"],
        "summary": "Project",
        "operationId": "project_projects_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["projects"],
        "summary": "Project",
        "operationId": "project_projects_v1__identifier__put",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProjectCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      },
      "delete": {
        "tags": ["projects"],
        "summary": "Project",
        "operationId": "project_projects_v1__identifier__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/platforms/{platform}/projects/v1": {
      "get": {
        "tags": ["projects"],
        "summary": "List Projects",
        "operationId": "List_projects_platforms__platform__projects_v1_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/ProjectRead" },
                  "type": "array",
                  "title": "Response List Projects Platforms  Platform  Projects V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/platforms/{platform}/projects/v1/{identifier}": {
      "get": {
        "tags": ["projects"],
        "summary": "Project",
        "operationId": "project_platforms__platform__projects_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/services/v1": {
      "get": {
        "tags": ["services"],
        "summary": "List Services",
        "operationId": "List_services_services_v1_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/ServiceRead" },
                  "type": "array",
                  "title": "Response List Services Services V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["services"],
        "summary": "Service",
        "operationId": "service_services_v1_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ServiceCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/counts/services/v1": {
      "get": {
        "tags": ["services"],
        "summary": "Count Of Services",
        "operationId": "Count_of_services_counts_services_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Count Of Services Counts Services V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/services/v1/{identifier}": {
      "get": {
        "tags": ["services"],
        "summary": "Service",
        "operationId": "service_services_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ServiceRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["services"],
        "summary": "Service",
        "operationId": "service_services_v1__identifier__put",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ServiceCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      },
      "delete": {
        "tags": ["services"],
        "summary": "Service",
        "operationId": "service_services_v1__identifier__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/platforms/{platform}/services/v1": {
      "get": {
        "tags": ["services"],
        "summary": "List Services",
        "operationId": "List_services_platforms__platform__services_v1_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/ServiceRead" },
                  "type": "array",
                  "title": "Response List Services Platforms  Platform  Services V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/platforms/{platform}/services/v1/{identifier}": {
      "get": {
        "tags": ["services"],
        "summary": "Service",
        "operationId": "service_platforms__platform__services_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ServiceRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/teams/v1": {
      "get": {
        "tags": ["teams"],
        "summary": "List Teams",
        "operationId": "List_teams_teams_v1_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/TeamRead" },
                  "type": "array",
                  "title": "Response List Teams Teams V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["teams"],
        "summary": "Team",
        "operationId": "team_teams_v1_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TeamCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/counts/teams/v1": {
      "get": {
        "tags": ["teams"],
        "summary": "Count Of Teams",
        "operationId": "Count_of_teams_counts_teams_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Count Of Teams Counts Teams V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/teams/v1/{identifier}": {
      "get": {
        "tags": ["teams"],
        "summary": "Team",
        "operationId": "team_teams_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TeamRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["teams"],
        "summary": "Team",
        "operationId": "team_teams_v1__identifier__put",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TeamCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      },
      "delete": {
        "tags": ["teams"],
        "summary": "Team",
        "operationId": "team_teams_v1__identifier__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OpenIdConnect": [] }]
      }
    },
    "/platforms/{platform}/teams/v1": {
      "get": {
        "tags": ["teams"],
        "summary": "List Teams",
        "operationId": "List_teams_platforms__platform__teams_v1_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Offset", "default": 0 },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "type": "integer", "title": "Limit", "default": 100 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/TeamRead" },
                  "type": "array",
                  "title": "Response List Teams Platforms  Platform  Teams V1 Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/platforms/{platform}/teams/v1/{identifier}": {
      "get": {
        "tags": ["teams"],
        "summary": "Team",
        "operationId": "team_platforms__platform__teams_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "type": "string", "title": "Platform" },
            "name": "platform",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["aiod"],
              "title": "Schema",
              "default": "aiod"
            },
            "name": "schema",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TeamRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/upload/datasets/{identifier}/huggingface": {
      "post": {
        "tags": ["upload"],
        "summary": "Huggingfaceupload",
        "operationId": "huggingFaceUpload_upload_datasets__identifier__huggingface_post",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          },
          {
            "description": "The access token of HuggingFace",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Huggingface Token",
              "description": "The access token of HuggingFace"
            },
            "name": "token",
            "in": "query"
          },
          {
            "description": "The username of HuggingFace",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Huggingface username",
              "description": "The username of HuggingFace"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_huggingFaceUpload_upload_datasets__identifier__huggingface_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Huggingfaceupload Upload Datasets  Identifier  Huggingface Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/agents/v1/{identifier}": {
      "get": {
        "tags": ["parents"],
        "summary": "Agent",
        "operationId": "agent_agents_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/OrganisationRead" },
                    { "$ref": "#/components/schemas/PersonRead" }
                  ],
                  "title": "Response Agent Agents V1  Identifier  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ai_assets/v1/{identifier}": {
      "get": {
        "tags": ["parents"],
        "summary": "Ai Asset",
        "operationId": "ai_asset_ai_assets_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/DatasetRead" },
                    { "$ref": "#/components/schemas/PublicationRead" },
                    { "$ref": "#/components/schemas/CaseStudyRead" },
                    { "$ref": "#/components/schemas/ComputationalAssetRead" },
                    { "$ref": "#/components/schemas/ExperimentRead" },
                    { "$ref": "#/components/schemas/MLModelRead" }
                  ],
                  "title": "Response Ai Asset Ai Assets V1  Identifier  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ai_resources/v1/{identifier}": {
      "get": {
        "tags": ["parents"],
        "summary": "Ai Resource",
        "operationId": "ai_resource_ai_resources_v1__identifier__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Identifier" },
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/OrganisationRead" },
                    { "$ref": "#/components/schemas/PersonRead" },
                    { "$ref": "#/components/schemas/DatasetRead" },
                    { "$ref": "#/components/schemas/PublicationRead" },
                    { "$ref": "#/components/schemas/CaseStudyRead" },
                    { "$ref": "#/components/schemas/ComputationalAssetRead" },
                    { "$ref": "#/components/schemas/ExperimentRead" },
                    { "$ref": "#/components/schemas/MLModelRead" },
                    { "$ref": "#/components/schemas/EducationalResourceRead" },
                    { "$ref": "#/components/schemas/EventRead" },
                    { "$ref": "#/components/schemas/NewsRead" },
                    { "$ref": "#/components/schemas/ProjectRead" },
                    { "$ref": "#/components/schemas/ServiceRead" },
                    { "$ref": "#/components/schemas/TeamRead" }
                  ],
                  "title": "Response Ai Resource Ai Resources V1  Identifier  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/application_areas/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Application Area",
        "operationId": "application_area_application_areas_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Application Area Application Areas V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/badges/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Badge",
        "operationId": "badge_badges_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Badge Badges V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/computational_asset_types/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Computational Asset Type",
        "operationId": "computational_asset_type_computational_asset_types_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Computational Asset Type Computational Asset Types V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/edu_access_modes/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Edu Access Mode",
        "operationId": "edu_access_mode_edu_access_modes_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Edu Access Mode Edu Access Modes V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/edu_educational_levels/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Edu Educational Level",
        "operationId": "edu_educational_level_edu_educational_levels_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Edu Educational Level Edu Educational Levels V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/edu_paces/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Edu Pace",
        "operationId": "edu_pace_edu_paces_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Edu Pace Edu Paces V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/edu_prerequisites/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Edu Prerequisite",
        "operationId": "edu_prerequisite_edu_prerequisites_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Edu Prerequisite Edu Prerequisites V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/edu_target_audiences/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Edu Target Audience",
        "operationId": "edu_target_audience_edu_target_audiences_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Edu Target Audience Edu Target Audiences V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/educational_resource_types/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Educational Resource Type",
        "operationId": "educational_resource_type_educational_resource_types_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Educational Resource Type Educational Resource Types V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/event_modes/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Event Mode",
        "operationId": "event_mode_event_modes_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Event Mode Event Modes V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/event_status/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Event Status",
        "operationId": "event_status_event_status_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Event Status Event Status V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/expertises/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Expertise",
        "operationId": "expertise_expertises_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Expertise Expertises V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/industrial_sectors/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Industrial Sector",
        "operationId": "industrial_sector_industrial_sectors_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Industrial Sector Industrial Sectors V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/keywords/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Keyword",
        "operationId": "keyword_keywords_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Keyword Keywords V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/languages/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Language",
        "operationId": "language_languages_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Language Languages V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/licenses/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "License",
        "operationId": "license_licenses_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response License Licenses V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/ml_model_types/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Ml Model Type",
        "operationId": "ml_model_type_ml_model_types_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Ml Model Type Ml Model Types V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/news_categorys/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "News Category",
        "operationId": "news_category_news_categorys_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response News Category News Categorys V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/organisation_types/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Organisation Type",
        "operationId": "organisation_type_organisation_types_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Organisation Type Organisation Types V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/publication_types/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Publication Type",
        "operationId": "publication_type_publication_types_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Publication Type Publication Types V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/relevant_links/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Relevant Link",
        "operationId": "relevant_link_relevant_links_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Relevant Link Relevant Links V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/research_areas/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Research Area",
        "operationId": "research_area_research_areas_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Research Area Research Areas V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/scientific_domains/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Scientific Domain",
        "operationId": "scientific_domain_scientific_domains_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Scientific Domain Scientific Domains V1 Get"
                }
              }
            }
          }
        }
      }
    },
    "/status/v1": {
      "get": {
        "tags": ["enums"],
        "summary": "Status",
        "operationId": "status_status_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Status Status V1 Get"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AIoDEntryCreate": {
        "properties": {
          "editor": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Editor",
            "description": "Links to identifiers of persons responsible for maintaining the entry.",
            "example": []
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Status of the entry (published, draft, rejected)",
            "default": "draft",
            "example": "published"
          }
        },
        "type": "object",
        "title": "AIoDEntryCreate",
        "description": "Metadata of the metadata: when was the metadata last updated, with what identifiers is it\nknown on other platforms, etc."
      },
      "AIoDEntryRead": {
        "properties": {
          "editor": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Editor",
            "description": "Links to identifiers of persons responsible for maintaining the entry.",
            "example": []
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Status of the entry (published, draft, rejected)",
            "default": "draft",
            "example": "published"
          },
          "date_modified": {
            "type": "string",
            "format": "date-time",
            "title": "Date Modified",
            "description": "The datetime on which the metadata was last updated in the AIoD platform,in UTC.  Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2023-01-01T15:15:00.000"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "title": "Date Created",
            "description": "The datetime on which the metadata was first published on the AIoD platform, in UTC.",
            "example": "2022-01-01T15:15:00.000"
          }
        },
        "type": "object",
        "title": "AIoDEntryRead",
        "description": "Metadata of the metadata: when was the metadata last updated, with what identifiers is it\nknown on other platforms, etc."
      },
      "Address": {
        "properties": {
          "region": {
            "type": "string",
            "maxLength": 256,
            "title": "Region",
            "description": "A subdivision of the country. Not necessary for most countries. ",
            "example": "California"
          },
          "locality": {
            "type": "string",
            "maxLength": 256,
            "title": "Locality",
            "description": "A city, town or village.",
            "example": "Paris"
          },
          "street": {
            "type": "string",
            "maxLength": 256,
            "title": "Street",
            "description": "The street address.",
            "example": "Wetstraat 170"
          },
          "postal_code": {
            "type": "string",
            "maxLength": 64,
            "title": "Postal Code",
            "description": "The postal code.",
            "example": "1040 AA"
          },
          "address": {
            "type": "string",
            "maxLength": 256,
            "title": "Address",
            "description": "Free text, in case the separate parts such as the street, postal code and country cannot be confidently separated.",
            "example": "Wetstraat 170, 1040 Brussel"
          },
          "country": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "title": "Country",
            "description": "The country as ISO 3166-1 alpha-3",
            "example": "BEL"
          }
        },
        "type": "object",
        "title": "Address",
        "description": "A postal address"
      },
      "Body_huggingFaceUpload_upload_datasets__identifier__huggingface_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "This file will be uploaded to HuggingFace"
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_huggingFaceUpload_upload_datasets__identifier__huggingface_post"
      },
      "CaseStudyCreate": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "is_accessible_for_free": {
            "type": "boolean",
            "title": "Is Accessible For Free",
            "description": "A flag to signal that this asset is accessible at no cost."
          },
          "version": {
            "type": "string",
            "maxLength": 256,
            "title": "Version",
            "description": "The version of this asset.",
            "example": "1.1.0"
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryCreate" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "citation": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Citation",
            "description": "A bibliographic reference.",
            "example": []
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "distribution": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Distribution"
          },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "license": {
            "type": "string",
            "title": "License",
            "example": "https://creativecommons.org/share-your-work/public-domain/cc0/"
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "CaseStudyCreate",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "CaseStudyRead": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "is_accessible_for_free": {
            "type": "boolean",
            "title": "Is Accessible For Free",
            "description": "A flag to signal that this asset is accessible at no cost."
          },
          "version": {
            "type": "string",
            "maxLength": 256,
            "title": "Version",
            "description": "The version of this asset.",
            "example": "1.1.0"
          },
          "ai_asset_identifier": {
            "type": "integer",
            "title": "Ai Asset Identifier"
          },
          "ai_resource_identifier": {
            "type": "integer",
            "title": "Ai Resource Identifier",
            "description": "This resource can be identified by its own identifier, but also by the resource_identifier."
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryRead" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "citation": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Citation",
            "description": "A bibliographic reference.",
            "example": []
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "distribution": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Distribution"
          },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "license": {
            "type": "string",
            "title": "License",
            "example": "https://creativecommons.org/share-your-work/public-domain/cc0/"
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "identifier": { "type": "integer", "title": "Identifier" }
        },
        "type": "object",
        "required": ["name", "identifier"],
        "title": "CaseStudyRead",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "ComputationalAssetCreate": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "is_accessible_for_free": {
            "type": "boolean",
            "title": "Is Accessible For Free",
            "description": "A flag to signal that this asset is accessible at no cost."
          },
          "version": {
            "type": "string",
            "maxLength": 256,
            "title": "Version",
            "description": "The version of this asset.",
            "example": "1.1.0"
          },
          "status_info": {
            "type": "string",
            "maxLength": 256,
            "title": "Status Info",
            "description": "A webpage that shows the current status of this asset.",
            "example": "https://www.example.com/cluster-status"
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryCreate" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "citation": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Citation",
            "description": "A bibliographic reference.",
            "example": []
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "distribution": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Distribution"
          },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "license": {
            "type": "string",
            "title": "License",
            "example": "https://creativecommons.org/share-your-work/public-domain/cc0/"
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of computational asset.",
            "example": "storage"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "ComputationalAssetCreate",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "ComputationalAssetRead": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "is_accessible_for_free": {
            "type": "boolean",
            "title": "Is Accessible For Free",
            "description": "A flag to signal that this asset is accessible at no cost."
          },
          "version": {
            "type": "string",
            "maxLength": 256,
            "title": "Version",
            "description": "The version of this asset.",
            "example": "1.1.0"
          },
          "status_info": {
            "type": "string",
            "maxLength": 256,
            "title": "Status Info",
            "description": "A webpage that shows the current status of this asset.",
            "example": "https://www.example.com/cluster-status"
          },
          "ai_asset_identifier": {
            "type": "integer",
            "title": "Ai Asset Identifier"
          },
          "ai_resource_identifier": {
            "type": "integer",
            "title": "Ai Resource Identifier",
            "description": "This resource can be identified by its own identifier, but also by the resource_identifier."
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryRead" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "citation": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Citation",
            "description": "A bibliographic reference.",
            "example": []
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "distribution": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Distribution"
          },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "license": {
            "type": "string",
            "title": "License",
            "example": "https://creativecommons.org/share-your-work/public-domain/cc0/"
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of computational asset.",
            "example": "storage"
          },
          "identifier": { "type": "integer", "title": "Identifier" }
        },
        "type": "object",
        "required": ["name", "identifier"],
        "title": "ComputationalAssetRead",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "ContactCreate": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this contact, especially useful if it is not known whether this contact is a person or organisation. For persons, it is preferred to store this information as contact.person.surname and contact.person.firstname. For organisations, store it as contact.organisation.legal_name."
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryCreate" },
          "email": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Email",
            "description": "An email address."
          },
          "location": {
            "items": { "$ref": "#/components/schemas/Location" },
            "type": "array",
            "title": "Location"
          },
          "organisation": { "type": "integer", "title": "Organisation" },
          "person": { "type": "integer", "title": "Person" },
          "telephone": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Telephone",
            "description": "A telephone number, including the land code."
          }
        },
        "type": "object",
        "title": "ContactCreate",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "ContactRead": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this contact, especially useful if it is not known whether this contact is a person or organisation. For persons, it is preferred to store this information as contact.person.surname and contact.person.firstname. For organisations, store it as contact.organisation.legal_name."
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryRead" },
          "email": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Email",
            "description": "An email address."
          },
          "location": {
            "items": { "$ref": "#/components/schemas/Location" },
            "type": "array",
            "title": "Location"
          },
          "organisation": { "type": "integer", "title": "Organisation" },
          "person": { "type": "integer", "title": "Person" },
          "telephone": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Telephone",
            "description": "A telephone number, including the land code."
          },
          "identifier": { "type": "integer", "title": "Identifier" }
        },
        "type": "object",
        "required": ["identifier"],
        "title": "ContactRead",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "DatasetCreate": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "is_accessible_for_free": {
            "type": "boolean",
            "title": "Is Accessible For Free",
            "description": "A flag to signal that this asset is accessible at no cost."
          },
          "version": {
            "type": "string",
            "maxLength": 256,
            "title": "Version",
            "description": "The version of this asset.",
            "example": "1.1.0"
          },
          "issn": {
            "type": "string",
            "maxLength": 8,
            "minLength": 8,
            "title": "Issn",
            "description": "The International Standard Serial Number, ISSN, an identifier for serial publications.",
            "example": "20493630"
          },
          "measurement_technique": {
            "type": "string",
            "maxLength": 256,
            "title": "Measurement Technique",
            "description": "The technique, technology, or methodology used in a dataset, corresponding to the method used for measuring the corresponding variable(s).",
            "example": "mass spectrometry"
          },
          "temporal_coverage": {
            "type": "string",
            "maxLength": 64,
            "title": "Temporal Coverage",
            "description": "The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, a textual string indicating a time period in ISO 8601 time interval format. In the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written '2011/2012').",
            "example": "2011/2012"
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryCreate" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "citation": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Citation",
            "description": "A bibliographic reference.",
            "example": []
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "distribution": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Distribution"
          },
          "funder": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Funder",
            "description": "Links to identifiers of the agents (person or organization) that supports this dataset through some kind of financial contribution. ",
            "example": []
          },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "license": {
            "type": "string",
            "title": "License",
            "example": "https://creativecommons.org/share-your-work/public-domain/cc0/"
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "size": {
            "allOf": [{ "$ref": "#/components/schemas/DatasetSize" }],
            "title": "Size",
            "description": "The size of this dataset, for example the number of rows. The file size should not be included here, but in distribution.content_size_kb."
          },
          "spatial_coverage": {
            "allOf": [{ "$ref": "#/components/schemas/Location" }],
            "title": "Spatial Coverage",
            "description": "A location that describes the spatial aspect of this dataset. For example, a point where all the measurements were collected."
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "DatasetCreate",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "DatasetRead": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "is_accessible_for_free": {
            "type": "boolean",
            "title": "Is Accessible For Free",
            "description": "A flag to signal that this asset is accessible at no cost."
          },
          "version": {
            "type": "string",
            "maxLength": 256,
            "title": "Version",
            "description": "The version of this asset.",
            "example": "1.1.0"
          },
          "issn": {
            "type": "string",
            "maxLength": 8,
            "minLength": 8,
            "title": "Issn",
            "description": "The International Standard Serial Number, ISSN, an identifier for serial publications.",
            "example": "20493630"
          },
          "measurement_technique": {
            "type": "string",
            "maxLength": 256,
            "title": "Measurement Technique",
            "description": "The technique, technology, or methodology used in a dataset, corresponding to the method used for measuring the corresponding variable(s).",
            "example": "mass spectrometry"
          },
          "temporal_coverage": {
            "type": "string",
            "maxLength": 64,
            "title": "Temporal Coverage",
            "description": "The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, a textual string indicating a time period in ISO 8601 time interval format. In the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written '2011/2012').",
            "example": "2011/2012"
          },
          "ai_asset_identifier": {
            "type": "integer",
            "title": "Ai Asset Identifier"
          },
          "ai_resource_identifier": {
            "type": "integer",
            "title": "Ai Resource Identifier",
            "description": "This resource can be identified by its own identifier, but also by the resource_identifier."
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryRead" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "citation": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Citation",
            "description": "A bibliographic reference.",
            "example": []
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "distribution": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Distribution"
          },
          "funder": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Funder",
            "description": "Links to identifiers of the agents (person or organization) that supports this dataset through some kind of financial contribution. ",
            "example": []
          },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "license": {
            "type": "string",
            "title": "License",
            "example": "https://creativecommons.org/share-your-work/public-domain/cc0/"
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "size": {
            "allOf": [{ "$ref": "#/components/schemas/DatasetSize" }],
            "title": "Size",
            "description": "The size of this dataset, for example the number of rows. The file size should not be included here, but in distribution.content_size_kb."
          },
          "spatial_coverage": {
            "allOf": [{ "$ref": "#/components/schemas/Location" }],
            "title": "Spatial Coverage",
            "description": "A location that describes the spatial aspect of this dataset. For example, a point where all the measurements were collected."
          },
          "identifier": { "type": "integer", "title": "Identifier" }
        },
        "type": "object",
        "required": ["name", "identifier"],
        "title": "DatasetRead",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "DatasetSize": {
        "properties": {
          "unit": {
            "type": "string",
            "maxLength": 64,
            "title": "Unit",
            "description": "Text indicating the unit of measurement.",
            "example": "Rows"
          },
          "value": {
            "type": "integer",
            "title": "Value",
            "description": "The size.",
            "example": 100
          }
        },
        "type": "object",
        "title": "DatasetSize",
        "description": "A point value for product characteristics"
      },
      "DcatAPContext": {
        "properties": {
          "dcat": {
            "type": "string",
            "const": "http://www.w3.org/ns/dcat",
            "title": "Dcat",
            "default": "http://www.w3.org/ns/dcat"
          },
          "dct": {
            "type": "string",
            "const": "http://purl.org/dc/terms/",
            "title": "Dct",
            "default": "http://purl.org/dc/terms/"
          },
          "vcard": {
            "type": "string",
            "const": "https://www.w3.org/2006/vcard/ns#",
            "title": "Vcard",
            "default": "https://www.w3.org/2006/vcard/ns#"
          }
        },
        "type": "object",
        "title": "DcatAPContext"
      },
      "DcatAPDataset": {
        "properties": {
          "@id": { "type": "string", "title": "@Id" },
          "@type": {
            "type": "string",
            "const": "dcat:Dataset",
            "title": "@Type",
            "default": "dcat:Dataset"
          },
          "dct:description": {
            "type": "string",
            "title": "Dct:Description",
            "description": "This property contains a free-text account of the Dataset"
          },
          "dct:title": {
            "type": "string",
            "title": "Dct:Title",
            "description": "This property contains a name given to the Dataset"
          },
          "dcat:contactPoint": {
            "items": { "$ref": "#/components/schemas/DcatAPIdentifier" },
            "type": "array",
            "title": "Dcat:Contactpoint",
            "description": "This property contains contact information that can be used for sending comments about the Dataset."
          },
          "dcat:distribution": {
            "items": { "$ref": "#/components/schemas/DcatAPIdentifier" },
            "type": "array",
            "title": "Dcat:Distribution"
          },
          "dcat:keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Dcat:Keyword"
          },
          "dct:publisher": {
            "allOf": [{ "$ref": "#/components/schemas/DcatAPIdentifier" }],
            "title": "Dct:Publisher",
            "description": "This property refers to an entity (organisation) responsible for making the Dataset available."
          },
          "dcat:creator": {
            "items": { "$ref": "#/components/schemas/DcatAPIdentifier" },
            "type": "array",
            "title": "Dcat:Creator"
          },
          "foaf:page": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Foaf:Page"
          },
          "dcat:landingPage": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Dcat:Landingpage",
            "description": "This property refers to a web page that provides access to the Dataset, its Distributions and/or additional information. It is intended to point to a landing page at the original data provider, not to a page on a site of a third party, such as an aggregator."
          },
          "dct:issued": { "$ref": "#/components/schemas/XSDDateTime" },
          "dct:modified": { "$ref": "#/components/schemas/XSDDateTime" },
          "owl:versionInfo": { "type": "string", "title": "Owl:Versioninfo" }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["@id", "dct:description", "dct:title"],
        "title": "DcatAPDataset",
        "description": "Base class for all DCAT-AP objects"
      },
      "DcatAPDistribution": {
        "properties": {
          "@id": { "type": "string", "title": "@Id" },
          "@type": {
            "type": "string",
            "const": "dcat:Distribution",
            "title": "@Type",
            "default": "dcat:Distribution"
          },
          "dcat:accessURL": { "type": "string", "title": "Dcat:Accessurl" },
          "dcat:byteSize": { "type": "integer", "title": "Dcat:Bytesize" },
          "spdx:checksum": { "$ref": "#/components/schemas/DcatAPIdentifier" },
          "dct:description": { "type": "string", "title": "Dct:Description" },
          "dcat:downloadURL": { "type": "string", "title": "Dcat:Downloadurl" },
          "dct:format": { "type": "string", "title": "Dct:Format" },
          "dct:license": { "type": "string", "title": "Dct:License" },
          "dct:title": { "type": "string", "title": "Dct:Title" }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["@id"],
        "title": "DcatAPDistribution",
        "description": "Base class for all DCAT-AP objects"
      },
      "DcatAPIdentifier": {
        "properties": { "@id": { "type": "string", "title": "@Id" } },
        "additionalProperties": false,
        "type": "object",
        "required": ["@id"],
        "title": "DcatAPIdentifier",
        "description": "Identifying another DcatAPObject. Contains only an id."
      },
      "DcatApWrapper": {
        "properties": {
          "@context": {
            "const": {
              "dcat": "http://www.w3.org/ns/dcat",
              "dct": "http://purl.org/dc/terms/",
              "vcard": "https://www.w3.org/2006/vcard/ns#"
            },
            "title": "@Context",
            "default": {
              "dcat": "http://www.w3.org/ns/dcat",
              "dct": "http://purl.org/dc/terms/",
              "vcard": "https://www.w3.org/2006/vcard/ns#"
            }
          },
          "@graph": {
            "items": {
              "anyOf": [
                { "$ref": "#/components/schemas/DcatAPDataset" },
                { "$ref": "#/components/schemas/DcatAPDistribution" },
                { "$ref": "#/components/schemas/DcatLocation" },
                { "$ref": "#/components/schemas/SpdxChecksum" },
                { "$ref": "#/components/schemas/VCardOrganisation" },
                { "$ref": "#/components/schemas/VCardIndividual" },
                { "$ref": "#/components/schemas/DctPeriodOfTime" }
              ]
            },
            "type": "array",
            "title": "@Graph"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["@graph"],
        "title": "DcatApWrapper",
        "description": "The resulting class, containing a dataset and related entities in the graph"
      },
      "DcatLocation": {
        "properties": {
          "@id": { "type": "string", "title": "@Id" },
          "@type": {
            "type": "string",
            "const": "dct:Location",
            "title": "@Type",
            "default": "dct:Location"
          },
          "dcat:bbox": { "type": "string", "title": "Dcat:Bbox" },
          "dcat:centroid": { "type": "string", "title": "Dcat:Centroid" },
          "dcat:geometry": { "type": "string", "title": "Dcat:Geometry" }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["@id"],
        "title": "DcatLocation",
        "description": "Base class for all DCAT-AP objects"
      },
      "DctPeriodOfTime": {
        "properties": {
          "@id": { "type": "string", "title": "@Id" },
          "@type": {
            "type": "string",
            "const": "dct:PeriodOfTime",
            "title": "@Type",
            "default": "dct:PeriodOfTime"
          },
          "dcat:startDate": { "$ref": "#/components/schemas/XSDDateTime" },
          "dcat:endDate": { "$ref": "#/components/schemas/XSDDateTime" }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["@id"],
        "title": "DctPeriodOfTime",
        "description": "Base class for all DCAT-AP objects"
      },
      "Distribution": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "checksum": {
            "type": "string",
            "maxLength": 1800,
            "title": "Checksum",
            "description": "The value of a checksum algorithm ran on this content.",
            "example": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
          },
          "checksum_algorithm": {
            "type": "string",
            "maxLength": 64,
            "title": "Checksum Algorithm",
            "description": "The checksum algorithm.",
            "example": "sha256"
          },
          "copyright": {
            "type": "string",
            "maxLength": 256,
            "title": "Copyright",
            "example": "2010-2020 Example Company. All rights reserved."
          },
          "content_url": {
            "type": "string",
            "maxLength": 256,
            "title": "Content Url",
            "example": "https://www.example.com/dataset/file.csv"
          },
          "content_size_kb": {
            "type": "integer",
            "title": "Content Size Kb",
            "example": 10000
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this Distribution was first published on an external platform. ",
            "example": "2022-01-01T15:15:00.000"
          },
          "description": {
            "type": "string",
            "maxLength": 1800,
            "title": "Description",
            "example": "Description of this file."
          },
          "encoding_format": {
            "type": "string",
            "maxLength": 256,
            "title": "Encoding Format",
            "description": "The mimetype of this file.",
            "example": "text/csv"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "Name of this file."
          },
          "technology_readiness_level": {
            "type": "integer",
            "title": "Technology Readiness Level",
            "description": "The technology readiness level (TRL) of the distribution. TRL 1 is the lowest and stands for 'Basic principles observed', TRL 9 is the highest and stands for 'actual system proven in operational environment'.",
            "example": 1
          }
        },
        "type": "object",
        "required": ["content_url"],
        "title": "Distribution",
        "description": "All or part of an AIAsset in downloadable form"
      },
      "EducationalResourceCreate": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "time_required": {
            "type": "string",
            "maxLength": 256,
            "title": "Time Required",
            "description": "An approximate or recommendation of the time required to use or complete the educational resource.",
            "example": "2 months"
          },
          "access_mode": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Access Mode",
            "description": "The primary mode of accessing this educational resource.",
            "example": ["textual"]
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryCreate" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "content": { "$ref": "#/components/schemas/Text" },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "educational_level": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Educational Level",
            "description": "The level or levels of education for which this resource is intended.",
            "example": ["primary school", "secondary school", "university"]
          },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "in_language": {
            "items": { "type": "string" },
            "type": "array",
            "title": "In Language",
            "description": "The language(s) of the educational resource, in ISO639-3.",
            "example": ["eng", "fra", "spa"]
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "location": {
            "items": { "$ref": "#/components/schemas/Location" },
            "type": "array",
            "title": "Location"
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "pace": {
            "type": "string",
            "title": "Pace",
            "description": "The high-level study schedule available for this educational resource. \"self-paced\" is mostly used for MOOCS, Tutorials and short courses without interactive elements; \"scheduled\" is used for scheduled courses with interactive elements that is not a full-time engagement; \"full-time\" is used for programmes or intensive courses that require a full-time engagement from the student.",
            "example": "full-time"
          },
          "prerequisite": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Prerequisite",
            "description": "Minimum or recommended requirements to make use of this educational resource.",
            "example": [
              "undergraduate knowledge of statistics",
              "graduate knowledge of linear algebra"
            ]
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "target_audience": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Target Audience",
            "description": "The intended users of this educational resource.",
            "example": [
              "professionals",
              "students in higher education",
              "teachers in secondary school"
            ]
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of educational resource.",
            "example": "presentation"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "EducationalResourceCreate",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "EducationalResourceRead": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "time_required": {
            "type": "string",
            "maxLength": 256,
            "title": "Time Required",
            "description": "An approximate or recommendation of the time required to use or complete the educational resource.",
            "example": "2 months"
          },
          "access_mode": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Access Mode",
            "description": "The primary mode of accessing this educational resource.",
            "example": ["textual"]
          },
          "ai_resource_identifier": {
            "type": "integer",
            "title": "Ai Resource Identifier",
            "description": "This resource can be identified by its own identifier, but also by the resource_identifier."
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryRead" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "content": { "$ref": "#/components/schemas/Text" },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "educational_level": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Educational Level",
            "description": "The level or levels of education for which this resource is intended.",
            "example": ["primary school", "secondary school", "university"]
          },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "in_language": {
            "items": { "type": "string" },
            "type": "array",
            "title": "In Language",
            "description": "The language(s) of the educational resource, in ISO639-3.",
            "example": ["eng", "fra", "spa"]
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "location": {
            "items": { "$ref": "#/components/schemas/Location" },
            "type": "array",
            "title": "Location"
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "pace": {
            "type": "string",
            "title": "Pace",
            "description": "The high-level study schedule available for this educational resource. \"self-paced\" is mostly used for MOOCS, Tutorials and short courses without interactive elements; \"scheduled\" is used for scheduled courses with interactive elements that is not a full-time engagement; \"full-time\" is used for programmes or intensive courses that require a full-time engagement from the student.",
            "example": "full-time"
          },
          "prerequisite": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Prerequisite",
            "description": "Minimum or recommended requirements to make use of this educational resource.",
            "example": [
              "undergraduate knowledge of statistics",
              "graduate knowledge of linear algebra"
            ]
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "target_audience": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Target Audience",
            "description": "The intended users of this educational resource.",
            "example": [
              "professionals",
              "students in higher education",
              "teachers in secondary school"
            ]
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of educational resource.",
            "example": "presentation"
          },
          "identifier": { "type": "integer", "title": "Identifier" }
        },
        "type": "object",
        "required": ["name", "identifier"],
        "title": "EducationalResourceRead",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "EventCreate": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date",
            "description": "The start date and time of the event, formatted using the ISO 8601 date-time format.",
            "example": "2021-02-03T15:15:00"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date",
            "description": "The end date and time of the event, formatted using the ISO 8601 date-time format.",
            "example": "2022-01-01T15:15:00"
          },
          "schedule": {
            "type": "string",
            "maxLength": 1800,
            "title": "Schedule",
            "description": "The agenda of the event.",
            "example": "10:00-10:30: Opening. 10:30-11:00 ..."
          },
          "registration_link": {
            "type": "string",
            "maxLength": 256,
            "title": "Registration Link",
            "description": "The url of the registration form.",
            "example": "https://example.com/registration-form"
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryCreate" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "content": { "$ref": "#/components/schemas/Text" },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "location": {
            "items": { "$ref": "#/components/schemas/Location" },
            "type": "array",
            "title": "Location"
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "mode": {
            "type": "string",
            "title": "Mode",
            "description": "The attendance mode of event.",
            "example": "offline"
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "organiser": {
            "type": "integer",
            "title": "Organiser",
            "description": "The person or organisation responsible for organising the event."
          },
          "performer": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Performer",
            "description": "Links to identifiers of the agents (person or organization) that is contributing to this event ",
            "example": []
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the event.",
            "example": "scheduled"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "EventCreate",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "EventRead": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date",
            "description": "The start date and time of the event, formatted using the ISO 8601 date-time format.",
            "example": "2021-02-03T15:15:00"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date",
            "description": "The end date and time of the event, formatted using the ISO 8601 date-time format.",
            "example": "2022-01-01T15:15:00"
          },
          "schedule": {
            "type": "string",
            "maxLength": 1800,
            "title": "Schedule",
            "description": "The agenda of the event.",
            "example": "10:00-10:30: Opening. 10:30-11:00 ..."
          },
          "registration_link": {
            "type": "string",
            "maxLength": 256,
            "title": "Registration Link",
            "description": "The url of the registration form.",
            "example": "https://example.com/registration-form"
          },
          "ai_resource_identifier": {
            "type": "integer",
            "title": "Ai Resource Identifier",
            "description": "This resource can be identified by its own identifier, but also by the resource_identifier."
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryRead" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "content": { "$ref": "#/components/schemas/Text" },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "location": {
            "items": { "$ref": "#/components/schemas/Location" },
            "type": "array",
            "title": "Location"
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "mode": {
            "type": "string",
            "title": "Mode",
            "description": "The attendance mode of event.",
            "example": "offline"
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "organiser": {
            "type": "integer",
            "title": "Organiser",
            "description": "The person or organisation responsible for organising the event."
          },
          "performer": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Performer",
            "description": "Links to identifiers of the agents (person or organization) that is contributing to this event ",
            "example": []
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the event.",
            "example": "scheduled"
          },
          "identifier": { "type": "integer", "title": "Identifier" }
        },
        "type": "object",
        "required": ["name", "identifier"],
        "title": "EventRead",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "ExperimentCreate": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "is_accessible_for_free": {
            "type": "boolean",
            "title": "Is Accessible For Free",
            "description": "A flag to signal that this asset is accessible at no cost."
          },
          "version": {
            "type": "string",
            "maxLength": 256,
            "title": "Version",
            "description": "The version of this asset.",
            "example": "1.1.0"
          },
          "pid": {
            "type": "string",
            "maxLength": 64,
            "title": "Pid",
            "description": "A permanent identifier for the model, for example a digital object identifier (DOI). Ideally a url.",
            "example": "https://doi.org/10.1000/182"
          },
          "experimental_workflow": {
            "type": "string",
            "maxLength": 1800,
            "title": "Experimental Workflow",
            "description": "A human readable description of the overall workflow of the experiment.",
            "example": "1) Load the dataset 2) run preprocessing code found in ... 3) run the model on the data."
          },
          "execution_settings": {
            "type": "string",
            "maxLength": 1800,
            "title": "Execution Settings",
            "description": "A human-readable description of the settings under which the experiment was executed."
          },
          "reproducibility_explanation": {
            "type": "string",
            "maxLength": 1800,
            "title": "Reproducibility Explanation",
            "description": "A description of how the output of the experiment matches the experiments in the paper."
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryCreate" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "badge": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Badge",
            "description": "Labels awarded on the basis of the reproducibility of this experiment.",
            "example": ["ACM Artifacts Evaluated - Reusable"]
          },
          "citation": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Citation",
            "description": "A bibliographic reference.",
            "example": []
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "distribution": {
            "items": { "$ref": "#/components/schemas/RunnableDistribution" },
            "type": "array",
            "title": "Distribution"
          },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "license": {
            "type": "string",
            "title": "License",
            "example": "https://creativecommons.org/share-your-work/public-domain/cc0/"
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "ExperimentCreate",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "ExperimentRead": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "is_accessible_for_free": {
            "type": "boolean",
            "title": "Is Accessible For Free",
            "description": "A flag to signal that this asset is accessible at no cost."
          },
          "version": {
            "type": "string",
            "maxLength": 256,
            "title": "Version",
            "description": "The version of this asset.",
            "example": "1.1.0"
          },
          "pid": {
            "type": "string",
            "maxLength": 64,
            "title": "Pid",
            "description": "A permanent identifier for the model, for example a digital object identifier (DOI). Ideally a url.",
            "example": "https://doi.org/10.1000/182"
          },
          "experimental_workflow": {
            "type": "string",
            "maxLength": 1800,
            "title": "Experimental Workflow",
            "description": "A human readable description of the overall workflow of the experiment.",
            "example": "1) Load the dataset 2) run preprocessing code found in ... 3) run the model on the data."
          },
          "execution_settings": {
            "type": "string",
            "maxLength": 1800,
            "title": "Execution Settings",
            "description": "A human-readable description of the settings under which the experiment was executed."
          },
          "reproducibility_explanation": {
            "type": "string",
            "maxLength": 1800,
            "title": "Reproducibility Explanation",
            "description": "A description of how the output of the experiment matches the experiments in the paper."
          },
          "ai_asset_identifier": {
            "type": "integer",
            "title": "Ai Asset Identifier"
          },
          "ai_resource_identifier": {
            "type": "integer",
            "title": "Ai Resource Identifier",
            "description": "This resource can be identified by its own identifier, but also by the resource_identifier."
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryRead" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "badge": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Badge",
            "description": "Labels awarded on the basis of the reproducibility of this experiment.",
            "example": ["ACM Artifacts Evaluated - Reusable"]
          },
          "citation": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Citation",
            "description": "A bibliographic reference.",
            "example": []
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "distribution": {
            "items": { "$ref": "#/components/schemas/RunnableDistribution" },
            "type": "array",
            "title": "Distribution"
          },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "license": {
            "type": "string",
            "title": "License",
            "example": "https://creativecommons.org/share-your-work/public-domain/cc0/"
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "identifier": { "type": "integer", "title": "Identifier" }
        },
        "type": "object",
        "required": ["name", "identifier"],
        "title": "ExperimentRead",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "Geo": {
        "properties": {
          "latitude": {
            "type": "number",
            "title": "Latitude",
            "description": "The latitude of a location in degrees (WGS84)",
            "example": 37.42242
          },
          "longitude": {
            "type": "number",
            "title": "Longitude",
            "description": "The longitude of a location in degrees (WGS84)",
            "example": -122.08585
          },
          "elevation_millimeters": {
            "type": "integer",
            "title": "Elevation Millimeters",
            "description": "The elevation in millimeters with tespect to the WGS84 ellipsoid"
          }
        },
        "type": "object",
        "title": "Geo",
        "description": "The geographic coordinates of a physical location"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Location": {
        "properties": {
          "address": { "$ref": "#/components/schemas/Address" },
          "geo": { "$ref": "#/components/schemas/Geo" }
        },
        "type": "object",
        "title": "Location",
        "description": "A physical location"
      },
      "MLModelCreate": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "is_accessible_for_free": {
            "type": "boolean",
            "title": "Is Accessible For Free",
            "description": "A flag to signal that this asset is accessible at no cost."
          },
          "version": {
            "type": "string",
            "maxLength": 256,
            "title": "Version",
            "description": "The version of this asset.",
            "example": "1.1.0"
          },
          "pid": {
            "type": "string",
            "maxLength": 64,
            "title": "Pid",
            "description": "A permanent identifier for the model, for example a digital object identifier (DOI). Ideally a url.",
            "example": "https://doi.org/10.1000/182"
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryCreate" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "citation": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Citation",
            "description": "A bibliographic reference.",
            "example": []
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "distribution": {
            "items": { "$ref": "#/components/schemas/RunnableDistribution" },
            "type": "array",
            "title": "Distribution"
          },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "license": {
            "type": "string",
            "title": "License",
            "example": "https://creativecommons.org/share-your-work/public-domain/cc0/"
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "related_experiment": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Related Experiment",
            "description": "Related experiments.",
            "example": []
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of machine learning model.",
            "example": "Large Language Model"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "MLModelCreate",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "MLModelRead": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "is_accessible_for_free": {
            "type": "boolean",
            "title": "Is Accessible For Free",
            "description": "A flag to signal that this asset is accessible at no cost."
          },
          "version": {
            "type": "string",
            "maxLength": 256,
            "title": "Version",
            "description": "The version of this asset.",
            "example": "1.1.0"
          },
          "pid": {
            "type": "string",
            "maxLength": 64,
            "title": "Pid",
            "description": "A permanent identifier for the model, for example a digital object identifier (DOI). Ideally a url.",
            "example": "https://doi.org/10.1000/182"
          },
          "ai_asset_identifier": {
            "type": "integer",
            "title": "Ai Asset Identifier"
          },
          "ai_resource_identifier": {
            "type": "integer",
            "title": "Ai Resource Identifier",
            "description": "This resource can be identified by its own identifier, but also by the resource_identifier."
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryRead" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "citation": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Citation",
            "description": "A bibliographic reference.",
            "example": []
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "distribution": {
            "items": { "$ref": "#/components/schemas/RunnableDistribution" },
            "type": "array",
            "title": "Distribution"
          },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "license": {
            "type": "string",
            "title": "License",
            "example": "https://creativecommons.org/share-your-work/public-domain/cc0/"
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "related_experiment": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Related Experiment",
            "description": "Related experiments.",
            "example": []
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of machine learning model.",
            "example": "Large Language Model"
          },
          "identifier": { "type": "integer", "title": "Identifier" }
        },
        "type": "object",
        "required": ["name", "identifier"],
        "title": "MLModelRead",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "NewsCreate": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "headline": {
            "type": "string",
            "maxLength": 256,
            "title": "Headline",
            "description": "A short headline given to this news item.",
            "example": "A headline to show on top of the page."
          },
          "alternative_headline": {
            "type": "string",
            "maxLength": 256,
            "title": "Alternative Headline",
            "description": "An alternative headline given to this news item.",
            "example": "An alternative headline."
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryCreate" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "category": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Category",
            "description": "News categories related to this item.",
            "example": [
              "research: education",
              "research: awards",
              "business: robotics"
            ]
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "content": { "$ref": "#/components/schemas/Text" },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "NewsCreate",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "NewsRead": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "headline": {
            "type": "string",
            "maxLength": 256,
            "title": "Headline",
            "description": "A short headline given to this news item.",
            "example": "A headline to show on top of the page."
          },
          "alternative_headline": {
            "type": "string",
            "maxLength": 256,
            "title": "Alternative Headline",
            "description": "An alternative headline given to this news item.",
            "example": "An alternative headline."
          },
          "ai_resource_identifier": {
            "type": "integer",
            "title": "Ai Resource Identifier",
            "description": "This resource can be identified by its own identifier, but also by the resource_identifier."
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryRead" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "category": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Category",
            "description": "News categories related to this item.",
            "example": [
              "research: education",
              "research: awards",
              "business: robotics"
            ]
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "content": { "$ref": "#/components/schemas/Text" },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "identifier": { "type": "integer", "title": "Identifier" }
        },
        "type": "object",
        "required": ["name", "identifier"],
        "title": "NewsRead",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "Note": {
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 1800,
            "title": "Value",
            "description": "The string value",
            "example": "A brief record of points or ideas about this AI resource."
          }
        },
        "type": "object",
        "required": ["value"],
        "title": "Note",
        "description": "Extra textual information about an entity"
      },
      "OrganisationCreate": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "date_founded": {
            "type": "string",
            "format": "date",
            "title": "Date Founded",
            "description": "The date on which the organisation was founded.",
            "example": "2022-01-01"
          },
          "legal_name": {
            "type": "string",
            "maxLength": 256,
            "title": "Legal Name",
            "description": "The official legal name of the organisation.",
            "example": "The Organisation Name"
          },
          "ai_relevance": {
            "type": "string",
            "maxLength": 1800,
            "title": "Ai Relevance",
            "description": "A description of positioning of the organisation within the broader European AI ecosystem.",
            "example": "Part of CLAIRE, focussing on explainable AI."
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryCreate" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "contact_details": {
            "type": "integer",
            "title": "Contact Details",
            "description": "The contact details by which this organisation can be reached"
          },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "member": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Member",
            "description": "The identifier of an agent (e.g. organisation or person) that is a member of this organisation."
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of organisation.",
            "example": "Research Institution"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "OrganisationCreate",
        "description": "Many resources, such as organisation and member, are a type of Agent\nand should therefore inherit from this Agent class.\nShared fields can be defined on this class."
      },
      "OrganisationRead": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "date_founded": {
            "type": "string",
            "format": "date",
            "title": "Date Founded",
            "description": "The date on which the organisation was founded.",
            "example": "2022-01-01"
          },
          "legal_name": {
            "type": "string",
            "maxLength": 256,
            "title": "Legal Name",
            "description": "The official legal name of the organisation.",
            "example": "The Organisation Name"
          },
          "ai_relevance": {
            "type": "string",
            "maxLength": 1800,
            "title": "Ai Relevance",
            "description": "A description of positioning of the organisation within the broader European AI ecosystem.",
            "example": "Part of CLAIRE, focussing on explainable AI."
          },
          "agent_identifier": {
            "type": "integer",
            "title": "Agent Identifier"
          },
          "ai_resource_identifier": {
            "type": "integer",
            "title": "Ai Resource Identifier",
            "description": "This resource can be identified by its own identifier, but also by the resource_identifier."
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryRead" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "contact_details": {
            "type": "integer",
            "title": "Contact Details",
            "description": "The contact details by which this organisation can be reached"
          },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "member": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Member",
            "description": "The identifier of an agent (e.g. organisation or person) that is a member of this organisation."
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of organisation.",
            "example": "Research Institution"
          },
          "identifier": { "type": "integer", "title": "Identifier" }
        },
        "type": "object",
        "required": ["name", "identifier"],
        "title": "OrganisationRead",
        "description": "Many resources, such as organisation and member, are a type of Agent\nand should therefore inherit from this Agent class.\nShared fields can be defined on this class."
      },
      "PersonCreate": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "given_name": {
            "type": "string",
            "maxLength": 256,
            "title": "Given Name",
            "description": "Also known as forename or first name. The part of the personal name that identifies a person, potentially with a middle name as well.",
            "example": "Jane"
          },
          "surname": {
            "type": "string",
            "maxLength": 256,
            "title": "Surname",
            "description": "Also known as last name or family name. The mostly hereditary part of the personal name.",
            "example": "Doe"
          },
          "price_per_hour_euro": {
            "type": "number",
            "title": "Price Per Hour Euro",
            "description": "A ballpark figure of the per hour cost to hire this person.",
            "example": 75.5
          },
          "wants_to_be_contacted": {
            "type": "boolean",
            "title": "Wants To Be Contacted",
            "description": "Does this person want to be contacted about new opportunities relating their expertise?",
            "default": false
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryCreate" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "contact_details": {
            "type": "integer",
            "title": "Contact Details",
            "description": "The contact details by which this person can be reached"
          },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "expertise": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Expertise",
            "description": "A skill this person masters.",
            "example": ["transfer learning"]
          },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "language": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Language",
            "description": "A language this person masters, in ISO639-3",
            "example": ["eng", "fra", "spa"]
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "PersonCreate",
        "description": "Many resources, such as organisation and member, are a type of Agent\nand should therefore inherit from this Agent class.\nShared fields can be defined on this class."
      },
      "PersonRead": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "given_name": {
            "type": "string",
            "maxLength": 256,
            "title": "Given Name",
            "description": "Also known as forename or first name. The part of the personal name that identifies a person, potentially with a middle name as well.",
            "example": "Jane"
          },
          "surname": {
            "type": "string",
            "maxLength": 256,
            "title": "Surname",
            "description": "Also known as last name or family name. The mostly hereditary part of the personal name.",
            "example": "Doe"
          },
          "price_per_hour_euro": {
            "type": "number",
            "title": "Price Per Hour Euro",
            "description": "A ballpark figure of the per hour cost to hire this person.",
            "example": 75.5
          },
          "wants_to_be_contacted": {
            "type": "boolean",
            "title": "Wants To Be Contacted",
            "description": "Does this person want to be contacted about new opportunities relating their expertise?",
            "default": false
          },
          "agent_identifier": {
            "type": "integer",
            "title": "Agent Identifier"
          },
          "ai_resource_identifier": {
            "type": "integer",
            "title": "Ai Resource Identifier",
            "description": "This resource can be identified by its own identifier, but also by the resource_identifier."
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryRead" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "contact_details": {
            "type": "integer",
            "title": "Contact Details",
            "description": "The contact details by which this person can be reached"
          },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "expertise": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Expertise",
            "description": "A skill this person masters.",
            "example": ["transfer learning"]
          },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "language": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Language",
            "description": "A language this person masters, in ISO639-3",
            "example": ["eng", "fra", "spa"]
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "identifier": { "type": "integer", "title": "Identifier" }
        },
        "type": "object",
        "required": ["name", "identifier"],
        "title": "PersonRead",
        "description": "Many resources, such as organisation and member, are a type of Agent\nand should therefore inherit from this Agent class.\nShared fields can be defined on this class."
      },
      "PlatformCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the platform, such as huggingface, openml or zenodo. Preferably using snake_case.",
            "example": "example_platform"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "PlatformCreate"
      },
      "PlatformRead": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the platform, such as huggingface, openml or zenodo. Preferably using snake_case.",
            "example": "example_platform"
          },
          "identifier": { "type": "integer", "title": "Identifier" }
        },
        "type": "object",
        "required": ["name", "identifier"],
        "title": "PlatformRead"
      },
      "ProjectCreate": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date",
            "description": "The start date and time of the project as ISO 8601.",
            "example": "2021-02-03T15:15:00"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date",
            "description": "The end date and time of the project as ISO 8601.",
            "example": "2022-01-01T15:15:00"
          },
          "total_cost_euro": {
            "type": "number",
            "title": "Total Cost Euro",
            "description": "The total budget of the project in euros.",
            "example": 1000000
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryCreate" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "coordinator": {
            "type": "integer",
            "title": "Coordinator",
            "description": "The coordinating organisation of this project."
          },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "funder": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Funder",
            "description": "Identifiers of organizations that support this project through some kind of financial contribution. ",
            "example": []
          },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "participant": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Participant",
            "description": "Identifiers of members of this project. ",
            "example": []
          },
          "produced": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Produced",
            "description": "Identifiers of AIAssets that are created in this project.",
            "example": []
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "used": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Used",
            "description": "Identifiers of AIAssets that are used (but not created) in this project.",
            "example": []
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "ProjectCreate",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "ProjectRead": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date",
            "description": "The start date and time of the project as ISO 8601.",
            "example": "2021-02-03T15:15:00"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date",
            "description": "The end date and time of the project as ISO 8601.",
            "example": "2022-01-01T15:15:00"
          },
          "total_cost_euro": {
            "type": "number",
            "title": "Total Cost Euro",
            "description": "The total budget of the project in euros.",
            "example": 1000000
          },
          "ai_resource_identifier": {
            "type": "integer",
            "title": "Ai Resource Identifier",
            "description": "This resource can be identified by its own identifier, but also by the resource_identifier."
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryRead" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "coordinator": {
            "type": "integer",
            "title": "Coordinator",
            "description": "The coordinating organisation of this project."
          },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "funder": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Funder",
            "description": "Identifiers of organizations that support this project through some kind of financial contribution. ",
            "example": []
          },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "participant": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Participant",
            "description": "Identifiers of members of this project. ",
            "example": []
          },
          "produced": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Produced",
            "description": "Identifiers of AIAssets that are created in this project.",
            "example": []
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "used": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Used",
            "description": "Identifiers of AIAssets that are used (but not created) in this project.",
            "example": []
          },
          "identifier": { "type": "integer", "title": "Identifier" }
        },
        "type": "object",
        "required": ["name", "identifier"],
        "title": "ProjectRead",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "PublicationCreate": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "is_accessible_for_free": {
            "type": "boolean",
            "title": "Is Accessible For Free",
            "description": "A flag to signal that this asset is accessible at no cost."
          },
          "version": {
            "type": "string",
            "maxLength": 256,
            "title": "Version",
            "description": "The version of this asset.",
            "example": "1.1.0"
          },
          "permanent_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Permanent Identifier",
            "description": "A Permanent Identifier (e.g. DOI) for the entity",
            "example": "http://dx.doi.org/10.1093/ajae/aaq063"
          },
          "isbn": {
            "type": "string",
            "maxLength": 13,
            "minLength": 10,
            "title": "Isbn",
            "description": "The International Standard Book Number, ISBN, used to identify published books or, more rarely, journal issues.",
            "example": "9783161484100"
          },
          "issn": {
            "type": "string",
            "maxLength": 8,
            "minLength": 8,
            "title": "Issn",
            "description": "The International Standard Serial Number, ISSN, an identifier for serial publications.",
            "example": "20493630"
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryCreate" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "citation": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Citation",
            "description": "A bibliographic reference.",
            "example": []
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "content": { "$ref": "#/components/schemas/Text" },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "distribution": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Distribution"
          },
          "documents": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Documents",
            "description": "The identifier of an AI asset for which the Knowledge Asset acts as an information source",
            "example": []
          },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "license": {
            "type": "string",
            "title": "License",
            "example": "https://creativecommons.org/share-your-work/public-domain/cc0/"
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of publication.",
            "example": "journal"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "PublicationCreate",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "PublicationRead": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "is_accessible_for_free": {
            "type": "boolean",
            "title": "Is Accessible For Free",
            "description": "A flag to signal that this asset is accessible at no cost."
          },
          "version": {
            "type": "string",
            "maxLength": 256,
            "title": "Version",
            "description": "The version of this asset.",
            "example": "1.1.0"
          },
          "permanent_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Permanent Identifier",
            "description": "A Permanent Identifier (e.g. DOI) for the entity",
            "example": "http://dx.doi.org/10.1093/ajae/aaq063"
          },
          "isbn": {
            "type": "string",
            "maxLength": 13,
            "minLength": 10,
            "title": "Isbn",
            "description": "The International Standard Book Number, ISBN, used to identify published books or, more rarely, journal issues.",
            "example": "9783161484100"
          },
          "issn": {
            "type": "string",
            "maxLength": 8,
            "minLength": 8,
            "title": "Issn",
            "description": "The International Standard Serial Number, ISSN, an identifier for serial publications.",
            "example": "20493630"
          },
          "ai_asset_identifier": {
            "type": "integer",
            "title": "Ai Asset Identifier"
          },
          "ai_resource_identifier": {
            "type": "integer",
            "title": "Ai Resource Identifier",
            "description": "This resource can be identified by its own identifier, but also by the resource_identifier."
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryRead" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "citation": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Citation",
            "description": "A bibliographic reference.",
            "example": []
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "content": { "$ref": "#/components/schemas/Text" },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "distribution": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Distribution"
          },
          "documents": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Documents",
            "description": "The identifier of an AI asset for which the Knowledge Asset acts as an information source",
            "example": []
          },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "license": {
            "type": "string",
            "title": "License",
            "example": "https://creativecommons.org/share-your-work/public-domain/cc0/"
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of publication.",
            "example": "journal"
          },
          "identifier": { "type": "integer", "title": "Identifier" }
        },
        "type": "object",
        "required": ["name", "identifier"],
        "title": "PublicationRead",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "RunnableDistribution": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "checksum": {
            "type": "string",
            "maxLength": 1800,
            "title": "Checksum",
            "description": "The value of a checksum algorithm ran on this content.",
            "example": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
          },
          "checksum_algorithm": {
            "type": "string",
            "maxLength": 64,
            "title": "Checksum Algorithm",
            "description": "The checksum algorithm.",
            "example": "sha256"
          },
          "copyright": {
            "type": "string",
            "maxLength": 256,
            "title": "Copyright",
            "example": "2010-2020 Example Company. All rights reserved."
          },
          "content_url": {
            "type": "string",
            "maxLength": 256,
            "title": "Content Url",
            "example": "https://www.example.com/dataset/file.csv"
          },
          "content_size_kb": {
            "type": "integer",
            "title": "Content Size Kb",
            "example": 10000
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this Distribution was first published on an external platform. ",
            "example": "2022-01-01T15:15:00.000"
          },
          "description": {
            "type": "string",
            "maxLength": 1800,
            "title": "Description",
            "example": "Description of this file."
          },
          "encoding_format": {
            "type": "string",
            "maxLength": 256,
            "title": "Encoding Format",
            "description": "The mimetype of this file.",
            "example": "text/csv"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "Name of this file."
          },
          "technology_readiness_level": {
            "type": "integer",
            "title": "Technology Readiness Level",
            "description": "The technology readiness level (TRL) of the distribution. TRL 1 is the lowest and stands for 'Basic principles observed', TRL 9 is the highest and stands for 'actual system proven in operational environment'.",
            "example": 1
          },
          "installation_script": {
            "type": "string",
            "maxLength": 256,
            "title": "Installation Script",
            "description": "An url pointing to a script that can be run to setup the environment necessary for running this distribution. This can be a relative url, if this distribution is a file archive.",
            "example": "./install.sh"
          },
          "installation": {
            "type": "string",
            "maxLength": 1800,
            "title": "Installation",
            "description": "A human readable explanation of the installation, primarily meant as alternative for when there is no installation script.",
            "example": "Build the Dockerfile"
          },
          "installation_time_milliseconds": {
            "type": "integer",
            "title": "Installation Time Milliseconds",
            "description": "An illustrative time that the installation might typically take.",
            "example": 100
          },
          "deployment_script": {
            "type": "string",
            "maxLength": 256,
            "title": "Deployment Script",
            "description": "An url pointing to a script that can be run to use this resource. This can be a relative url, if this distribution is a file archive.",
            "example": "./run.sh"
          },
          "deployment": {
            "type": "string",
            "maxLength": 1800,
            "title": "Deployment",
            "description": "A human readable explanation of the deployment, primarily meant as alternative for when there is no installation script.",
            "example": "You can run the run.py file using python3. See README.md for required arguments."
          },
          "deployment_time_milliseconds": {
            "type": "integer",
            "title": "Deployment Time Milliseconds",
            "description": "An illustrative time that the deployment might typically take.",
            "example": 100
          },
          "os_requirement": {
            "type": "string",
            "maxLength": 256,
            "title": "Os Requirement",
            "description": "A human readable explanation for the required os.",
            "example": "Windows 11."
          },
          "dependency": {
            "type": "string",
            "maxLength": 256,
            "title": "Dependency",
            "description": "A human readable explanation of (software) dependencies.",
            "example": "Python packages as listed in requirements.txt."
          },
          "hardware_requirement": {
            "type": "string",
            "maxLength": 256,
            "title": "Hardware Requirement",
            "description": "A human readable explanation of hardware requirements.",
            "example": "4GB RAM; 100MB storage; 1GHz processor with 8 cores."
          }
        },
        "type": "object",
        "required": ["content_url"],
        "title": "RunnableDistribution",
        "description": "All or part of an AIAsset in downloadable form"
      },
      "SchemaDotOrgContext": {
        "properties": {
          "@vocab": {
            "type": "string",
            "title": "@Vocab",
            "default": "http://schema.org/",
            "constant": true
          }
        },
        "type": "object",
        "title": "SchemaDotOrgContext"
      },
      "SchemaDotOrgDataDownload": {
        "properties": {
          "@type": {
            "type": "string",
            "title": "@Type",
            "default": "DataDownload",
            "constant": true
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the item."
          },
          "contentUrl": {
            "type": "string",
            "title": "Contenturl",
            "description": "Actual bytes of the media object, for example the image file or video file."
          },
          "contentSize": {
            "type": "string",
            "title": "Contentsize",
            "description": "File size in (mega/kilo) bytes."
          },
          "encodingFormat": {
            "type": "string",
            "title": "Encodingformat",
            "description": "Media type typically expressed using a MIME format (see [IANA site](http://www.iana.org/assignments/media-types/media-types.xhtml) and [MDN reference](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types))e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.).In cases where a [[CreativeWork]] has several media type representations, [[encoding]]can be used to indicate each [[MediaObject]] alongside particular [[encodingFormat]]information. Unregistered or niche encoding and file formats can be indicated insteadvia the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry."
          }
        },
        "type": "object",
        "required": ["contentUrl"],
        "title": "SchemaDotOrgDataDownload",
        "description": "A dataset in downloadable form.\n\nSee: https://schema.org/DataDownload"
      },
      "SchemaDotOrgDataset": {
        "properties": {
          "@context": {
            "allOf": [{ "$ref": "#/components/schemas/SchemaDotOrgContext" }],
            "title": "@Context",
            "default": { "vocab_": "http://schema.org/" },
            "constant": true
          },
          "@type": {
            "type": "string",
            "title": "@Type",
            "default": "Dataset",
            "constant": true
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the item."
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "A description of the item."
          },
          "identifier": {
            "type": "string",
            "title": "Identifier",
            "description": "The AIoD identifier"
          },
          "alternateName": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "string" }
            ],
            "title": "Alternatename",
            "description": "An alias for the item."
          },
          "citation": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "string" }
            ],
            "title": "Citation",
            "description": "A reference to another creative work, such as another publication, web page,scholarly article, etc."
          },
          "creator": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/SchemaDotOrgOrganization" },
                    { "$ref": "#/components/schemas/SchemaDotOrgPerson" }
                  ]
                },
                "type": "array"
              },
              { "$ref": "#/components/schemas/SchemaDotOrgOrganization" },
              { "$ref": "#/components/schemas/SchemaDotOrgPerson" }
            ],
            "title": "Creator",
            "description": "The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork."
          },
          "dateModified": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "string", "format": "date" }
            ],
            "title": "Datemodified",
            "description": "The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed."
          },
          "datePublished": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "string", "format": "date" }
            ],
            "title": "Datepublished",
            "description": "Date of first broadcast/publication."
          },
          "isAccessibleForFree": {
            "type": "boolean",
            "const": true,
            "title": "Isaccessibleforfree",
            "description": "A flag to signal that the item, event, or place is accessible for free.",
            "default": true
          },
          "keywords": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "string" }
            ],
            "title": "Keywords",
            "description": "Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas."
          },
          "sameAs": {
            "type": "string",
            "title": "Sameas",
            "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website."
          },
          "version": {
            "type": "string",
            "title": "Version",
            "description": "The version of the CreativeWork embodied by a specified resource."
          },
          "url": {
            "type": "string",
            "title": "Url",
            "description": "URL of the item."
          },
          "distribution": {
            "anyOf": [
              { "$ref": "#/components/schemas/SchemaDotOrgDataDownload" },
              {
                "items": {
                  "$ref": "#/components/schemas/SchemaDotOrgDataDownload"
                },
                "type": "array"
              }
            ],
            "title": "Distribution",
            "description": "A downloadable form of this dataset, at a specific location, in a specific format."
          },
          "funder": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/SchemaDotOrgOrganization" },
                    { "$ref": "#/components/schemas/SchemaDotOrgPerson" }
                  ]
                },
                "type": "array"
              },
              { "$ref": "#/components/schemas/SchemaDotOrgOrganization" },
              { "$ref": "#/components/schemas/SchemaDotOrgPerson" }
            ],
            "title": "Funder",
            "description": "A person or organization that supports (sponsors) something through some kind of financialcontribution."
          },
          "issn": {
            "anyOf": [
              { "type": "string" },
              { "items": { "type": "string" }, "type": "array" }
            ],
            "title": "Issn",
            "description": "The International Standard Serial Number (ISSN) that identifies this serial publication. You can repeat this property to identify different formats of, or the linking ISSN (ISSN-L) for, this serial publication."
          },
          "license": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "string" }
            ],
            "title": "License",
            "description": "A license document that applies to this content, typically indicated by URL."
          },
          "measurementTechnique": {
            "anyOf": [
              { "type": "string" },
              { "items": { "type": "string" }, "type": "array" }
            ],
            "title": "Measurementtechnique",
            "description": "A technique or technology used in a [[Dataset]] (or [[DataDownload]], [[DataCatalog]]), corresponding to the method used for measuring the corresponding variable(s) (described using [[variableMeasured]]). This is oriented towards scientific and scholarly dataset publication but may have broader applicability; it is not intended as a full representation of measurement, but rather as a high level summary for dataset discovery. For example, if [[variableMeasured]] is: molecule concentration, [[measurementTechnique]] could be: \"mass spectrometry\" or \"nmr spectroscopy\" or \"colorimetry\" or \"immunofluorescence\". If the [[variableMeasured]] is \"depression rating\", the [[measurementTechnique]] could be \"Zung Scale\" or \"HAM-D\" or \"Beck Depression Inventory\". If there are several [[variableMeasured]] properties recorded for some given data object, use a [[PropertyValue]] for each [[variableMeasured]] and attach the corresponding [[measurementTechnique]]."
          },
          "size": {
            "type": "string",
            "title": "Size",
            "description": "A standardized size of a product or creative work, specified either through a simple textual string (for example 'XL', '32Wx34L'), a QuantitativeValue with a unitCode,"
          },
          "temporalCoverage": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "string" }
            ],
            "title": "Temporalcoverage",
            "description": "The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in [ISO 8601 time interval format](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals).In the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written \"2011/2012\"). Other forms of content e.g. ScholarlyArticle, Book, TVSeries or TVEpisode may indicate their temporalCoverage in broader terms - textually or via well-known URL. Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via \"1939/1945\". Open-ended date ranges can be written with \"..\" in place of the end date. For example, \"2015-11/..\" indicates a range beginning in November 2015 and with no specified final date. This is tentative and might be updated in future when ISO 8601 is officially updated."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["name", "identifier"],
        "title": "SchemaDotOrgDataset"
      },
      "SchemaDotOrgOrganization": {
        "properties": {
          "@type": {
            "type": "string",
            "title": "@Type",
            "default": "Organization",
            "constant": true
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the item."
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "SchemaDotOrgOrganization",
        "description": "An organization such as a school, NGO, corporation, club, etc.\n\nSee: https://schema.org/Organization"
      },
      "SchemaDotOrgPerson": {
        "properties": {
          "@type": {
            "type": "string",
            "title": "@Type",
            "default": "Person",
            "constant": true
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the item."
          },
          "givenName": {
            "type": "string",
            "title": "Givenname",
            "description": "Given name. In the U.S., the first name of a Person."
          },
          "familyName": {
            "type": "string",
            "title": "Familyname",
            "description": "Family name. In the U.S., the last name of a Person."
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "SchemaDotOrgPerson",
        "description": "A person (alive, dead, undead, or fictional).\n\nSee: https://schema.org/Person"
      },
      "ServiceCreate": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "slogan": {
            "type": "string",
            "maxLength": 256,
            "title": "Slogan",
            "description": "A slogan or motto associated with the service.",
            "example": "Making your Smart Paradigm Shifts more Disruptive"
          },
          "terms_of_service": {
            "type": "string",
            "maxLength": 1800,
            "title": "Terms Of Service",
            "description": "Human-readable terms of service documentation.",
            "example": "Your use of this service is subject to the following terms: [...]."
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryCreate" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "ServiceCreate",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "ServiceRead": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "slogan": {
            "type": "string",
            "maxLength": 256,
            "title": "Slogan",
            "description": "A slogan or motto associated with the service.",
            "example": "Making your Smart Paradigm Shifts more Disruptive"
          },
          "terms_of_service": {
            "type": "string",
            "maxLength": 1800,
            "title": "Terms Of Service",
            "description": "Human-readable terms of service documentation.",
            "example": "Your use of this service is subject to the following terms: [...]."
          },
          "ai_resource_identifier": {
            "type": "integer",
            "title": "Ai Resource Identifier",
            "description": "This resource can be identified by its own identifier, but also by the resource_identifier."
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryRead" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "identifier": { "type": "integer", "title": "Identifier" }
        },
        "type": "object",
        "required": ["name", "identifier"],
        "title": "ServiceRead",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "SpdxChecksum": {
        "properties": {
          "@id": { "type": "string", "title": "@Id" },
          "@type": {
            "type": "string",
            "const": "spdx:Checksum",
            "title": "@Type",
            "default": "spdx:Checksum"
          },
          "algorithm": { "type": "string", "title": "Algorithm" },
          "checksumValue": { "type": "string", "title": "Checksumvalue" }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["@id", "algorithm", "checksumValue"],
        "title": "SpdxChecksum",
        "description": "Base class for all DCAT-AP objects"
      },
      "TeamCreate": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "price_per_hour_euro": {
            "type": "number",
            "title": "Price Per Hour Euro",
            "description": "A ballpark figure of the per hour cost to hire this team.",
            "example": 175.5
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "The number of persons that are part of this team.",
            "example": 10
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryCreate" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "member": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Member",
            "description": "The persons that are a member of this team. The leader should also be added as contact.",
            "example": []
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "organisation": {
            "type": "integer",
            "title": "Organisation",
            "description": "The organisation of which this team is a part."
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "TeamCreate",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "TeamRead": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 64,
            "title": "Platform",
            "description": "The external platform from which this resource originates. Leave empty if this item originates from AIoD. If platform is not None, the platform_resource_identifier should be set as well.",
            "example": "example"
          },
          "platform_resource_identifier": {
            "type": "string",
            "maxLength": 256,
            "title": "Platform Resource Identifier",
            "description": "A unique identifier issued by the external platform that's specified in 'platform'. Leave empty if this item is not part of an external platform.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "title": "Name",
            "example": "The name of this resource"
          },
          "date_published": {
            "type": "string",
            "format": "date-time",
            "title": "Date Published",
            "description": "The datetime (utc) on which this resource was first published on an external platform. Note the difference between `.aiod_entry.date_created` and `.date_published`: the former is automatically set to the datetime the resource was created on AIoD, while the latter can optionally be set to an earlier datetime that the resource was published on an external platform.",
            "example": "2022-01-01T15:15:00.000"
          },
          "same_as": {
            "type": "string",
            "maxLength": 256,
            "title": "Same As",
            "description": "Url of a reference Web page that unambiguously indicates this resource's identity.",
            "example": "https://www.example.com/resource/this_resource"
          },
          "price_per_hour_euro": {
            "type": "number",
            "title": "Price Per Hour Euro",
            "description": "A ballpark figure of the per hour cost to hire this team.",
            "example": 175.5
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "The number of persons that are part of this team.",
            "example": 10
          },
          "ai_resource_identifier": {
            "type": "integer",
            "title": "Ai Resource Identifier",
            "description": "This resource can be identified by its own identifier, but also by the resource_identifier."
          },
          "aiod_entry": { "$ref": "#/components/schemas/AIoDEntryRead" },
          "alternate_name": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Alternate Name",
            "description": "An alias for the item, commonly used for the resource instead of the name.",
            "example": ["alias 1", "alias 2"]
          },
          "application_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Application Area",
            "description": "The objective of this AI resource.",
            "example": [
              "Fraud Prevention",
              "Voice Assistance",
              "Disease Classification"
            ]
          },
          "contact": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Contact",
            "description": "Contact information of persons/organisations that can be contacted about this resource."
          },
          "creator": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Creator",
            "description": "Contact information of persons/organisations that created this resource."
          },
          "description": { "$ref": "#/components/schemas/Text" },
          "has_part": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Has Part"
          },
          "industrial_sector": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Industrial Sector",
            "description": "A business domain where a resource is or can be used.",
            "example": ["Finance", "eCommerce", "Healthcare"]
          },
          "is_part_of": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Is Part Of"
          },
          "keyword": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Keyword",
            "description": "Keywords or tags used to describe this resource, providing additional context.",
            "example": ["keyword1", "keyword2"]
          },
          "media": {
            "items": { "$ref": "#/components/schemas/Distribution" },
            "type": "array",
            "title": "Media",
            "description": "Images or videos depicting the resource or associated with it. "
          },
          "member": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Member",
            "description": "The persons that are a member of this team. The leader should also be added as contact.",
            "example": []
          },
          "note": {
            "items": { "$ref": "#/components/schemas/Note" },
            "type": "array",
            "title": "Note",
            "description": "Notes on this AI resource."
          },
          "organisation": {
            "type": "integer",
            "title": "Organisation",
            "description": "The organisation of which this team is a part."
          },
          "relevant_link": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Relevant Link",
            "description": "URLs of relevant resources. These resources should not be part of AIoD (use relevant_resource otherwise). This field should only be used if there is no more specific field.",
            "example": [
              "https://www.example.com/a_relevant_link",
              "https://www.example.com/another_relevant_link"
            ]
          },
          "relevant_resource": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant Resource"
          },
          "relevant_to": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Relevant To"
          },
          "research_area": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Research Area",
            "description": "The research area is similar to the scientific_domain, but more high-level.",
            "example": ["Explainable AI", "Physical AI"]
          },
          "scientific_domain": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Scientific Domain",
            "description": "The scientific domain is related to the methods with which an objective is reached.",
            "example": [
              "Anomaly Detection",
              "Voice Recognition",
              "Computer Vision."
            ]
          },
          "identifier": { "type": "integer", "title": "Identifier" }
        },
        "type": "object",
        "required": ["name", "identifier"],
        "title": "TeamRead",
        "description": "The AIoDConcept is the top-level (abstract) class in AIoD."
      },
      "Text": {
        "properties": {
          "plain": {
            "type": "string",
            "maxLength": 65535,
            "title": "Plain",
            "example": "Plain text."
          },
          "html": {
            "type": "string",
            "maxLength": 65535,
            "title": "Html",
            "example": "<p>Text with <strong>html formatting</strong>.</p>"
          }
        },
        "type": "object",
        "title": "Text",
        "description": "Provide text in different formats. Ideally only one of them is filled, or all fields\ncontain the same content with different formatting."
      },
      "VCardIndividual": {
        "properties": {
          "@id": { "type": "string", "title": "@Id" },
          "@type": {
            "type": "string",
            "const": "vcard:Individual",
            "title": "@Type",
            "default": "vcard:Individual"
          },
          "vcard:fn": {
            "type": "string",
            "title": "Vcard:Fn",
            "description": "The formatted text corresponding to the name of the object"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["@id", "vcard:fn"],
        "title": "VCardIndividual",
        "description": "Base class for all DCAT-AP objects"
      },
      "VCardOrganisation": {
        "properties": {
          "@id": { "type": "string", "title": "@Id" },
          "@type": {
            "type": "string",
            "const": "vcard:Organisation",
            "title": "@Type",
            "default": "vcard:Organisation"
          },
          "vcard:fn": {
            "type": "string",
            "title": "Vcard:Fn",
            "description": "The formatted text corresponding to the name of the object"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["@id", "vcard:fn"],
        "title": "VCardOrganisation",
        "description": "Base class for all DCAT-AP objects"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "XSDDateTime": {
        "properties": {
          "@type": {
            "type": "string",
            "const": "xsd:dateTime",
            "title": "@Type",
            "default": "xsd:dateTime"
          },
          "@value": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "string", "format": "date" }
            ],
            "title": "@Value"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["@value"],
        "title": "XSDDateTime"
      }
    },
    "securitySchemes": {
      "OpenIdConnect": {
        "type": "openIdConnect",
        "openIdConnectUrl": "https://aiod-dev.i3a.es/aiod-auth/realms/aiod/.well-known/openid-configuration"
      }
    }
  }
}
