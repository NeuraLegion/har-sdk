{
  "openapi": "3.1.0",
  "info": {
    "title": "ucic API",
    "description": "ucic API",
    "version": "1.0.0"
  },
  "servers": [{ "url": "http://ucic.extremist.gay:8080" }],
  "paths": {
    "/accounts": {
      "get": {
        "description": "This endpoint retrieves all accounts. It requires a \"secret\" header with the value \"meow\". <br> It responds with a list of all accounts in the system. (For debugging purposes)",
        "parameters": [
          {
            "name": "secret",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "example": "meow" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/AccountResponse" }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{id}/creator": {
      "get": {
        "description": "This endpoint retrieves a specific account's display details by ID. <br> It responds with the account's display details.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDisplayResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{id}/follow": {
      "post": {
        "description": "This endpoint allows a specific account to follow another account by ID. It requires \"token\" and \"accountId\" headers for authentication. <br> It responds with a success message if the follow action is successful.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "accountId",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "examples": {
                  "Example#1": {
                    "description": "",
                    "value": {
                      "error": "account",
                      "message": "Incorrect token",
                      "status": "null",
                      "data": "null"
                    }
                  }
                }
              },
              "text/plain": {
                "schema": { "type": "string" },
                "examples": { "Example#1": { "value": "" } }
              }
            }
          }
        }
      }
    },
    "/accounts/{id}/following": {
      "get": {
        "description": "This endpoint retrieves a specific account's followed accounts by ID. It requires a \"token\" header for authentication. <br> It responds with the account's followed accounts.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountDisplayResponse"
                  }
                },
                "examples": {
                  "Example#1": {
                    "description": "",
                    "value": {
                      "error": "account",
                      "message": "Incorrect token",
                      "status": "null",
                      "data": "null"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/login": {
      "post": {
        "description": "This endpoint allows an account to log in. It accepts a POST request with a body containing the account's email and password. <br> It responds with a token and account ID if the login is successful.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginAccount" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {},
                "examples": {
                  "Example#1": {
                    "description": "",
                    "value": {
                      "error": "account",
                      "message": "Incorrect username or password",
                      "status": "null",
                      "data": "null"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{id}/playlists": {
      "get": {
        "description": "This endpoint retrieves a specific account's playlists by ID. <br> It responds with the account's playlists.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlaylistDisplayResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{id}/recommended-videos": {
      "get": {
        "description": "This endpoint retrieves recommended videos for a specific account by ID. It requires a \"token\" header for authentication and a \"by\" query parameter to specify the recommendation method. <br> It responds with a list of recommended videos.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "by",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "enum": ["tags", "following"] }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VideoDisplayResponse"
                  }
                },
                "examples": {
                  "Example#1": {
                    "description": "",
                    "value": {
                      "error": "account",
                      "message": "Incorrect token",
                      "status": "null",
                      "data": "null"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/register": {
      "post": {
        "description": "This endpoint allows a new account to register. It accepts a POST request with a body containing the account's username, email, and password. <br> It responds with the registered account's token and ID if the registration is successful.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RegistrationAccount" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/ErrorResponse" },
                    { "$ref": "#/components/schemas/RegisteredAccount" }
                  ]
                },
                "examples": {
                  "Example#1": {
                    "description": "",
                    "value": {
                      "error": "account",
                      "message": "Username or email already taken",
                      "status": "null",
                      "data": "null"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/search": {
      "get": {
        "description": "This endpoint searches for accounts. It accepts a \"q\" query parameter for the search query and an optional \"fuzzy\" query parameter to enable fuzzy search. <br> It responds with a list of matching accounts.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "fuzzy",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountDisplayResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{id}/tags": {
      "get": {
        "description": "This endpoint retrieves a specific account's followed tags by ID. It requires a \"token\" header for authentication. <br> It responds with the account's followed tags.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/TagResponse" }
                },
                "examples": {
                  "Example#1": {
                    "description": "",
                    "value": {
                      "error": "account",
                      "message": "Incorrect token",
                      "status": "null",
                      "data": "null"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{id}/unfollow": {
      "post": {
        "description": "This endpoint allows a specific account to unfollow another account by ID. It requires \"token\" and \"accountId\" headers for authentication. <br> It responds with a success message if the unfollow action is successful.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "accountId",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "examples": {
                  "Example#1": {
                    "description": "",
                    "value": {
                      "error": "account",
                      "message": "Incorrect token",
                      "status": "null",
                      "data": "null"
                    }
                  }
                }
              },
              "text/plain": {
                "schema": { "type": "string" },
                "examples": { "Example#1": { "value": "" } }
              }
            }
          }
        }
      }
    },
    "/accounts/{id}/videos": {
      "get": {
        "description": "This endpoint retrieves a specific account's videos by ID.<br> It responds with the account's videos.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VideoDisplayResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{id}": {
      "get": {
        "description": "This endpoint retrieves a specific account by ID. It requires a \"token\" header for authentication. <br> It responds with the account's details if the retrieval is successful.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/ErrorResponse" },
                    { "$ref": "#/components/schemas/AccountResponse" }
                  ]
                },
                "examples": {
                  "Example#1": {
                    "description": "",
                    "value": {
                      "error": "account",
                      "message": "Incorrect token",
                      "status": "null",
                      "data": "null"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "This endpoint updates a specific account's details by ID. It requires a \"token\" header for authentication. <br> It responds with the updated account's details if the update is successful.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "content": { "*/*": { "schema": {} } } }
        }
      },
      "delete": {
        "description": "This endpoint deletes a specific account by ID. It requires a \"token\" header for authentication. <br> It responds with a NoContent response if the deletion is successful.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "examples": {
                  "Example#1": {
                    "description": "",
                    "value": {
                      "error": "account",
                      "message": "Incorrect token",
                      "status": "null",
                      "data": "null"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Object": { "type": "object", "properties": {} },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": { "type": "string" },
          "message": { "type": "string" },
          "status": { "type": "integer", "format": "int32" },
          "data": { "$ref": "#/components/schemas/Object" }
        },
        "required": ["error", "message"]
      },
      "AccountResponse": {
        "type": "object",
        "properties": {
          "accountID": { "type": "integer", "format": "int32" },
          "username": { "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string" },
          "token": { "type": "string" }
        },
        "required": ["username", "email", "password", "token"]
      },
      "AccountDisplayResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "username": { "type": "string" }
        },
        "required": ["username"]
      },
      "RegisteredAccount": {
        "type": "object",
        "properties": {
          "token": { "type": "string" },
          "accountId": { "type": "integer", "format": "int32" }
        },
        "required": ["token"]
      },
      "PlaylistDisplayResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "name": { "type": "string" }
        },
        "required": ["name"]
      },
      "VideoDisplayResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "title": { "type": "string" },
          "videoPath": { "type": "string" },
          "creator": { "$ref": "#/components/schemas/AccountDisplayResponse" },
          "viewCount": { "type": "integer", "format": "int32" },
          "uploadDate": { "type": "string" }
        },
        "required": ["title", "videoPath", "creator", "uploadDate"]
      },
      "TagResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "tag": { "type": "string" },
          "category": { "type": "string" }
        },
        "required": ["tag"]
      },
      "LoginAccount": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "password": { "type": "string" }
        },
        "required": ["email", "password"]
      },
      "RegistrationAccount": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string" }
        },
        "required": ["username", "email", "password"]
      }
    }
  }
}
