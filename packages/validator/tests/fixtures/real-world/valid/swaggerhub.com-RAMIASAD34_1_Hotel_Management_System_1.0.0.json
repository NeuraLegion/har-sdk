{
  "openapi": "3.1.0",
  "info": {
    "title": "Swagger Hotel management system - OpenAPI 3.1",
    "description": "This is a simple API that helps with managing an inventory of products, It includes a variety of services such as creating deleting and updating products, customer, or orders information.",
    "contact": { "email": "1203355@student.birzeit.edu" },
    "version": "1.0.0"
  },
  "servers": [{ "url": "https://productstore3.swagger.io/api/v3" }],
  "tags": [
    { "name": "employees", "description": "Operations related to employee" },
    {
      "name": "rooms",
      "description": "Everything rooms related",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://github.com/RamiAsad1/inventory-management-system/blob/main/README.md#collection-resource-products-"
      }
    },
    {
      "name": "invoices",
      "description": "Everything invoices related",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://github.com/RamiAsad1/inventory-management-system/blob/main/README.md#collection-resource-categories-"
      }
    },
    {
      "name": "customers",
      "description": "Operations about customer",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://github.com/RamiAsad1/inventory-management-system/blob/main/README.md#collection-resource-customers-"
      }
    },
    {
      "name": "reservations",
      "description": "Everything reservations related",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://github.com/RamiAsad1/inventory-management-system/blob/main/README.md#collection-resource-orders-"
      }
    }
  ],
  "paths": {
    "/employees": {
      "post": {
        "tags": ["employees"],
        "summary": "Add a new employee",
        "description": "Add a new employee",
        "operationId": "addEmployee",
        "requestBody": {
          "description": "Create a new employee",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/employees" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Employee created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/employees" }
              }
            }
          },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/employess/login": {
      "post": {
        "tags": ["employees"],
        "summary": "Login an employee",
        "description": "Login an employee",
        "operationId": "loginEmployee",
        "requestBody": {
          "description": "Login an existing employee",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/employees" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Employee Logged in",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/employees" }
              }
            }
          },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/{id}": {
      "patch": {
        "tags": ["employees"],
        "summary": "Update employee",
        "description": "Update an employee's information.",
        "operationId": "updateEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Employee ID to be updated",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Update an existing employee in the system",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/employees" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/employees" }
              }
            }
          },
          "400": { "description": "Invalid ID supplied" },
          "404": { "description": "Employee not found" }
        }
      },
      "delete": {
        "tags": ["employees"],
        "summary": "Delete employee by id",
        "description": "delete employee by id.",
        "operationId": "deleteEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "employee id to be deleted",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "Deleted successfully" },
          "400": { "description": "Invalid Id supplied" },
          "404": { "description": "Employee not found" }
        }
      }
    },
    "/customers": {
      "post": {
        "tags": ["customers"],
        "summary": "Register a new customer",
        "description": "Register a new customer",
        "operationId": "registerCustomer",
        "requestBody": {
          "description": "Register a new customer",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/customers" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Customer created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/customers" }
              }
            }
          },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/customers/login": {
      "post": {
        "tags": ["customers"],
        "summary": "Login as a customer",
        "description": "Login as a customer",
        "operationId": "loginCustomer",
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "password",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Login an existing employee",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/customers" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customer Logged in",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/employees" }
              }
            }
          },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "tags": ["customers"],
        "summary": "Get customer by ID",
        "operationId": "getCustomerById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/customers" }
              }
            }
          },
          "400": { "description": "Invalid ID supplied" },
          "404": { "description": "Customer not found" }
        }
      }
    },
    "/customers/reserve-room": {
      "post": {
        "tags": ["customers"],
        "summary": "Reserve a room",
        "operationId": "reserveRoomCustomer",
        "parameters": [
          {
            "in": "query",
            "name": "customerId",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "roomId",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "checkInDate",
            "required": true,
            "schema": { "type": "string", "format": "date" }
          },
          {
            "in": "query",
            "name": "checkOutDate",
            "required": true,
            "schema": { "type": "string", "format": "date" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/reservations" }
              }
            }
          }
        }
      }
    },
    "/customers/request-cancellation": {
      "post": {
        "tags": ["customers"],
        "summary": "Request cancellation of a reservation",
        "operationId": "requestReservationCancellation",
        "parameters": [
          {
            "in": "query",
            "name": "reservationId",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          }
        }
      }
    },
    "/invoices": {
      "post": {
        "tags": ["invoices"],
        "summary": "Generate an invoice",
        "operationId": "generateInvoice",
        "parameters": [
          {
            "in": "query",
            "name": "customerId",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "reservationId",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/invoices" }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}": {
      "get": {
        "tags": ["invoices"],
        "summary": "Get an invoice by ID",
        "operationId": "getInvoiceById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/invoices" }
              }
            }
          }
        }
      }
    },
    "/invoices/customer/{customerId}": {
      "get": {
        "tags": ["invoices"],
        "summary": "Get all invoices for a customer",
        "operationId": "getAllInvoicesByCustomerId",
        "parameters": [
          {
            "in": "path",
            "name": "customerId",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/invoices" }
                }
              }
            }
          }
        }
      }
    },
    "/reservations": {
      "post": {
        "tags": ["reservations"],
        "summary": "Reserve a room",
        "operationId": "reserveRoom",
        "parameters": [
          {
            "in": "query",
            "name": "customerId",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "roomId",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "checkInDate",
            "required": true,
            "schema": { "type": "string", "format": "date" }
          },
          {
            "in": "query",
            "name": "checkOutDate",
            "required": true,
            "schema": { "type": "string", "format": "date" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/reservations" }
              }
            }
          }
        }
      }
    },
    "/reservations/{id}": {
      "put": {
        "tags": ["reservations"],
        "summary": "Update a reservation",
        "operationId": "updateReservation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "roomId",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "checkInDate",
            "required": true,
            "schema": { "type": "string", "format": "date" }
          },
          {
            "in": "query",
            "name": "checkOutDate",
            "required": true,
            "schema": { "type": "string", "format": "date" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/reservations" }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": { "type": "integer" }
        }
      ]
    },
    "/reservations/request-cancellation/{id}": {
      "put": {
        "tags": ["reservations"],
        "summary": "Request cancellation of a reservation",
        "operationId": "requestCancellationOfReservation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/reservations" }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": { "type": "integer" }
        }
      ]
    },
    "/reservations/approve-cancellation/{id}": {
      "put": {
        "tags": ["reservations"],
        "summary": "Approve cancellation of a reservation",
        "operationId": "approveCancellationOfReservation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/reservations" }
              }
            }
          }
        }
      }
    },
    "/reservations/customer-name/{customerName}": {
      "get": {
        "tags": ["reservations"],
        "summary": "Get reservations by customer name",
        "operationId": "getReservationByCustomerName",
        "parameters": [
          {
            "in": "path",
            "name": "customerName",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/reservations" }
                }
              }
            }
          }
        }
      }
    },
    "/reservations/customer-id/{customerId}": {
      "get": {
        "tags": ["reservations"],
        "summary": "Get reservations by customer ID",
        "operationId": "getReservationById",
        "parameters": [
          {
            "in": "path",
            "name": "customerId",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/reservations" }
                }
              }
            }
          }
        }
      }
    },
    "/reservations/date/{reservationDate}": {
      "get": {
        "tags": ["reservations"],
        "summary": "Get reservations by date",
        "operationId": "getReservationByDate",
        "parameters": [
          {
            "in": "path",
            "name": "reservationDate",
            "required": true,
            "schema": { "type": "string", "format": "date" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/reservations" }
                }
              }
            }
          }
        }
      }
    },
    "/rooms": {
      "post": {
        "tags": ["rooms"],
        "summary": "Add a room",
        "operationId": "addRoom",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/rooms" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/rooms" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["rooms"],
        "summary": "Update a room",
        "operationId": "updateRoom",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/rooms" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/rooms" }
              }
            }
          }
        }
      }
    },
    "/rooms/{id}": {
      "get": {
        "tags": ["rooms"],
        "summary": "Get a room by ID",
        "operationId": "getRoomById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/rooms" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["rooms"],
        "summary": "Delete a room",
        "operationId": "deleteRoom",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/rooms/available": {
      "get": {
        "tags": ["rooms"],
        "summary": "Get all available rooms",
        "operationId": "getAllAvailableRooms",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/rooms" }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "employees": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64", "examples": [1254] },
          "name": { "type": "string", "examples": ["Rami Asad"] },
          "email": { "type": "string", "examples": ["john@email.com"] },
          "password": { "type": "string", "examples": ["12345"] }
        }
      },
      "customers": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string", "examples": ["Rami Asad"] },
          "email": { "type": "string", "examples": ["john@email.com"] },
          "password": { "type": "string", "examples": ["12345"] },
          "phoneNumber": { "type": "integer", "examples": ["0598546123"] }
        },
        "required": ["name", "email", "password", "phoneNumber"]
      },
      "invoices": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "reservationId": { "type": "integer", "format": "int64" },
          "customerId": { "type": "integer", "format": "in64" },
          "amount": { "type": "number", "format": "double" },
          "invoiceDate": { "type": "string", "format": "date" }
        },
        "required": ["reservation", "customer", "amount", "invoiceDate"]
      },
      "reservations": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "customerId": { "type": "integer", "format": "in64" },
          "rooms": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/rooms" }
          },
          "checkInDate": { "type": "string", "format": "date" },
          "checkOutDate": { "type": "string", "format": "date" },
          "invoices": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/invoices" }
          },
          "status": { "type": "string" }
        },
        "required": [
          "customer",
          "rooms",
          "checkInDate",
          "checkOutDate",
          "status"
        ]
      },
      "rooms": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "roomNumber": { "type": "string" },
          "type": { "type": "string" },
          "description": { "type": "string" },
          "price": { "type": "number", "format": "double" },
          "capacity": { "type": "integer" },
          "available": { "type": "boolean" }
        },
        "required": [
          "roomNumber",
          "type",
          "description",
          "price",
          "capacity",
          "available"
        ]
      }
    },
    "requestBodies": {
      "Employees": {
        "description": "Employees registered in the system",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/employees" }
          }
        }
      },
      "Customers": {
        "description": "Customer registered in the system",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/customers" }
          }
        }
      },
      "Invoices": {
        "description": "Invoices generated by the system",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/invoices" }
          }
        }
      },
      "Reservations": {
        "description": "Reservation made by the customer",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/reservations" }
          }
        }
      },
      "Rooms": {
        "description": "Rooms available to be reserved",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/rooms" }
          }
        }
      }
    }
  }
}
