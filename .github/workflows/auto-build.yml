name: CI / Automated testing

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - master

jobs:
  build:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.14.0]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - id: npm-cache-dir-path
        run: echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - run: npm ci -q && npm run bootstrap
      - run: npm run format:changed
      - run: npm run lint:changed
      - run: npm run build:changed
      - run: npm run test:changed

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14

      - id: npm-cache-dir-path
        run: echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - run: npm ci -q && npm run bootstrap
      - run: npm run build
      - run: npm run coverage:all

      - uses: paambaati/codeclimate-action@v3.0.0
        if: ${{ hashFiles('coverage/lcov.info') }}
        env:
          CC_TEST_REPORTER_ID: 8f03df35249169ee1488314f32a347bf3eba5ad0decfa9b999d04f74df71b415
        with:
          coverageLocations: coverage/lcov.info:lcov

  release:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GPR_TOKEN }}
      - uses: actions/setup-node@v1
        with:
          node-version: 14

      - id: npm-cache-dir-path
        run: echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - run: npm ci -q && npm run bootstrap
      - run: npm run build
      - run: npm run semantic-release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GPR_TOKEN }}
