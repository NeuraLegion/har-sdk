{
  "openapi": "3.1.0",
  "info": {
    "title": "PactFlow API",
    "description": "The API for the PactFlow application",
    "version": "24e83d464"
  },
  "externalDocs": {
    "description": "Official documentation",
    "url": "https://docs.pactflow.io"
  },
  "tags": [
    { "name": "root", "description": "Root index" },
    { "name": "audit", "description": "Audit logs" },
    { "name": "branch", "description": "Branches" },
    { "name": "can-i-deploy", "description": "Can I Deploy" },
    { "name": "consumer-contracts", "description": "Consumer contracts" },
    { "name": "provider-contracts", "description": "Provider contracts" },
    { "name": "environment", "description": "Environments" },
    { "name": "metric", "description": "Metrics management" },
    { "name": "integration", "description": "Integration management" },
    { "name": "pacticipant", "description": "Pacticipants" },
    { "name": "pacticipant-version", "description": "Pacticipant Versions" },
    { "name": "permission", "description": "Permissions management" },
    { "name": "preferences", "description": "User and system preferences" },
    { "name": "record-deployment", "description": "Deployment" },
    { "name": "record-release", "description": "Release" },
    { "name": "role", "description": "User roles" },
    { "name": "secret", "description": "Secrets" },
    { "name": "team", "description": "Team management" },
    { "name": "token", "description": "Access tokens" },
    {
      "name": "user",
      "description": "User management",
      "externalDocs": {
        "description": "Learn more",
        "url": "https://docs.pactflow.io"
      }
    },
    { "name": "verifiable-pacts", "description": "Pacts for verification" },
    { "name": "webhook", "description": "Webhooks management" }
  ],
  "servers": [
    {
      "url": "https://{tenant}.pactflow.io",
      "variables": { "tenant": { "description": "Tenant name", "default": "" } }
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": ["root"],
        "description": "Index page",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Root" }
              }
            }
          }
        }
      }
    },
    "/audit": {
      "get": {
        "tags": ["audit"],
        "description": "Get audit logs",
        "responses": {
          "200": {
            "description": "List of audit logs",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/AuditEvents" }
              }
            }
          }
        }
      }
    },
    "/pacticipants/{pacticipantName}/branches": {
      "get": {
        "tags": ["branch"],
        "description": "Get all branches for a pacticipant",
        "parameters": [
          {
            "name": "pacticipantName",
            "in": "path",
            "description": "Pacticipant Name",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "q",
            "schema": { "type": "string" },
            "description": "The string used to filter the branches"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "The number of the page to return",
            "schema": { "default": 1, "type": "number" }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of results to return per page",
            "schema": { "default": 100, "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "Pacticipant branches",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Branches" }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["contract_data:read", "contract_data:manage"] }
        ]
      }
    },
    "/pacticipants/{pacticipantName}/branches/{branchName}": {
      "get": {
        "tags": ["branch"],
        "description": "Get pacticipant branch",
        "parameters": [
          {
            "name": "pacticipantName",
            "in": "path",
            "description": "Pacticipant Name",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "branchName",
            "in": "path",
            "description": "Branch Name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Pacticipant Branch",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Branch" }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["contract_data:read", "contract_data:manage"] }
        ]
      },
      "delete": {
        "tags": ["branch"],
        "description": "Delete pacticipant branch",
        "parameters": [
          {
            "name": "pacticipantName",
            "in": "path",
            "description": "Pacticipant Name",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "branchName",
            "in": "path",
            "description": "Branch Name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "Pacticipant branch deleted" } },
        "security": [{ "bearerAuth": ["contract_data:manage"] }]
      }
    },
    "/can-i-deploy": {
      "get": {
        "tags": ["can-i-deploy"],
        "description": "Indicates whether or not an application is safe to deploy into a given environment",
        "parameters": [
          {
            "description": "Pacticipant name",
            "in": "query",
            "name": "pacticipant",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "Pacticipant version",
            "in": "query",
            "name": "version",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "Deprecated. The name of the tag that represents the environment into which the application is being deployed. Tags that represent environments have been superseded by first class support for environments. It is recommended to use the ‘environment’ parameter instead.",
            "in": "query",
            "name": "to",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Target environment",
            "in": "query",
            "name": "environment",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Matrix" }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["contract_data:read", "contract_data:manage"] }
        ]
      }
    },
    "/contracts/publish": {
      "post": {
        "tags": ["consumer-contracts"],
        "description": "Publish consumer contracts with branch, tags and build URL",
        "requestBody": {
          "required": true,
          "description": "The consumer contracts, branch, tags and build URL",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublishConsumerContract"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PublishedConsumerContract"
                }
              }
            }
          },
          "400": {
            "description": "Validation Errors. See ProblemJson and LegacyValidationErrors schemas."
          },
          "409": {
            "description": "Conflict Errors. See ProblemJson and LegacyValidationErrors schemas."
          }
        },
        "security": [{ "bearerAuth": ["contract_data:manage"] }]
      }
    },
    "/provider-contracts/provider/{providerName}/publish": {
      "post": {
        "tags": ["provider-contracts"],
        "description": "Publish a provider contract with branch, tags, build URL and self verification results",
        "parameters": [
          {
            "name": "providerName",
            "in": "path",
            "description": "Provider name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "The base64 encoded provider contract, branch, tags, build URL and self verification results",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublishProviderContract"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PublishedProviderContract"
                }
              }
            }
          },
          "400": {
            "description": "Validation Errors. See ProblemJson and LegacyValidationErrors schemas."
          },
          "409": {
            "description": "Conflict Errors. See ProblemJson and LegacyValidationErrors schemas."
          }
        },
        "security": [{ "bearerAuth": ["contract_data:manage"] }]
      }
    },
    "/environments": {
      "get": {
        "tags": ["environment"],
        "description": "Get all environments",
        "responses": {
          "200": {
            "description": "List of environments",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Environments" }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["environment:read", "environment:manage"] }
        ]
      },
      "post": {
        "tags": ["environment"],
        "description": "Create a new environment",
        "requestBody": {
          "required": true,
          "description": "The details of the environment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateEnvironment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New environment created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Environment" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["environment:manage"] }]
      }
    },
    "/environments/{environmentId}": {
      "get": {
        "tags": ["environment"],
        "description": "Get specific environment",
        "parameters": [
          {
            "name": "environmentId",
            "in": "path",
            "description": "Environment UUID",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Environment",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Environment" }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["environment:read", "environment:manage"] }
        ]
      },
      "put": {
        "tags": ["environment"],
        "description": "Update an environment",
        "parameters": [
          {
            "name": "environmentId",
            "in": "path",
            "description": "Environment UUID",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Environment to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateEnvironment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Environment updated",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Environment" }
              }
            }
          },
          "400": {
            "description": "Validation Errors. See ProblemJson and LegacyValidationErrors schemas."
          },
          "404": { "description": "Not Found" }
        },
        "security": [{ "bearerAuth": ["environment:manage"] }]
      },
      "delete": {
        "tags": ["environment"],
        "description": "Delete an environment",
        "parameters": [
          {
            "name": "environmentId",
            "in": "path",
            "description": "Environment UUID",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": { "204": { "description": "Environment deleted" } },
        "security": [{ "bearerAuth": ["environment:manage"] }]
      }
    },
    "/metrics": {
      "get": {
        "tags": ["metric"],
        "description": "Get metrics",
        "responses": {
          "200": {
            "description": "Metric response",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Metrics" }
              }
            }
          }
        }
      }
    },
    "/metrics/teams": {
      "get": {
        "tags": ["metric"],
        "description": "Get team metrics",
        "responses": {
          "200": {
            "description": "Metric response",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/TeamMetrics" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["team:read", "team:manage"] }]
      }
    },
    "/integrations": {
      "get": {
        "tags": ["integration"],
        "description": "Get all integrations",
        "parameters": [
          {
            "description": "The string used to filter the integrations",
            "in": "query",
            "name": "q",
            "required": false,
            "schema": { "type": "string" }
          },
          { "$ref": "#/components/parameters/PageNumber" },
          { "$ref": "#/components/parameters/PageSize" }
        ],
        "responses": {
          "200": {
            "description": "List of integrations",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Integrations" }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["contract_data:read", "contract_data:manage"] }
        ]
      },
      "delete": {
        "tags": ["integration"],
        "description": "Delete all integrations",
        "responses": { "204": { "description": "No Content" } },
        "security": [{ "bearerAuth": ["contract_data:bulk_delete"] }]
      }
    },
    "/integrations/team/{teamId}": {
      "get": {
        "tags": ["integration"],
        "description": "Get integrations for a team",
        "parameters": [
          {
            "description": "The string used to filter the integrations",
            "in": "query",
            "name": "q",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": { "type": "string" }
          },
          { "$ref": "#/components/parameters/PageNumber" },
          { "$ref": "#/components/parameters/PageSize" }
        ],
        "responses": {
          "200": {
            "description": "List of integrations",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Integrations" }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["contract_data:read", "contract_data:manage"] }
        ]
      }
    },
    "/pacticipants": {
      "get": {
        "tags": ["pacticipant"],
        "description": "Get all pacticipants",
        "parameters": [
          { "$ref": "#/components/parameters/PageNumber" },
          { "$ref": "#/components/parameters/PageSize" }
        ],
        "responses": {
          "200": {
            "description": "List of pacticipants",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Pacticipants" }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["contract_data:read", "contract_data:manage"] }
        ]
      },
      "post": {
        "tags": ["pacticipant"],
        "description": "Create a new pacticipant",
        "requestBody": {
          "required": true,
          "description": "Create a new pacticipant",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreatePacticipant" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New pacticipant created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Pacticipant" }
              }
            }
          },
          "400": {
            "description": "Validation Errors. See ProblemJson and LegacyValidationErrors schemas."
          }
        },
        "security": [{ "bearerAuth": ["contract_data:manage"] }]
      }
    },
    "/pacticipants/{pacticipantName}": {
      "get": {
        "tags": ["pacticipant"],
        "description": "Get pacticipants by name",
        "parameters": [
          {
            "name": "pacticipantName",
            "in": "path",
            "description": "Pacticipant Name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Pacticipant",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Pacticipant" }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["contract_data:read", "contract_data:manage"] }
        ]
      },
      "put": {
        "tags": ["pacticipant"],
        "description": "Update a pacticipant",
        "parameters": [
          {
            "name": "pacticipantName",
            "in": "path",
            "description": "Pacticipant Name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "pacticipant to update",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdatePacticipant" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pacticipant updated",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Pacticipant" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["contract_data:manage"] }]
      },
      "patch": {
        "tags": ["pacticipant"],
        "description": "Update a pacticipant, unspecified fields are retained",
        "parameters": [
          {
            "name": "pacticipantName",
            "in": "path",
            "description": "Pacticipant Name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "pacticipant to update",
          "content": {
            "application/merge-patch+json": {
              "schema": { "$ref": "#/components/schemas/UpdatePacticipant" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pacticipant updated",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Pacticipant" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["contract_data:manage"] }]
      },
      "delete": {
        "tags": ["pacticipant"],
        "description": "Delete pacticipant",
        "parameters": [
          {
            "name": "pacticipantName",
            "in": "path",
            "description": "Pacticipant Name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "pacticipant deleted" } },
        "security": [{ "bearerAuth": ["contract_data:bulk_delete"] }]
      }
    },
    "/pacticipants/label/{labelName}": {
      "get": {
        "tags": ["pacticipant"],
        "description": "Get pacticipants by label",
        "parameters": [
          {
            "name": "labelName",
            "in": "path",
            "description": "Label Name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Pacticipant",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Pacticipants" }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["contract_data:read", "contract_data:manage"] }
        ]
      }
    },
    "/pacticipants/{pacticipantName}/versions": {
      "get": {
        "tags": ["pacticipant-version"],
        "description": "All pacticipant versions",
        "parameters": [
          {
            "name": "pacticipantName",
            "in": "path",
            "description": "Pacticipant Name",
            "required": true,
            "schema": { "type": "string" }
          },
          { "$ref": "#/components/parameters/PageNumber" },
          { "$ref": "#/components/parameters/PageSize" }
        ],
        "responses": {
          "200": {
            "description": "List of pacticipant versions",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/PacticipantVersions" }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["contract_data:read", "contract_data:manage"] }
        ]
      }
    },
    "/pacticipants/{pacticipantName}/versions/{versionNumber}": {
      "get": {
        "tags": ["pacticipant-version"],
        "description": "Pacticipant Version",
        "parameters": [
          {
            "name": "pacticipantName",
            "in": "path",
            "description": "Pacticipant Name",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "versionNumber",
            "in": "path",
            "description": "Pacticipant Version Number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Pacticipant version",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/PacticipantVersion" }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["contract_data:read", "contract_data:manage"] }
        ]
      },
      "put": {
        "tags": ["pacticipant-version"],
        "description": "Update Pacticipant Version",
        "parameters": [
          {
            "name": "pacticipantName",
            "in": "path",
            "description": "Pacticipant Name",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "versionNumber",
            "in": "path",
            "description": "Pacticipant Version Number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": false,
          "description": "New pacticipant version values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdatePacticipantVersion"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/PacticipantVersion" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["contract_data:manage"] }]
      }
    },
    "/pacticipants/{pacticipantName}/latest-version": {
      "get": {
        "tags": ["pacticipant-version"],
        "description": "Latest pacticipant version",
        "parameters": [
          {
            "name": "pacticipantName",
            "in": "path",
            "description": "Pacticipant Name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Pacticipant version",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/PacticipantVersion" }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["contract_data:read", "contract_data:manage"] }
        ]
      }
    },
    "/pacticipants/{pacticipantName}/latest-version/{tag}": {
      "get": {
        "tags": ["pacticipant-version"],
        "description": "Latest tagged pacticipant version",
        "parameters": [
          {
            "name": "pacticipantName",
            "in": "path",
            "description": "Pacticipant Name",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "tag",
            "in": "path",
            "description": "Tag",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Pacticipant version",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/PacticipantVersion" }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["contract_data:read", "contract_data:manage"] }
        ]
      }
    },
    "/pacticipants/{pacticipantName}/branches/{branchName}/versions": {
      "get": {
        "tags": ["pacticipant-version"],
        "description": "Pacticipant branch versions",
        "parameters": [
          {
            "name": "pacticipantName",
            "in": "path",
            "description": "Pacticipant Name",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "branchName",
            "in": "path",
            "description": "Branch Name",
            "required": true,
            "schema": { "type": "string" }
          },
          { "$ref": "#/components/parameters/PageNumber" },
          { "$ref": "#/components/parameters/PageSize" }
        ],
        "responses": {
          "200": {
            "description": "List of pacticipant versions",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/PacticipantVersions" }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["contract_data:read", "contract_data:manage"] }
        ]
      }
    },
    "/admin/permissions": {
      "get": {
        "tags": ["permission"],
        "description": "Get all permissions",
        "responses": {
          "200": {
            "description": "List of permissions",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Permissions" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["role:read", "role:manage"] }]
      }
    },
    "/preferences/current-user": {
      "get": {
        "tags": ["preferences"],
        "description": "Get all user preferences",
        "responses": {
          "200": {
            "description": "Preferences",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Preferences" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["preferences"],
        "description": "Save user preferences",
        "requestBody": {
          "required": true,
          "description": "New preference values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdatePreferences"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Saved preferences",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Preferences" }
              }
            }
          }
        }
      }
    },
    "/preferences/current-user/{userPreference}": {
      "get": {
        "tags": ["preferences"],
        "description": "Get a user preference",
        "parameters": [
          {
            "name": "userPreference",
            "in": "path",
            "description": "User preference name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Preference",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Preference" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["preferences"],
        "description": "Update a user preference",
        "parameters": [
          {
            "name": "userPreference",
            "in": "path",
            "description": "User preference name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "New preference values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdatePreference"
              }
            }
          }
        },
        "responses": { "204": { "description": "Preference updated" } }
      },
      "delete": {
        "tags": ["preferences"],
        "description": "Delete a user preference",
        "parameters": [
          {
            "name": "userPreference",
            "in": "path",
            "description": "User preference name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "Preference deleted" } }
      }
    },
    "/preferences/system": {
      "get": {
        "tags": ["preferences"],
        "description": "Get all system preferences",
        "responses": {
          "200": {
            "description": "Preferences",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Preferences" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["preferences"],
        "description": "Save system preferences",
        "requestBody": {
          "required": true,
          "description": "New preference values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdatePreferences"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Saved preferences",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Preferences" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["system_preference:manage"] }]
      }
    },
    "/preferences/system/{systemPreference}": {
      "get": {
        "tags": ["preferences"],
        "description": "Get a system preference",
        "parameters": [
          {
            "name": "systemPreference",
            "in": "path",
            "description": "System preference name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Preference",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Preference" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["preferences"],
        "description": "Update a system preference",
        "parameters": [
          {
            "name": "systemPreference",
            "in": "path",
            "description": "System preference name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "New preference values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdatePreference"
              }
            }
          }
        },
        "responses": { "204": { "description": "Preference updated" } },
        "security": [{ "bearerAuth": ["system_preference:manage"] }]
      },
      "delete": {
        "tags": ["preferences"],
        "description": "Delete a system preference",
        "parameters": [
          {
            "name": "systemPreference",
            "in": "path",
            "description": "System preference name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "Preference deleted" } },
        "security": [{ "bearerAuth": ["system_preference:manage"] }]
      }
    },
    "/pacticipants/{pacticipantName}/versions/{versionNumber}/deployed-versions/environment/{environmentId}": {
      "get": {
        "tags": ["record-deployment"],
        "description": "Get deployed versions for version and environment",
        "parameters": [
          {
            "name": "pacticipantName",
            "in": "path",
            "description": "Pacticipant Name",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "versionNumber",
            "in": "path",
            "description": "Pacticipant Version Number",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Environment UUID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeployedVersionsForVersionAndEnvironment"
                }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["contract_data:read", "contract_data:manage"] }
        ]
      },
      "post": {
        "tags": ["record-deployment"],
        "description": "Record deployment",
        "parameters": [
          {
            "name": "pacticipantName",
            "in": "path",
            "description": "Pacticipant Name",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "versionNumber",
            "in": "path",
            "description": "Pacticipant Version Number",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Environment UUID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "create a new deployed version for an environment",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RecordDeployment" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/DeployedVersion" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["deployment_and_release:record"] }]
      }
    },
    "/environments/{environmentId}/deployed-versions/currently-deployed": {
      "get": {
        "tags": ["record-deployment"],
        "description": "Get currently deployed versions for environment",
        "parameters": [
          {
            "name": "environmentId",
            "in": "path",
            "description": "Environment UUID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeployedVersionsForEnvironment"
                }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["environment:read", "environment:manage"] }
        ]
      }
    },
    "/pacticipants/{pacticipantName}/versions/{versionNumber}/released-versions/environment/{environmentId}": {
      "get": {
        "tags": ["record-release"],
        "description": "Get released versions for version and environment",
        "parameters": [
          {
            "name": "pacticipantName",
            "in": "path",
            "description": "Pacticipant Name",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "versionNumber",
            "in": "path",
            "description": "Pacticipant Version Number",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Environment UUID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleasedVersionsForVersionAndEnvironment"
                }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["contract_data:read", "contract_data:manage"] }
        ]
      },
      "post": {
        "tags": ["record-release"],
        "description": "Record release",
        "parameters": [
          {
            "name": "pacticipantName",
            "in": "path",
            "description": "Pacticipant Name",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "versionNumber",
            "in": "path",
            "description": "Pacticipant Version Number",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Environment UUID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/ReleasedVersion" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["deployment_and_release:record"] }]
      }
    },
    "/environments/{environmentId}/released-versions/currently-supported": {
      "get": {
        "tags": ["record-release"],
        "description": "Get currently supported released versions for environment",
        "parameters": [
          {
            "name": "environmentId",
            "in": "path",
            "description": "Environment UUID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleasedVersionsForEnvironment"
                }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["environment:read", "environment:manage"] }
        ]
      }
    },
    "/admin/roles": {
      "get": {
        "tags": ["role"],
        "description": "Get all roles",
        "responses": {
          "200": {
            "description": "List of roles",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Roles" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["role:read", "role:manage"] }]
      },
      "post": {
        "tags": ["role"],
        "description": "Create a role",
        "requestBody": {
          "required": true,
          "description": "The details of the role",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateUpdateRole" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New role created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Role" }
              }
            }
          },
          "400": {
            "description": "Validation Errors. See ProblemJson and LegacyValidationErrors schemas."
          }
        },
        "security": [{ "bearerAuth": ["role:manage"] }]
      }
    },
    "/admin/roles/{roleId}": {
      "get": {
        "tags": ["role"],
        "description": "Get specific role",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "Role UUID",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Role",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Role" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["role:read", "role:manage"] }]
      },
      "put": {
        "tags": ["role"],
        "description": "Update a role",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "Role UUID",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Parameters to update",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateUpdateRole" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role updated",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Role" }
              }
            }
          },
          "400": {
            "description": "Validation Errors. See ProblemJson and LegacyValidationErrors schemas."
          }
        },
        "security": [{ "bearerAuth": ["role:manage"] }]
      },
      "delete": {
        "tags": ["role"],
        "description": "Delete a role",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "Role UUID",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": { "204": { "description": "Role deleted" } },
        "security": [{ "bearerAuth": ["role:manage"] }]
      }
    },
    "/admin/roles/reset": {
      "post": {
        "tags": ["role"],
        "description": "Reset roles",
        "responses": {
          "200": {
            "description": "Roles reset",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Roles" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["role:manage"] }]
      }
    },
    "/secrets": {
      "get": {
        "tags": ["secret"],
        "description": "Get all secrets",
        "responses": {
          "200": {
            "description": "List all secrets",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Secrets" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["secret:read", "secret:manage"] }]
      },
      "post": {
        "tags": ["secret"],
        "description": "Create a new secret",
        "requestBody": {
          "required": true,
          "description": "The details of the secret",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateSecret" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New secret created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedUpdatedSecret"
                }
              }
            }
          },
          "400": {
            "description": "Validation Errors. See ProblemJson and LegacyValidationErrors schemas."
          },
          "409": {
            "description": "Conflict Errors. See ProblemJson and LegacyValidationErrors schemas."
          }
        },
        "security": [{ "bearerAuth": ["secret:manage"] }]
      }
    },
    "/secrets/{secretId}": {
      "get": {
        "tags": ["secret"],
        "description": "Get specific secret",
        "parameters": [
          {
            "name": "secretId",
            "in": "path",
            "description": "Secret UUID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Secret",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Secret" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["secret:read", "secret:manage"] }]
      },
      "put": {
        "tags": ["secret"],
        "description": "Update a secret",
        "parameters": [
          {
            "name": "secretId",
            "in": "path",
            "description": "Secret UUID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Secret to update",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateSecret" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Secret updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedUpdatedSecret"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["secret:manage"] }]
      },
      "delete": {
        "tags": ["secret"],
        "description": "Delete a secret",
        "parameters": [
          {
            "name": "secretId",
            "in": "path",
            "description": "Secret UUID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "Secret deleted" } },
        "security": [{ "bearerAuth": ["secret:manage"] }]
      }
    },
    "/admin/teams": {
      "get": {
        "tags": ["team"],
        "description": "Get all teams",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "schema": { "type": "string" },
            "description": "The string used to filter the teams"
          },
          { "$ref": "#/components/parameters/PageNumber" },
          { "$ref": "#/components/parameters/PageSize" }
        ],
        "responses": {
          "200": {
            "description": "List of teams",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Teams" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["team:read", "team:manage"] }]
      },
      "post": {
        "tags": ["team"],
        "description": "Create a new team",
        "requestBody": {
          "required": true,
          "description": "The details of the team",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateUpdateTeam" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New team created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/CreatedTeam" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["team:manage"] }]
      }
    },
    "/admin/teams/{teamId}": {
      "get": {
        "tags": ["team"],
        "description": "Get specific team",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Team UUID",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Team",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Team" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["team:read", "team:manage"] }]
      },
      "put": {
        "tags": ["team"],
        "description": "Update a team",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Team UUID",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Parameters to update",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateUpdateTeam" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Team updated",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/CreatedTeam" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["team:manage"] }]
      },
      "delete": {
        "tags": ["team"],
        "description": "Delete a team",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Team UUID",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": { "204": { "description": "Team deleted" } },
        "security": [{ "bearerAuth": ["team:manage"] }]
      }
    },
    "/admin/teams/{teamId}/users": {
      "get": {
        "tags": ["team"],
        "description": "Get team users",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Team UUID",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Team",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/TeamUsers" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["team:read", "team:manage"] }]
      },
      "put": {
        "tags": ["team"],
        "description": "Set team users. This method will remove any existing users that are not specified in the request",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Team UUID",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Team",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/TeamUsers" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["team:manage"] }]
      },
      "patch": {
        "tags": ["team"],
        "description": "Update team users. This method will either add or remove the users specified in the request body",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Team UUID",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "The details of update request",
          "content": {
            "application/json-patch+json": {
              "schema": { "$ref": "#/components/schemas/PatchUpdateTeamUsers" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Team",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/TeamUsers" }
              }
            }
          },
          "400": {
            "description": "Validation Errors. See ProblemJson and LegacyValidationErrors schemas."
          }
        },
        "security": [{ "bearerAuth": ["team:manage"] }]
      }
    },
    "/admin/teams/{teamId}/users/{userId}": {
      "get": {
        "tags": ["team"],
        "description": "Get team user",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Team UUID",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User UUID",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Team",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/TeamUser" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["team:read", "team:manage"] }]
      },
      "delete": {
        "tags": ["team"],
        "description": "Remove user from team",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Team UUID",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User UUID",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "security": [{ "bearerAuth": ["team:manage"] }]
      }
    },
    "/settings/tokens": {
      "get": {
        "tags": ["token"],
        "description": "Retrieve user tokens",
        "responses": {
          "200": {
            "description": "User tokens",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Tokens" }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["token:manage:own", "read_token:manage:own"] }
        ]
      }
    },
    "/settings/tokens/{tokenId}/regenerate": {
      "post": {
        "tags": ["token"],
        "description": "Regenerate user or system account tokens",
        "parameters": [
          {
            "name": "tokenId",
            "in": "path",
            "description": "Token ID",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": {
          "201": {
            "description": "Regenerated user token",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Token" }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "token:manage:own",
              "read_token:manage:own",
              "system_account:manage"
            ]
          }
        ]
      }
    },
    "/admin/system-accounts/{accountId}/tokens": {
      "get": {
        "tags": ["token"],
        "description": "Retrieve system account tokens",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "schema": { "format": "uuid", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "System account tokens",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Tokens" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["system_account:manage"] }]
      }
    },
    "/user": {
      "get": {
        "tags": ["user"],
        "description": "Get the current user information",
        "responses": {
          "200": {
            "description": "Current user",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "tags": ["user"],
        "description": "Get all users, optionally with pagination",
        "parameters": [
          {
            "in": "query",
            "name": "active",
            "schema": { "type": "boolean" },
            "description": "The status of users to be returned"
          },
          {
            "in": "query",
            "name": "q",
            "schema": { "type": "string" },
            "description": "The string used to filter the users by name and email"
          },
          {
            "in": "query",
            "name": "userType",
            "schema": { "minimum": 0, "maximum": 1, "type": "number" },
            "description": "The number representing whether to return regular or admin users (0, 1)"
          },
          { "$ref": "#/components/parameters/PageNumber" },
          { "$ref": "#/components/parameters/PageSize" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Users" }
              }
            }
          },
          "400": {
            "description": "Validation Errors. See ProblemJson and LegacyValidationErrors schemas."
          }
        },
        "security": [
          {
            "bearerAuth": [
              "user:read",
              "user:manage",
              "system_account:read",
              "system_account:manage"
            ]
          }
        ]
      },
      "post": {
        "tags": ["user"],
        "description": "Invite a new user to PactFlow",
        "requestBody": {
          "required": true,
          "description": "The details of the users to invite",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateUser" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New user created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["user:invite"] }]
      }
    },
    "/admin/users/invite-users": {
      "post": {
        "tags": ["user"],
        "description": "Invite multiple users to PactFlow",
        "requestBody": {
          "required": true,
          "description": "The details of the users to invite",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InviteUsers" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New users invited",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/InvitedUsers" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["user:invite"] }]
      }
    },
    "/admin/users/{userId}": {
      "get": {
        "tags": ["user"],
        "description": "Get a user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "User information",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "410": { "description": "User has been deleted" }
        },
        "security": [
          {
            "bearerAuth": [
              "user:read",
              "user:manage",
              "system_account:read",
              "system_account:manage"
            ]
          }
        ]
      },
      "put": {
        "tags": ["user"],
        "description": "Update a user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Parameters to update",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUser" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["user:manage", "system_account:manage"] }]
      },
      "delete": {
        "tags": ["user"],
        "description": "Delete a user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "User deleted" } },
        "security": [{ "bearerAuth": ["user:manage", "system_account:manage"] }]
      }
    },
    "/admin/users/{userId}/roles": {
      "put": {
        "tags": ["user"],
        "description": "Set user roles",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Set user roles",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SetUserRoles" }
            }
          }
        },
        "responses": {
          "204": { "description": "User role updated" },
          "400": {
            "description": "Validation Errors. See ProblemJson and LegacyValidationErrors schemas."
          }
        },
        "security": [{ "bearerAuth": ["user:manage", "system_account:manage"] }]
      }
    },
    "/admin/users/{userId}/roles/{roleId}": {
      "put": {
        "tags": ["user"],
        "description": "Set user role",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Role ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "User role added" } },
        "security": [{ "bearerAuth": ["user:manage", "system_account:manage"] }]
      },
      "delete": {
        "tags": ["user"],
        "description": "Delete user role",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Role ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "User role removed" } },
        "security": [{ "bearerAuth": ["user:manage", "system_account:manage"] }]
      }
    },
    "/admin/system-accounts": {
      "post": {
        "tags": ["user"],
        "description": "Create system account",
        "requestBody": {
          "required": true,
          "description": "The details of the system account",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateSystemAccount" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created system account",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["system_account:manage"] }]
      }
    },
    "/pacts/provider/{providerName}/for-verification": {
      "post": {
        "tags": ["verifiable-pacts"],
        "description": "Pacts for verification",
        "parameters": [
          {
            "name": "providerName",
            "in": "path",
            "description": "Provider Name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Parameters to select pacts to verify",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/VerifiablePactQuery" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verifiable Pacts",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/VerifiablePacts" }
              }
            }
          }
        },
        "security": [
          { "bearerAuth": ["contract_data:read", "contract_data:manage"] }
        ]
      }
    },
    "/webhooks": {
      "get": {
        "tags": ["webhook"],
        "description": "Get all webhooks",
        "responses": {
          "200": {
            "description": "List of webhooks",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Webhooks" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["webhook:read", "webhook:manage"] }]
      },
      "post": {
        "tags": ["webhook"],
        "description": "Create a new webhook",
        "requestBody": {
          "required": true,
          "description": "The details of the webhook",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateWebhook" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New webhook created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Webhook" }
              }
            }
          },
          "400": {
            "description": "Validation Errors. See ProblemJson and LegacyValidationErrors schemas."
          }
        },
        "security": [{ "bearerAuth": ["webhook:manage"] }]
      }
    },
    "/webhooks/execute": {
      "post": {
        "tags": ["webhook"],
        "description": "Execute a webhook",
        "requestBody": {
          "required": true,
          "description": "Webhook to test",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TestUnsavedWebhook" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook Test Run",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsavedWebhookExecutionResult"
                }
              }
            }
          },
          "400": {
            "description": "Validation Errors. See ProblemJson and LegacyValidationErrors schemas."
          }
        },
        "security": [{ "bearerAuth": ["webhook:manage"] }]
      }
    },
    "/webhooks/{webhookId}": {
      "get": {
        "tags": ["webhook"],
        "description": "Get specific webhook",
        "parameters": [
          {
            "name": "webhookId",
            "in": "path",
            "description": "Webhook ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Webhook" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["webhook:read", "webhook:manage"] }]
      },
      "put": {
        "tags": ["webhook"],
        "description": "Update a webhook",
        "parameters": [
          {
            "name": "webhookId",
            "in": "path",
            "description": "Webhook ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Parameters to update",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateWebhook" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook updated",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/Webhook" }
              }
            }
          },
          "400": {
            "description": "Validation Errors. See ProblemJson and LegacyValidationErrors schemas."
          }
        },
        "security": [{ "bearerAuth": ["webhook:manage"] }]
      },
      "delete": {
        "tags": ["webhook"],
        "description": "Delete a webhook",
        "parameters": [
          {
            "name": "webhookId",
            "in": "path",
            "description": "Webhook ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "Webhook deleted" } },
        "security": [{ "bearerAuth": ["webhook:manage"] }]
      }
    },
    "/webhooks/{webhookId}/execute": {
      "post": {
        "tags": ["webhook"],
        "description": "Execute the webhook",
        "parameters": [
          {
            "name": "webhookId",
            "in": "path",
            "description": "Webhook ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookExecutionResult"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": ["webhook:manage"] }]
      }
    }
  },
  "components": {
    "parameters": {
      "PageNumber": {
        "name": "page",
        "in": "query",
        "description": "The number of the page to return",
        "schema": { "type": "number" }
      },
      "PageSize": {
        "name": "size",
        "in": "query",
        "description": "The number of results to return per page",
        "schema": { "type": "number" }
      }
    },
    "securitySchemes": { "bearerAuth": { "type": "http", "scheme": "bearer" } },
    "schemas": {
      "Action": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "title": { "type": "string" },
          "method": { "type": "string" },
          "href": { "type": "string" }
        },
        "required": ["name", "title", "method", "href"]
      },
      "CustomPayload": {
        "type": "object",
        "properties": { "identityProviderId": { "type": "string" } },
        "required": ["identityProviderId"]
      },
      "CustomEvent": {
        "type": "object",
        "properties": {
          "payload": { "$ref": "#/components/schemas/CustomPayload" },
          "timestamp": { "format": "date-time", "type": "string" },
          "tokenUUID": { "format": "uuid", "type": "string" },
          "type": { "type": "string" },
          "username": { "type": "string" },
          "userEmail": { "type": "string" },
          "userUUID": { "format": "uuid", "type": "string" },
          "uuid": { "format": "uuid", "type": "string" }
        },
        "required": ["payload", "timestamp", "type", "uuid"]
      },
      "HttpRequestPayload": {
        "type": "object",
        "properties": {
          "method": { "type": "string" },
          "path": { "type": "string" },
          "queryString": { "type": "string" },
          "referer": { "anyOf": [{ "type": "null" }, { "type": "string" }] },
          "remoteHost": { "anyOf": [{ "type": "null" }, { "type": "string" }] },
          "remoteAddress": { "type": "string" },
          "requestId": { "type": "string" },
          "userAgent": { "type": "string" }
        },
        "required": [
          "method",
          "path",
          "queryString",
          "referer",
          "remoteHost",
          "remoteAddress",
          "requestId",
          "userAgent"
        ]
      },
      "HttpAuditResponse": {
        "type": "object",
        "properties": { "status": { "type": "integer" } },
        "required": ["status"]
      },
      "HttpAuditEvent": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "payload": { "$ref": "#/components/schemas/HttpRequestPayload" },
          "response": { "$ref": "#/components/schemas/HttpAuditResponse" },
          "timestamp": { "format": "date-time", "type": "string" },
          "tokenUUID": { "format": "uuid", "type": "string" },
          "type": { "type": "string" },
          "username": { "type": "string" },
          "userEmail": { "type": "string" },
          "userUUID": { "format": "uuid", "type": "string" },
          "uuid": { "format": "uuid", "type": "string" }
        },
        "required": ["name", "payload", "response", "timestamp", "type", "uuid"]
      },
      "AuthFailureEvent": {
        "type": "object",
        "properties": {
          "payload": { "$ref": "#/components/schemas/HttpRequestPayload" },
          "timestamp": { "format": "date-time", "type": "string" },
          "tokenUUID": { "format": "uuid", "type": "string" },
          "type": { "type": "string" },
          "username": { "type": "string" },
          "userEmail": { "type": "string" },
          "userUUID": { "format": "uuid", "type": "string" },
          "uuid": { "format": "uuid", "type": "string" }
        },
        "required": ["payload", "timestamp", "type", "uuid"]
      },
      "AuditEvents": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "anyOf": [
                { "$ref": "#/components/schemas/HttpAuditEvent" },
                { "$ref": "#/components/schemas/AuthFailureEvent" },
                { "$ref": "#/components/schemas/CustomEvent" }
              ]
            }
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["events", "_links"]
      },
      "Branch": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:latest-version": {
                "$ref": "#/components/schemas/EmbeddedLink"
              }
            },
            "required": ["self", "pb:latest-version"]
          }
        },
        "required": ["name", "createdAt", "_links"]
      },
      "Branches": {
        "type": "object",
        "properties": {
          "page": { "$ref": "#/components/schemas/Page" },
          "_embedded": {
            "type": "object",
            "properties": {
              "branches": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/Branch" }
              }
            },
            "required": ["branches"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:branches": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedLink" }
              },
              "next": { "$ref": "#/components/schemas/EmbeddedLink" },
              "previous": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self", "pb:branches"]
          }
        },
        "required": ["page", "_embedded", "_links"]
      },
      "PublishConsumerContract": {
        "type": "object",
        "properties": {
          "pacticipantName": { "minLength": 1, "type": "string" },
          "pacticipantVersionNumber": { "minLength": 1, "type": "string" },
          "tags": { "type": "array", "items": { "type": "string" } },
          "branch": { "type": "string" },
          "buildUrl": { "type": "string" },
          "contracts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "consumerName": { "minLength": 1, "type": "string" },
                "providerName": { "minLength": 1, "type": "string" },
                "content": { "minLength": 1, "type": "string" },
                "contentType": {
                  "type": "string",
                  "enum": ["application/json"]
                },
                "specification": { "type": "string", "enum": ["pact"] }
              },
              "required": [
                "consumerName",
                "providerName",
                "content",
                "contentType",
                "specification"
              ]
            }
          }
        },
        "required": ["pacticipantName", "pacticipantVersionNumber", "contracts"]
      },
      "PublishedConsumerContract": {
        "type": "object",
        "properties": {
          "notices": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Notice" }
          },
          "_embedded": {
            "type": "object",
            "properties": {
              "pacticipant": {
                "$ref": "#/components/schemas/EmbeddedPacticipant"
              },
              "version": { "$ref": "#/components/schemas/EmbeddedVersion" }
            },
            "required": ["pacticipant", "version"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "pb:pacticipant": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:pacticipant-version": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:pacticipant-version-tags": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedLink" }
              },
              "pb:contracts": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedLink" }
              }
            },
            "required": [
              "pb:pacticipant",
              "pb:pacticipant-version",
              "pb:pacticipant-version-tags",
              "pb:contracts"
            ]
          }
        },
        "required": ["notices", "_embedded", "_links"]
      },
      "EmbeddedBranchVersion": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "latest": { "type": "boolean" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["name", "latest", "_links"]
      },
      "EmbeddedEnvironment": {
        "type": "object",
        "properties": {
          "displayName": { "type": "string" },
          "name": { "type": "string" },
          "production": { "type": "boolean" },
          "uuid": { "format": "uuid", "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": [
          "displayName",
          "name",
          "production",
          "uuid",
          "createdAt",
          "_links"
        ]
      },
      "EmbeddedLabel": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["name", "_links"]
      },
      "EmbeddedLink": {
        "type": "object",
        "properties": {
          "href": { "type": "string" },
          "name": { "type": "string" },
          "templated": { "type": "boolean" },
          "title": { "type": "string" }
        },
        "required": ["href"]
      },
      "EmbeddedPacticipant": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["name", "_links"]
      },
      "EmbeddedTag": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["name", "_links"]
      },
      "EmbeddedTeam": {
        "type": "object",
        "properties": {
          "isDefault": { "type": "boolean" },
          "name": { "type": "string" },
          "uuid": { "format": "uuid", "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["name", "uuid", "_links"]
      },
      "EmbeddedUser": {
        "type": "object",
        "properties": {
          "active": { "type": "boolean" },
          "email": { "format": "email", "type": "string" },
          "firstName": { "type": "string" },
          "identityProviderId": { "type": "string" },
          "lastName": { "type": "string" },
          "name": { "type": "string" },
          "uuid": { "format": "uuid", "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["active", "uuid", "_links"]
      },
      "EmbeddedVersion": {
        "type": "object",
        "properties": {
          "number": { "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["number", "_links"]
      },
      "EmbeddedWebhook": {
        "type": "object",
        "properties": {
          "consumerName": { "type": "string" },
          "description": { "type": "string" },
          "enabled": { "type": "boolean" },
          "providerName": { "type": "string" },
          "teamUuid": { "format": "uuid", "type": "string" },
          "uuid": { "type": "string" },
          "_embedded": {
            "type": "object",
            "properties": {
              "team": { "$ref": "#/components/schemas/EmbeddedTeam" }
            },
            "required": ["team"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["description", "enabled", "uuid", "_links"]
      },
      "Environment": {
        "type": "object",
        "properties": {
          "createdAt": { "format": "date-time", "type": "string" },
          "displayName": { "type": "string" },
          "isDefault": { "type": "boolean" },
          "name": { "type": "string" },
          "production": { "type": "boolean" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "uuid": { "format": "uuid", "type": "string" },
          "teamUuids": {
            "type": "array",
            "items": { "format": "uuid", "type": "string" }
          },
          "_embedded": {
            "type": "object",
            "properties": {
              "teams": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedTeam" }
              }
            },
            "required": ["teams"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:currently-deployed-deployed-versions": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:currently-supported-released-versions": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:environments": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": [
              "self",
              "pb:currently-deployed-deployed-versions",
              "pb:currently-supported-released-versions",
              "pb:environments"
            ]
          }
        },
        "required": [
          "createdAt",
          "displayName",
          "name",
          "production",
          "uuid",
          "_links"
        ]
      },
      "Environments": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "environments": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/Environment" }
              }
            },
            "required": ["environments"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:environments": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedLink" }
              }
            },
            "required": ["self", "pb:environments"]
          }
        },
        "required": ["_embedded", "_links"]
      },
      "CreateUpdateEnvironment": {
        "type": "object",
        "properties": {
          "displayName": { "type": "string" },
          "name": { "minLength": 1, "type": "string" },
          "production": { "type": "boolean" },
          "teamUuids": {
            "type": "array",
            "items": { "format": "uuid", "type": "string" }
          }
        },
        "required": ["name", "production"]
      },
      "Integration": {
        "type": "object",
        "properties": {
          "consumer": {
            "type": "object",
            "properties": { "name": { "type": "string" } },
            "required": ["name"]
          },
          "provider": {
            "type": "object",
            "properties": { "name": { "type": "string" } },
            "required": ["name"]
          },
          "verificationModes": {
            "type": "array",
            "items": { "type": "string", "enum": ["comparison", "replay"] }
          },
          "_links": {
            "type": "object",
            "properties": {
              "pb:dashboard": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:matrix": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:group": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["pb:dashboard", "pb:matrix", "pb:group"]
          }
        },
        "required": ["consumer", "provider", "verificationModes", "_links"]
      },
      "Integrations": {
        "type": "object",
        "properties": {
          "page": { "$ref": "#/components/schemas/Page" },
          "_embedded": {
            "type": "object",
            "properties": {
              "integrations": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/Integration" }
              }
            },
            "required": ["integrations"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["_embedded", "_links"]
      },
      "LegacyValidationErrors": {
        "description": "The legacy errors format used before the introduction of application/problem+json. Used for HTTP 400 responses. The application/problem+json format is now recommended, but must be explicitly enabled by including 'application/problem+json' in the Accept header.",
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "patternProperties": {
              "^(.*)$": { "type": "array", "items": { "type": "string" } }
            }
          }
        },
        "required": ["errors"]
      },
      "MatrixPacticipantVersion": {
        "type": "object",
        "properties": {
          "branch": {
            "deprecated": true,
            "description": "Use branchVersions",
            "anyOf": [{ "type": "null" }, { "type": "string" }]
          },
          "branches": {
            "deprecated": true,
            "description": "Use branchVersions",
            "type": "array",
            "items": { "$ref": "#/components/schemas/EmbeddedBranchVersion" }
          },
          "branchVersions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/EmbeddedBranchVersion" }
          },
          "environments": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/EmbeddedEnvironment" }
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          },
          "number": { "type": "string" },
          "tags": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "latest": { "type": "boolean" },
                "name": { "type": "string" },
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": { "$ref": "#/components/schemas/EmbeddedLink" }
                  },
                  "required": ["self"]
                }
              },
              "required": ["latest", "name", "_links"]
            }
          }
        },
        "required": [
          "branch",
          "branches",
          "branchVersions",
          "environments",
          "_links",
          "number",
          "tags"
        ]
      },
      "MatrixPacticipant": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "version": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/MatrixPacticipantVersion" }
            ]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["name", "version", "_links"]
      },
      "Matrix": {
        "type": "object",
        "properties": {
          "matrix": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "consumer": {
                  "$ref": "#/components/schemas/MatrixPacticipant"
                },
                "pact": {
                  "type": "object",
                  "properties": {
                    "createdAt": { "format": "date-time", "type": "string" },
                    "_links": {
                      "type": "object",
                      "properties": {
                        "self": { "$ref": "#/components/schemas/EmbeddedLink" }
                      },
                      "required": ["self"]
                    }
                  },
                  "required": ["createdAt", "_links"]
                },
                "provider": {
                  "$ref": "#/components/schemas/MatrixPacticipant"
                },
                "verificationResult": {
                  "anyOf": [
                    { "type": "null" },
                    {
                      "type": "object",
                      "properties": {
                        "success": { "type": "boolean" },
                        "verifiedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "_links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "$ref": "#/components/schemas/EmbeddedLink"
                            }
                          },
                          "required": ["self"]
                        }
                      },
                      "required": ["success", "verifiedAt", "_links"]
                    }
                  ]
                }
              },
              "required": ["consumer", "pact", "provider", "verificationResult"]
            }
          },
          "notices": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Notice" }
          },
          "summary": {
            "type": "object",
            "properties": {
              "deployable": {
                "description": "The property that indicates whether or not the pacticipant version is safe to deploy.",
                "anyOf": [{ "type": "null" }, { "type": "boolean" }]
              },
              "failed": { "minimum": 0, "type": "number" },
              "reason": {
                "description": "Deprecated. Replaced by notices.",
                "deprecated": true,
                "type": "string"
              },
              "success": { "minimum": 0, "type": "number" },
              "unknown": { "minimum": 0, "type": "number" }
            },
            "required": ["deployable", "failed", "reason", "success", "unknown"]
          }
        },
        "required": ["matrix", "notices", "summary"]
      },
      "Metrics": {
        "type": "object",
        "properties": {
          "crossContractComparisons": {
            "type": "object",
            "properties": { "count": { "minimum": 0, "type": "number" } },
            "required": ["count"]
          },
          "deployedVersions": {
            "type": "object",
            "properties": {
              "count": { "minimum": 0, "type": "number" },
              "userCreatedCount": { "minimum": 0, "type": "number" },
              "currentlyDeployedCount": { "minimum": 0, "type": "number" }
            },
            "required": ["count", "userCreatedCount", "currentlyDeployedCount"]
          },
          "environments": {
            "type": "object",
            "properties": { "count": { "minimum": 0, "type": "number" } },
            "required": ["count"]
          },
          "interactions": {
            "type": "object",
            "properties": {
              "latestInteractionsAndMessagesCount": {
                "minimum": 0,
                "type": "number"
              },
              "latestInteractionsCount": { "minimum": 0, "type": "number" },
              "latestMessagesCount": { "minimum": 0, "type": "number" }
            },
            "required": [
              "latestInteractionsAndMessagesCount",
              "latestInteractionsCount",
              "latestMessagesCount"
            ]
          },
          "integrations": {
            "type": "object",
            "properties": { "count": { "minimum": 0, "type": "number" } },
            "required": ["count"]
          },
          "matrix": {
            "type": "object",
            "properties": {
              "count": {
                "deprecated": true,
                "description": "Due to performance issues calculating this value, it is now hardcoded to -1.",
                "const": -1,
                "type": "number"
              }
            },
            "required": ["count"]
          },
          "pactPublications": {
            "type": "object",
            "properties": {
              "count": { "minimum": 0, "type": "number" },
              "first": {
                "anyOf": [
                  { "type": "null" },
                  { "format": "date-time", "type": "string" }
                ]
              },
              "last": {
                "anyOf": [
                  { "type": "null" },
                  { "format": "date-time", "type": "string" }
                ]
              }
            },
            "required": ["count", "first", "last"]
          },
          "pactVersions": {
            "type": "object",
            "properties": { "count": { "minimum": 0, "type": "number" } },
            "required": ["count"]
          },
          "pactRevisionsPerConsumerVersion": {
            "type": "object",
            "properties": {
              "distribution": {
                "type": "object",
                "patternProperties": { "^(.*)$": { "type": "number" } }
              }
            }
          },
          "pacticipants": {
            "type": "object",
            "properties": {
              "count": { "minimum": 0, "type": "number" },
              "withMainBranchSetCount": { "minimum": 0, "type": "number" }
            },
            "required": ["count", "withMainBranchSetCount"]
          },
          "pacticipantVersions": {
            "type": "object",
            "properties": {
              "count": { "minimum": 0, "type": "number" },
              "withUserCreatedBranchCount": { "minimum": 0, "type": "number" },
              "withBranchCount": { "minimum": 0, "type": "number" },
              "withBranchSetCount": { "minimum": 0, "type": "number" }
            },
            "required": [
              "count",
              "withUserCreatedBranchCount",
              "withBranchCount",
              "withBranchSetCount"
            ]
          },
          "providerContractPublications": {
            "type": "object",
            "properties": { "count": { "minimum": 0, "type": "number" } },
            "required": ["count"]
          },
          "providerContractVersions": {
            "type": "object",
            "properties": { "count": { "minimum": 0, "type": "number" } },
            "required": ["count"]
          },
          "providerContractSelfVerifications": {
            "type": "object",
            "properties": { "count": { "minimum": 0, "type": "number" } },
            "required": ["count"]
          },
          "releasedVersions": {
            "type": "object",
            "properties": {
              "count": { "minimum": 0, "type": "number" },
              "currentlySupportedCount": { "minimum": 0, "type": "number" }
            },
            "required": ["count", "currentlySupportedCount"]
          },
          "secrets": {
            "type": "object",
            "properties": {
              "count": { "minimum": 0, "type": "number" },
              "countsByTeam": { "type": "array", "items": { "type": "number" } }
            },
            "required": ["count", "countsByTeam"]
          },
          "tags": {
            "type": "object",
            "properties": {
              "count": { "minimum": 0, "type": "number" },
              "distinctCount": { "minimum": 0, "type": "number" },
              "distinctWithPacticipantCount": { "minimum": 0, "type": "number" }
            },
            "required": [
              "count",
              "distinctCount",
              "distinctWithPacticipantCount"
            ]
          },
          "teams": {
            "type": "object",
            "properties": { "count": { "minimum": 0, "type": "number" } },
            "required": ["count"]
          },
          "triggeredWebhooks": {
            "type": "object",
            "properties": { "count": { "minimum": 0, "type": "number" } },
            "required": ["count"]
          },
          "users": {
            "type": "object",
            "properties": {
              "activeRegularCount": { "minimum": 0, "type": "number" },
              "activeSystemCount": { "minimum": 0, "type": "number" }
            },
            "required": ["activeRegularCount", "activeSystemCount"]
          },
          "verificationResults": {
            "type": "object",
            "properties": {
              "count": { "minimum": 0, "type": "number" },
              "successCount": { "minimum": 0, "type": "number" },
              "failureCount": { "minimum": 0, "type": "number" },
              "distinctCount": { "minimum": 0, "type": "number" },
              "first": {
                "anyOf": [
                  { "type": "null" },
                  { "format": "date-time", "type": "string" }
                ]
              },
              "last": {
                "anyOf": [
                  { "type": "null" },
                  { "format": "date-time", "type": "string" }
                ]
              }
            },
            "required": [
              "count",
              "successCount",
              "failureCount",
              "distinctCount",
              "first",
              "last"
            ]
          },
          "verificationResultsPerPactVersion": {
            "type": "object",
            "properties": {
              "distribution": {
                "type": "object",
                "patternProperties": { "^(.*)$": { "type": "number" } }
              }
            }
          },
          "webhookExecutions": {
            "type": "object",
            "properties": { "count": { "minimum": 0, "type": "number" } },
            "required": ["count"]
          },
          "webhooks": {
            "type": "object",
            "properties": { "count": { "minimum": 0, "type": "number" } },
            "required": ["count"]
          }
        },
        "required": [
          "crossContractComparisons",
          "deployedVersions",
          "environments",
          "interactions",
          "integrations",
          "matrix",
          "pactPublications",
          "pactVersions",
          "pactRevisionsPerConsumerVersion",
          "pacticipants",
          "pacticipantVersions",
          "providerContractPublications",
          "providerContractVersions",
          "providerContractSelfVerifications",
          "releasedVersions",
          "secrets",
          "tags",
          "teams",
          "triggeredWebhooks",
          "users",
          "verificationResults",
          "verificationResultsPerPactVersion",
          "webhookExecutions",
          "webhooks"
        ]
      },
      "TeamMetrics": {
        "type": "object",
        "properties": {
          "teams": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "metrics": {
                  "type": "object",
                  "properties": {
                    "interactions": {
                      "type": "object",
                      "properties": {
                        "latestInteractionsCount": { "type": "number" },
                        "latestMessagesCount": { "type": "number" }
                      },
                      "required": [
                        "latestInteractionsCount",
                        "latestMessagesCount"
                      ]
                    },
                    "pacticipants": {
                      "type": "object",
                      "properties": { "count": { "type": "number" } },
                      "required": ["count"]
                    },
                    "integrations": {
                      "type": "object",
                      "properties": { "count": { "type": "number" } },
                      "required": ["count"]
                    },
                    "pactPublications": {
                      "type": "object",
                      "properties": {
                        "count": { "type": "number" },
                        "first": {
                          "anyOf": [{ "type": "Date" }, { "type": "number" }]
                        },
                        "last": {
                          "anyOf": [{ "type": "Date" }, { "type": "number" }]
                        }
                      },
                      "required": ["count", "first", "last"]
                    },
                    "pactVersions": {
                      "type": "object",
                      "properties": { "count": { "type": "number" } },
                      "required": ["count"]
                    },
                    "verificationResults": {
                      "type": "object",
                      "properties": {
                        "count": { "type": "number" },
                        "successCount": { "type": "number" },
                        "failureCount": { "type": "number" },
                        "first": {
                          "anyOf": [{ "type": "Date" }, { "type": "number" }]
                        },
                        "last": {
                          "anyOf": [{ "type": "Date" }, { "type": "number" }]
                        }
                      },
                      "required": [
                        "count",
                        "successCount",
                        "failureCount",
                        "first",
                        "last"
                      ]
                    },
                    "users": {
                      "type": "object",
                      "properties": {
                        "activeRegularCount": { "type": "number" },
                        "activeSystemCount": { "type": "number" }
                      },
                      "required": ["activeRegularCount", "activeSystemCount"]
                    },
                    "webhooks": {
                      "type": "object",
                      "properties": { "count": { "type": "number" } },
                      "required": ["count"]
                    },
                    "webhookExecutions": {
                      "type": "object",
                      "properties": { "count": { "type": "number" } },
                      "required": ["count"]
                    },
                    "triggeredWebhooks": {
                      "type": "object",
                      "properties": { "count": { "type": "number" } },
                      "required": ["count"]
                    },
                    "secrets": {
                      "type": "object",
                      "properties": { "count": { "type": "number" } },
                      "required": ["count"]
                    },
                    "environments": {
                      "type": "object",
                      "properties": { "count": { "type": "number" } },
                      "required": ["count"]
                    },
                    "providerContractPublications": {
                      "type": "object",
                      "properties": { "count": { "type": "number" } },
                      "required": ["count"]
                    },
                    "providerContractVersions": {
                      "type": "object",
                      "properties": { "count": { "type": "number" } },
                      "required": ["count"]
                    },
                    "providerContractSelfVerifications": {
                      "type": "object",
                      "properties": { "count": { "type": "number" } },
                      "required": ["count"]
                    },
                    "deployedVersions": {
                      "type": "object",
                      "properties": {
                        "count": { "type": "number" },
                        "currentlyDeployedCount": { "type": "number" }
                      },
                      "required": ["count", "currentlyDeployedCount"]
                    },
                    "releasedVersions": {
                      "type": "object",
                      "properties": {
                        "count": { "type": "number" },
                        "currentlySupportedCount": { "type": "number" }
                      },
                      "required": ["count", "currentlySupportedCount"]
                    }
                  },
                  "required": [
                    "interactions",
                    "pacticipants",
                    "integrations",
                    "pactPublications",
                    "pactVersions",
                    "verificationResults",
                    "users",
                    "webhooks",
                    "webhookExecutions",
                    "triggeredWebhooks",
                    "secrets",
                    "environments",
                    "providerContractPublications",
                    "providerContractVersions",
                    "providerContractSelfVerifications",
                    "deployedVersions",
                    "releasedVersions"
                  ]
                }
              },
              "required": ["name", "metrics"]
            }
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["teams", "_links"]
      },
      "Network": {
        "type": "object",
        "properties": {
          "integrations": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Integration" }
          }
        },
        "required": ["integrations"]
      },
      "Notice": {
        "type": "object",
        "properties": {
          "text": { "type": "string" },
          "type": {
            "anyOf": [
              { "const": "info", "type": "string" },
              { "const": "debug", "type": "string" },
              { "const": "warning", "type": "string" },
              { "const": "prompt", "type": "string" },
              { "const": "success", "type": "string" },
              { "const": "error", "type": "string" }
            ]
          }
        },
        "required": ["text", "type"]
      },
      "Notices": {
        "type": "object",
        "properties": {
          "notices": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Notice" }
          }
        },
        "required": ["notices"]
      },
      "Overview": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "consumer": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "object",
                      "properties": {
                        "deployedVersions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "environmentDisplayName": { "type": "string" }
                            },
                            "required": ["environmentDisplayName"]
                          }
                        },
                        "headBranchNames": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "number": { "type": "string" }
                      },
                      "required": [
                        "deployedVersions",
                        "headBranchNames",
                        "number"
                      ]
                    }
                  },
                  "required": ["version"]
                },
                "latestVerificationResultTags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": { "name": { "type": "string" } },
                    "required": ["name"]
                  }
                },
                "latestVerificationResult": {
                  "anyOf": [
                    { "type": "null" },
                    {
                      "type": "object",
                      "properties": {
                        "verifiedAt": { "type": "string" },
                        "_links": {
                          "type": "object",
                          "properties": {
                            "self": {
                              "$ref": "#/components/schemas/EmbeddedLink"
                            }
                          },
                          "required": ["self"]
                        }
                      },
                      "required": ["verifiedAt", "_links"]
                    }
                  ]
                },
                "pact": {
                  "type": "object",
                  "properties": {
                    "createdAt": { "format": "date-time", "type": "string" },
                    "_links": {
                      "type": "object",
                      "properties": {
                        "self": { "$ref": "#/components/schemas/EmbeddedLink" }
                      },
                      "required": ["self"]
                    }
                  },
                  "required": ["createdAt", "_links"]
                },
                "pactTags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": { "name": { "type": "string" } },
                    "required": ["name"]
                  }
                },
                "provider": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "anyOf": [
                        { "type": "null" },
                        {
                          "type": "object",
                          "properties": {
                            "deployedVersions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "environmentDisplayName": { "type": "string" }
                                },
                                "required": ["environmentDisplayName"]
                              }
                            },
                            "headBranchNames": {
                              "type": "array",
                              "items": { "type": "string" }
                            },
                            "number": { "type": "string" }
                          },
                          "required": [
                            "deployedVersions",
                            "headBranchNames",
                            "number"
                          ]
                        }
                      ]
                    }
                  },
                  "required": ["version"]
                },
                "verificationModes": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "verificationStatus": {
                  "$ref": "#/components/schemas/VerificationStatus"
                }
              },
              "required": [
                "consumer",
                "latestVerificationResultTags",
                "latestVerificationResult",
                "pact",
                "pactTags",
                "provider",
                "verificationModes",
                "verificationStatus"
              ]
            }
          }
        },
        "required": ["items"]
      },
      "Pacticipant": {
        "type": "object",
        "properties": {
          "createdAt": { "format": "date-time", "type": "string" },
          "displayName": { "type": "string" },
          "mainBranch": { "type": "string" },
          "name": { "type": "string" },
          "repositoryName": { "type": "string" },
          "repositoryNamespace": { "type": "string" },
          "repositoryUrl": { "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "title": { "type": "string" },
          "_embedded": {
            "type": "object",
            "properties": {
              "latest-version": {
                "deprecated": true,
                "description": "Use latestVersion",
                "type": "object",
                "properties": {
                  "number": { "type": "string" },
                  "title": { "type": "string" },
                  "name": { "type": "string" }
                },
                "required": ["number", "title", "name"]
              },
              "labels": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedLabel" }
              },
              "latestVersion": {
                "type": "object",
                "properties": {
                  "number": { "type": "string" },
                  "_links": {
                    "type": "object",
                    "properties": {
                      "self": { "$ref": "#/components/schemas/EmbeddedLink" }
                    },
                    "required": ["self"]
                  }
                },
                "required": ["number", "_links"]
              }
            },
            "required": ["labels"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "pb:branch-version": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:branches": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:can-i-deploy-badge": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:can-i-deploy-branch-to-environment-badge": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:label": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:version": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:version-tag": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:versions": { "$ref": "#/components/schemas/EmbeddedLink" },
              "curies": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedLink" }
              },
              "self": { "$ref": "#/components/schemas/EmbeddedLink" },
              "versions": {
                "deprecated": true,
                "$ref": "#/components/schemas/EmbeddedLink"
              }
            },
            "required": [
              "pb:branch-version",
              "pb:branches",
              "pb:can-i-deploy-badge",
              "pb:can-i-deploy-branch-to-environment-badge",
              "pb:label",
              "pb:version",
              "pb:version-tag",
              "pb:versions",
              "curies",
              "self",
              "versions"
            ]
          }
        },
        "required": ["createdAt", "displayName", "name", "_embedded", "_links"]
      },
      "Pacticipants": {
        "type": "object",
        "properties": {
          "page": { "$ref": "#/components/schemas/Page" },
          "pacticipants": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Pacticipant" }
          },
          "_embedded": {
            "type": "object",
            "properties": {
              "pacticipants": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/Pacticipant" }
              }
            },
            "required": ["pacticipants"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" },
              "next": { "$ref": "#/components/schemas/EmbeddedLink" },
              "previous": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:pacticipants-with-label": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:pacticipants": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedLink" }
              },
              "pacticipants": {
                "deprecated": true,
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedLink" }
              }
            },
            "required": [
              "self",
              "pb:pacticipants-with-label",
              "pb:pacticipants",
              "pacticipants"
            ]
          }
        },
        "required": ["_embedded", "_links"]
      },
      "CreatePacticipant": {
        "type": "object",
        "properties": {
          "displayName": { "type": "string" },
          "mainBranch": { "type": "string" },
          "name": {
            "description": "Cannot be modified after creation",
            "type": "string"
          },
          "repositoryName": { "type": "string" },
          "repositoryNamespace": { "type": "string" },
          "repositoryUrl": { "type": "string" }
        },
        "required": ["name"]
      },
      "UpdatePacticipant": {
        "type": "object",
        "properties": {
          "displayName": { "type": "string" },
          "mainBranch": { "type": "string" },
          "name": {
            "description": "Cannot be modified after creation",
            "type": "string"
          },
          "repositoryName": { "type": "string" },
          "repositoryNamespace": { "type": "string" },
          "repositoryUrl": { "type": "string" }
        }
      },
      "CreateUpdatePacticipantVersion": {
        "type": "object",
        "properties": {
          "buildUrl": {
            "description": "Setting the buildUrl in the version resource is deprecated as it is now set when publishing consumer and provider contracts using the /contracts/publish and /provider-contracts/provider/{provider_name}/publish endpoints.",
            "deprecated": true,
            "type": "string"
          }
        }
      },
      "PacticipantVersion": {
        "type": "object",
        "properties": {
          "createdAt": { "format": "date-time", "type": "string" },
          "number": { "type": "string" },
          "buildUrl": {
            "description": "Setting the buildUrl in the version resource is deprecated as it is now set when publishing consumer and provider contracts using the /contracts/publish and /provider-contracts/provider/{provider_name}/publish endpoints.",
            "deprecated": true,
            "type": "string"
          },
          "updatedAt": { "format": "date-time", "type": "string" },
          "_embedded": {
            "type": "object",
            "properties": {
              "branchVersions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmbeddedBranchVersion"
                }
              },
              "tags": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedTag" }
              }
            },
            "required": ["branchVersions", "tags"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "pb:latest-verification-results-where-pacticipant-is-consumer": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:pact-versions": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedLink" }
              },
              "pb:pacticipant": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:tag": { "$ref": "#/components/schemas/EmbeddedLink" },
              "curies": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedLink" }
              },
              "self": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:record-deployment": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedLink" }
              },
              "pb:record-release": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedLink" }
              }
            },
            "required": [
              "pb:latest-verification-results-where-pacticipant-is-consumer",
              "pb:pact-versions",
              "pb:pacticipant",
              "pb:tag",
              "curies",
              "self",
              "pb:record-deployment",
              "pb:record-release"
            ]
          }
        },
        "required": ["createdAt", "number", "_embedded", "_links"]
      },
      "PacticipantVersionInCollection": {
        "type": "object",
        "properties": {
          "createdAt": { "format": "date-time", "type": "string" },
          "number": { "type": "string" },
          "buildUrl": {
            "description": "Setting the buildUrl in the version resource is deprecated as it is now set when publishing consumer and provider contracts using the /contracts/publish and /provider-contracts/provider/{provider_name}/publish endpoints.",
            "deprecated": true,
            "type": "string"
          },
          "updatedAt": { "format": "date-time", "type": "string" },
          "_embedded": {
            "type": "object",
            "properties": {
              "branchVersions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmbeddedBranchVersion"
                }
              },
              "tags": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedTag" }
              }
            },
            "required": ["branchVersions", "tags"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "pb:latest-verification-results-where-pacticipant-is-consumer": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:pact-versions": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedLink" }
              },
              "pb:pacticipant": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:tag": { "$ref": "#/components/schemas/EmbeddedLink" },
              "curies": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedLink" }
              },
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": [
              "pb:latest-verification-results-where-pacticipant-is-consumer",
              "pb:pact-versions",
              "pb:pacticipant",
              "pb:tag",
              "curies",
              "self"
            ]
          }
        },
        "required": ["createdAt", "number", "_embedded", "_links"]
      },
      "PacticipantVersions": {
        "type": "object",
        "properties": {
          "page": { "$ref": "#/components/schemas/Page" },
          "_embedded": {
            "type": "object",
            "properties": {
              "versions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PacticipantVersionInCollection"
                }
              }
            },
            "required": ["versions"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "pb:pacticipant": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:versions": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedLink" }
              },
              "next": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pacticipant": {
                "deprecated": true,
                "description": "Use pb:pacticipant",
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "previous": { "$ref": "#/components/schemas/EmbeddedLink" },
              "self": { "$ref": "#/components/schemas/EmbeddedLink" },
              "versions": {
                "deprecated": true,
                "description": "Use pb:versions",
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedLink" }
              }
            },
            "required": [
              "pb:pacticipant",
              "pb:versions",
              "pacticipant",
              "self",
              "versions"
            ]
          }
        },
        "required": ["_embedded", "_links"]
      },
      "Page": {
        "type": "object",
        "properties": {
          "number": { "minimum": 1, "type": "number" },
          "size": { "minimum": 0, "type": "number" },
          "totalElements": { "minimum": 0, "type": "number" },
          "totalPages": { "minimum": 0, "type": "number" }
        },
        "required": ["number", "size", "totalElements", "totalPages"]
      },
      "Permission": {
        "type": "object",
        "properties": {
          "description": { "type": "string" },
          "group": { "type": "string" },
          "label": { "type": "string" },
          "scope": { "type": "string" },
          "uuid": { "format": "uuid", "type": "string" }
        },
        "required": ["description", "group", "label", "scope", "uuid"]
      },
      "Permissions": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Permission" }
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["permissions", "_links"]
      },
      "Preference": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "uuid": { "format": "uuid", "type": "string" },
          "value": {},
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["name", "uuid", "_links"]
      },
      "Preferences": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "preferences": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/Preference" }
              }
            },
            "required": ["preferences"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["_embedded", "_links"]
      },
      "CreateUpdatePreference": {
        "type": "object",
        "properties": { "value": {} },
        "required": ["value"]
      },
      "CreateUpdatePreferences": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "preferences": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": { "name": { "type": "string" }, "value": {} },
                  "required": ["name", "value"]
                }
              }
            },
            "required": ["preferences"]
          }
        },
        "required": ["_embedded"]
      },
      "ProblemJson": {
        "description": "Problem response as per https://www.rfc-editor.org/rfc/rfc9457.html. To enable this content type to be used to render error responses, add 'application/problem+json' to the Accept header. Otherwise, the errors will be returned in the LegacyValidationErrors format.",
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "type": { "type": "string" },
          "status": { "type": "integer" },
          "detail": { "type": "string" },
          "instance": { "type": "string" },
          "errors": {
            "description": "an array of error details to accompany a problem details response",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "detail": {
                  "description": "a granular description on the specific error related to a body property, query parameter, path parameters, and/or header",
                  "type": "string"
                },
                "header": {
                  "description": "the name of the header that is the source of error",
                  "type": "string"
                },
                "parameter": {
                  "description": "the name of the query or path parameter that is the source of error",
                  "type": "string"
                },
                "pointer": {
                  "description": "a JSON Pointer to a specific request body property that is the source of error",
                  "type": "string"
                }
              },
              "required": ["detail"]
            }
          }
        },
        "required": ["title", "type", "status"]
      },
      "ProviderContract": {
        "type": "object",
        "properties": {
          "content": { "type": "string" },
          "contentType": { "type": "string" },
          "contractType": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" }
        },
        "required": ["content", "contentType", "contractType", "createdAt"]
      },
      "PublishProviderContract": {
        "type": "object",
        "properties": {
          "pacticipantVersionNumber": { "minLength": 1, "type": "string" },
          "tags": { "type": "array", "items": { "type": "string" } },
          "branch": { "type": "string" },
          "buildUrl": { "type": "string" },
          "contract": {
            "type": "object",
            "properties": {
              "content": { "minLength": 1, "type": "string" },
              "contentType": {
                "anyOf": [
                  { "const": "application/json", "type": "string" },
                  { "const": "application/yaml", "type": "string" },
                  { "const": "application/yml", "type": "string" }
                ]
              },
              "specification": { "const": "oas", "type": "string" },
              "selfVerificationResults": {
                "type": "object",
                "properties": {
                  "success": { "type": "boolean" },
                  "content": { "minLength": 1, "type": "string" },
                  "contentType": { "minLength": 1, "type": "string" },
                  "format": {
                    "minLength": 1,
                    "description": "Used to give further details on the format, for example \"junit\"",
                    "type": "string"
                  },
                  "verifier": { "minLength": 1, "type": "string" },
                  "verifierVersion": { "minLength": 1, "type": "string" }
                },
                "required": ["success", "content", "contentType", "verifier"]
              }
            },
            "required": [
              "content",
              "contentType",
              "specification",
              "selfVerificationResults"
            ]
          }
        },
        "required": ["pacticipantVersionNumber", "contract"]
      },
      "PublishedProviderContract": {
        "type": "object",
        "properties": {
          "notices": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Notice" }
          },
          "_embedded": {
            "type": "object",
            "properties": {
              "pacticipant": {
                "$ref": "#/components/schemas/EmbeddedPacticipant"
              },
              "version": { "$ref": "#/components/schemas/EmbeddedVersion" }
            },
            "required": ["pacticipant", "version"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "pf:provider-contract": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:pacticipant": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:pacticipant-version": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:pacticipant-version-tags": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedLink" }
              },
              "pb:branch-version": {
                "$ref": "#/components/schemas/EmbeddedLink"
              }
            },
            "required": [
              "pf:provider-contract",
              "pb:pacticipant",
              "pb:pacticipant-version",
              "pb:pacticipant-version-tags",
              "pb:branch-version"
            ]
          }
        },
        "required": ["notices", "_embedded", "_links"]
      },
      "ProviderContractAndPactVerificationResults": {
        "type": "object",
        "properties": {
          "results": {},
          "success": { "type": "boolean" },
          "verificationDate": { "format": "date-time", "type": "string" },
          "verifier": { "type": "string" },
          "verifierVersion": { "type": "string" }
        },
        "required": ["results", "success", "verifier", "verifierVersion"]
      },
      "RecordDeployment": {
        "type": "object",
        "properties": {
          "applicationInstance": {
            "description": "This field is used to distinguish between deployed versions of an application within the same environment. See the documentation under the heading 'Application Instances' at https://docs.pact.io/record-deployment",
            "type": "string"
          }
        }
      },
      "EmbeddedDeployedVersion": {
        "type": "object",
        "properties": {
          "uuid": { "format": "uuid", "type": "string" },
          "target": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "currentlyDeployed": { "type": "boolean" },
          "applicationInstance": { "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          },
          "_embedded": {
            "type": "object",
            "properties": {
              "environment": { "$ref": "#/components/schemas/Environment" },
              "pacticipant": {
                "$ref": "#/components/schemas/EmbeddedPacticipant"
              },
              "version": { "$ref": "#/components/schemas/EmbeddedVersion" }
            }
          }
        },
        "required": ["uuid", "createdAt", "currentlyDeployed", "_links"]
      },
      "DeployedVersion": {
        "type": "object",
        "properties": {
          "uuid": { "format": "uuid", "type": "string" },
          "target": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "currentlyDeployed": { "type": "boolean" },
          "applicationInstance": { "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          },
          "_embedded": {
            "type": "object",
            "properties": {
              "environment": { "$ref": "#/components/schemas/Environment" },
              "pacticipant": {
                "$ref": "#/components/schemas/EmbeddedPacticipant"
              },
              "version": { "$ref": "#/components/schemas/EmbeddedVersion" }
            },
            "required": ["environment", "pacticipant", "version"]
          }
        },
        "required": [
          "uuid",
          "createdAt",
          "currentlyDeployed",
          "_links",
          "_embedded"
        ]
      },
      "DeployedVersionsForEnvironment": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "deployedVersions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmbeddedDeployedVersion"
                }
              }
            },
            "required": ["deployedVersions"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["_embedded", "_links"]
      },
      "DeployedVersionsForVersionAndEnvironment": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "deployedVersions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmbeddedDeployedVersion"
                }
              }
            },
            "required": ["deployedVersions"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["_embedded", "_links"]
      },
      "EmbeddedReleasedVersion": {
        "type": "object",
        "properties": {
          "uuid": { "format": "uuid", "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "currentlySupported": { "type": "boolean" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          },
          "_embedded": {
            "type": "object",
            "properties": {
              "environment": { "$ref": "#/components/schemas/Environment" },
              "pacticipant": {
                "$ref": "#/components/schemas/EmbeddedPacticipant"
              },
              "version": { "$ref": "#/components/schemas/EmbeddedVersion" }
            }
          }
        },
        "required": ["uuid", "createdAt", "currentlySupported", "_links"]
      },
      "ReleasedVersion": {
        "type": "object",
        "properties": {
          "uuid": { "format": "uuid", "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "currentlySupported": { "type": "boolean" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          },
          "_embedded": {
            "type": "object",
            "properties": {
              "environment": { "$ref": "#/components/schemas/Environment" },
              "pacticipant": {
                "$ref": "#/components/schemas/EmbeddedPacticipant"
              },
              "version": { "$ref": "#/components/schemas/EmbeddedVersion" }
            },
            "required": ["environment", "pacticipant", "version"]
          }
        },
        "required": [
          "uuid",
          "createdAt",
          "currentlySupported",
          "_links",
          "_embedded"
        ]
      },
      "ReleasedVersionsForEnvironment": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "releasedVersions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmbeddedReleasedVersion"
                }
              }
            },
            "required": ["releasedVersions"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["_embedded", "_links"]
      },
      "ReleasedVersionsForVersionAndEnvironment": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "releasedVersions": {
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmbeddedReleasedVersion"
                }
              }
            },
            "required": ["releasedVersions"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["_embedded", "_links"]
      },
      "Role": {
        "type": "object",
        "properties": {
          "created": { "format": "date-time", "type": "string" },
          "description": { "type": "string" },
          "name": { "type": "string" },
          "permissions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Permission" }
          },
          "systemDefined": { "type": "boolean" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "uuid": { "format": "uuid", "type": "string" },
          "_actions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Action" }
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": [
          "name",
          "permissions",
          "systemDefined",
          "createdAt",
          "uuid",
          "_actions",
          "_links"
        ]
      },
      "Roles": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "roles": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/Role" }
              }
            },
            "required": ["roles"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pf:reset": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["_embedded", "_links"]
      },
      "CreateUpdateRole": {
        "type": "object",
        "properties": {
          "description": { "type": "string" },
          "name": { "type": "string" },
          "permissions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": { "scope": { "type": "string" } },
              "required": ["scope"]
            }
          }
        },
        "required": ["name", "permissions"]
      },
      "Root": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:publish-pact": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:publish-contracts": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:latest-pact-versions": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:tagged-pact-versions": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:pacticipants": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:pacticipant": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:latest-provider-pacts": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:latest-provider-pacts-with-tag": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:provider-pacts-with-tag": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:provider-pacts": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:latest-version": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:latest-tagged-version": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:webhooks": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:webhook": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:integrations": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:pacticipant-version-tag": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:pacticipant-branch": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:pacticipant-branch-version": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:pacticipant-version": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:metrics": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:can-i-deploy-pacticipant-version-to-tag": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:can-i-deploy-pacticipant-version-to-environment": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:provider-pacts-for-verification": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "beta:provider-pacts-for-verification": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "curies": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedLink" }
              },
              "pb:environments": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:environment": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pf:publish-provider-contract": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:api-tokens": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:audit": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:secrets": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pf:admin-users": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pf:admin-teams": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pf:admin-system-accounts": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pf:admin-roles": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pf:admin-permissions": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pf:admin-authentication-settings": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pf:user-allocations": {
                "$ref": "#/components/schemas/EmbeddedLink"
              }
            },
            "required": [
              "self",
              "pb:publish-pact",
              "pb:publish-contracts",
              "pb:latest-pact-versions",
              "pb:tagged-pact-versions",
              "pb:pacticipants",
              "pb:pacticipant",
              "pb:latest-provider-pacts",
              "pb:latest-provider-pacts-with-tag",
              "pb:provider-pacts-with-tag",
              "pb:provider-pacts",
              "pb:latest-version",
              "pb:latest-tagged-version",
              "pb:webhook",
              "pb:integrations",
              "pb:pacticipant-version-tag",
              "pb:pacticipant-branch",
              "pb:pacticipant-branch-version",
              "pb:pacticipant-version",
              "pb:metrics",
              "pb:can-i-deploy-pacticipant-version-to-tag",
              "pb:can-i-deploy-pacticipant-version-to-environment",
              "curies",
              "pb:environment",
              "pf:publish-provider-contract",
              "pf:user-allocations"
            ]
          }
        },
        "required": ["_links"]
      },
      "Secret": {
        "type": "object",
        "properties": {
          "createdAt": { "format": "date-time", "type": "string" },
          "description": {
            "anyOf": [{ "type": "null" }, { "type": "string" }]
          },
          "name": { "type": "string" },
          "teamUuid": {
            "description": "Where no team is provided, the secret is not attached to a team and can only be modified by users with the \"secret:manage:*\" permission.",
            "anyOf": [
              { "type": "null" },
              { "format": "uuid", "type": "string" }
            ]
          },
          "updatedAt": { "format": "date-time", "type": "string" },
          "uuid": { "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["createdAt", "description", "name", "uuid", "_links"]
      },
      "Secrets": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "secrets": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/Secret" }
              }
            },
            "required": ["secrets"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["_embedded", "_links"]
      },
      "CreateSecret": {
        "type": "object",
        "properties": {
          "description": {
            "anyOf": [{ "type": "null" }, { "type": "string" }]
          },
          "name": { "type": "string" },
          "teamUuid": {
            "description": "This cannot be changed once created",
            "format": "uuid",
            "type": "string"
          },
          "value": { "type": "string" }
        },
        "required": ["name", "value"]
      },
      "UpdateSecret": {
        "type": "object",
        "properties": {
          "description": {
            "anyOf": [{ "type": "null" }, { "type": "string" }]
          },
          "name": { "type": "string" },
          "value": { "type": "string" }
        }
      },
      "CreatedUpdatedSecret": {
        "type": "object",
        "properties": {
          "createdAt": { "format": "date-time", "type": "string" },
          "description": {
            "anyOf": [{ "type": "null" }, { "type": "string" }]
          },
          "name": { "type": "string" },
          "teamUuid": {
            "description": "Where no team is provided, the secret is not attached to a team and can only be modified by users with the \"secret:manage:*\" permission.",
            "anyOf": [
              { "type": "null" },
              { "format": "uuid", "type": "string" }
            ]
          },
          "updatedAt": { "format": "date-time", "type": "string" },
          "uuid": { "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          },
          "_embedded": {
            "type": "object",
            "properties": { "team": { "$ref": "#/components/schemas/Team" } },
            "required": ["team"]
          }
        },
        "required": ["createdAt", "description", "name", "uuid", "_links"]
      },
      "SelfVerificationResult": {
        "type": "object",
        "properties": {
          "exception": {
            "type": "object",
            "properties": { "message": { "type": "string" } },
            "required": ["message"]
          },
          "interactionDescription": { "type": "string" },
          "interactionId": { "type": "string" },
          "interactionProviderState": { "type": "string" },
          "status": {
            "anyOf": [
              { "const": "passed", "type": "string" },
              { "const": "failed", "type": "string" }
            ]
          },
          "testFullDescription": { "type": "string" }
        },
        "required": [
          "exception",
          "interactionDescription",
          "interactionProviderState",
          "status",
          "testFullDescription"
        ]
      },
      "Tag": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "pacticipant": { "$ref": "#/components/schemas/EmbeddedLink" },
              "self": { "$ref": "#/components/schemas/EmbeddedLink" },
              "version": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["pacticipant", "self", "version"]
          }
        },
        "required": ["name", "createdAt", "_links"]
      },
      "CreatedTeam": {
        "type": "object",
        "properties": {
          "createdAt": { "format": "date-time", "type": "string" },
          "name": { "type": "string" },
          "numberOfMembers": { "type": "number" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "uuid": { "format": "uuid", "type": "string" },
          "_embedded": {
            "type": "object",
            "properties": {
              "administrators": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedUser" }
              },
              "environments": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedEnvironment" }
              },
              "pacticipants": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedPacticipant" }
              }
            },
            "required": ["administrators", "environments", "pacticipants"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": [
          "createdAt",
          "name",
          "numberOfMembers",
          "uuid",
          "_embedded",
          "_links"
        ]
      },
      "Team": {
        "type": "object",
        "properties": {
          "createdAt": { "format": "date-time", "type": "string" },
          "name": { "type": "string" },
          "numberOfMembers": { "type": "number" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "uuid": { "format": "uuid", "type": "string" },
          "_embedded": {
            "type": "object",
            "properties": {
              "administrators": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedUser" }
              },
              "environments": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedEnvironment" }
              },
              "members": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedTeamUser" }
              },
              "pacticipants": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedPacticipant" }
              }
            },
            "required": [
              "administrators",
              "environments",
              "members",
              "pacticipants"
            ]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["createdAt", "name", "numberOfMembers", "uuid", "_links"]
      },
      "TeamInCollection": {
        "type": "object",
        "properties": {
          "createdAt": { "format": "date-time", "type": "string" },
          "name": { "type": "string" },
          "numberOfMembers": { "type": "number" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "uuid": { "format": "uuid", "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["createdAt", "name", "numberOfMembers", "uuid", "_links"]
      },
      "Teams": {
        "type": "object",
        "properties": {
          "page": { "$ref": "#/components/schemas/Page" },
          "teams": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TeamInCollection" }
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" },
              "next": { "$ref": "#/components/schemas/EmbeddedLink" },
              "previous": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["teams", "_links"]
      },
      "CreateUpdateTeam": {
        "type": "object",
        "properties": {
          "administratorUuids": {
            "type": "array",
            "items": { "format": "uuid", "type": "string" }
          },
          "environmentUuids": {
            "type": "array",
            "items": { "format": "uuid", "type": "string" }
          },
          "name": { "type": "string" },
          "pacticipantNames": {
            "type": "array",
            "items": { "minLength": 1, "type": "string" }
          }
        },
        "required": ["name"]
      },
      "PatchUpdateTeamUsers": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "op": {
              "anyOf": [
                { "const": "add", "type": "string" },
                { "const": "remove", "type": "string" }
              ]
            },
            "path": { "const": "/users", "type": "string" },
            "value": {
              "type": "object",
              "properties": {
                "uuid": {
                  "format": "uuid",
                  "description": "User uuid",
                  "type": "string"
                }
              },
              "required": ["uuid"]
            }
          },
          "required": ["op", "path", "value"]
        }
      },
      "EmbeddedTeamUser": {
        "type": "object",
        "properties": {
          "active": { "type": "boolean" },
          "email": { "format": "email", "type": "string" },
          "firstName": { "type": "string" },
          "identityProviderId": { "type": "string" },
          "lastName": { "type": "string" },
          "name": { "type": "string" },
          "uuid": { "format": "uuid", "type": "string" },
          "type": {
            "anyOf": [
              { "const": 0, "type": "number" },
              { "const": 1, "type": "number" }
            ]
          },
          "typeDescription": { "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["active", "uuid", "type", "typeDescription", "_links"]
      },
      "TeamUser": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": { "user": { "$ref": "#/components/schemas/User" } },
            "required": ["user"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["_embedded", "_links"]
      },
      "TeamUsers": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "users": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedTeamUser" }
              }
            },
            "required": ["users"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["_embedded", "_links"]
      },
      "Token": {
        "type": "object",
        "properties": {
          "description": { "type": "string" },
          "expires": { "format": "date-time", "type": "string" },
          "lastUsed": { "format": "date-time", "type": "string" },
          "readOnly": { "type": "boolean" },
          "uuid": { "type": "string" },
          "value": { "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:regenerate": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self", "pb:regenerate"]
          }
        },
        "required": ["description", "readOnly", "uuid", "value", "_links"]
      },
      "Tokens": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/Token" }
              }
            },
            "required": ["items"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["_embedded", "_links"]
      },
      "TriggeredWebhooks": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "triggeredWebhooks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": { "format": "uuid", "type": "string" },
                    "webhookUuid": { "type": "string" },
                    "webhookDescription": { "type": "string" },
                    "triggerType": { "type": "string" },
                    "status": { "type": "string" },
                    "createdAt": { "format": "date-time", "type": "string" },
                    "updatedAt": { "format": "date-time", "type": "string" },
                    "eventName": { "type": "string" },
                    "consumerName": { "type": "string" },
                    "providerName": { "type": "string" },
                    "attempts": { "type": "number" },
                    "consumerVersionNumber": { "type": "string" },
                    "providerVersionNumber": { "type": "string" },
                    "_embedded": {
                      "type": "object",
                      "properties": {
                        "executions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "success": { "type": "boolean" },
                              "logs": { "type": "string" },
                              "createdAt": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "required": ["success", "logs", "createdAt"]
                          }
                        }
                      },
                      "required": ["executions"]
                    },
                    "_links": {
                      "type": "object",
                      "properties": {
                        "pb:webhook": {
                          "type": "object",
                          "properties": { "href": { "type": "string" } },
                          "required": ["href"]
                        }
                      },
                      "required": ["pb:webhook"]
                    }
                  },
                  "required": [
                    "uuid",
                    "webhookUuid",
                    "webhookDescription",
                    "triggerType",
                    "status",
                    "createdAt",
                    "updatedAt",
                    "eventName",
                    "consumerName",
                    "providerName",
                    "attempts",
                    "_embedded",
                    "_links"
                  ]
                }
              }
            },
            "required": ["triggeredWebhooks"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" },
              "next": { "$ref": "#/components/schemas/EmbeddedLink" },
              "previous": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["_embedded", "_links"]
      },
      "User": {
        "type": "object",
        "properties": {
          "active": { "type": "boolean" },
          "authenticationSource": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "email": { "format": "email", "type": "string" },
          "externalIdpId": { "type": "string" },
          "externalIdpUsername": { "type": "string" },
          "firstName": { "type": "string" },
          "identityProviderId": { "type": "string" },
          "lastLogin": { "format": "date-time", "type": "string" },
          "lastName": { "type": "string" },
          "lastTimeTokenAccessed": { "format": "date-time", "type": "string" },
          "name": { "type": "string" },
          "type": {
            "anyOf": [
              { "const": 0, "type": "number" },
              { "const": 1, "type": "number" }
            ]
          },
          "typeDescription": { "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "uuid": { "format": "uuid", "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pf:tokens": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          },
          "_embedded": {
            "type": "object",
            "properties": {
              "roles": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/UserRole" }
              },
              "teams": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/UserTeam" }
              }
            },
            "required": ["roles", "teams"]
          }
        },
        "required": [
          "active",
          "createdAt",
          "type",
          "typeDescription",
          "uuid",
          "_links",
          "_embedded"
        ]
      },
      "Users": {
        "type": "object",
        "properties": {
          "page": { "$ref": "#/components/schemas/Page" },
          "users": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/User" }
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" },
              "next": { "$ref": "#/components/schemas/EmbeddedLink" },
              "previous": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["users", "_links"]
      },
      "CreateUser": {
        "type": "object",
        "properties": {
          "email": { "format": "email", "type": "string" },
          "externalIdpId": {
            "description": "This property is used to match a user provisioned via the SCIM API to their IDP identity on first login. This field is only set when a user is provisioned via the PactFlow SCIM API, for which the SCIM role is required.",
            "type": "string"
          },
          "externalIdpUsername": {
            "description": "This property is used to match a user provisioned via the SCIM API to their IDP identity on first login. This field is only set when a user is provisioned via the PactFlow SCIM API, for which the SCIM role is required.",
            "type": "string"
          },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "name": { "type": "string" }
        },
        "required": ["email", "name"]
      },
      "InviteUsers": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "email": { "format": "email", "type": "string" },
                "name": { "minLength": 1, "type": "string" }
              },
              "required": ["email", "name"]
            }
          }
        },
        "required": ["users"]
      },
      "InvitedUsers": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/User" }
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["users", "_links"]
      },
      "CreateSystemAccount": {
        "type": "object",
        "properties": { "name": { "type": "string" } },
        "required": ["name"]
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "active": { "type": "boolean" },
          "email": { "format": "email", "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "name": { "type": "string" }
        }
      },
      "SetUserRoles": {
        "type": "object",
        "properties": {
          "roles": { "type": "array", "items": { "type": "string" } }
        },
        "required": ["roles"]
      },
      "UserRole": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "permissions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Permission" }
          },
          "uuid": { "format": "uuid", "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["name", "permissions", "uuid", "_links"]
      },
      "UserTeam": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "uuid": { "format": "uuid", "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pf:membership": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pf:integrations": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self", "pf:membership", "pf:integrations"]
          }
        },
        "required": ["name", "uuid", "_links"]
      },
      "ConsumerVersionSelector": {
        "type": "object",
        "properties": {
          "branch": { "minLength": 1, "type": "string" },
          "consumer": { "minLength": 1, "type": "string" },
          "deployed": { "const": true, "type": "boolean" },
          "deployedOrReleased": { "const": true, "type": "boolean" },
          "environment": { "minLength": 1, "type": "string" },
          "fallbackBranch": { "minLength": 1, "type": "string" },
          "fallbackTag": { "minLength": 1, "type": "string" },
          "latest": { "type": "boolean" },
          "mainBranch": { "const": true, "type": "boolean" },
          "matchingBranch": { "const": true, "type": "boolean" },
          "released": { "const": true, "type": "boolean" },
          "tag": { "minLength": 1, "type": "string" }
        }
      },
      "VerifiablePactQuery": {
        "type": "object",
        "properties": {
          "consumerVersionSelectors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "branch": { "minLength": 1, "type": "string" },
                "consumer": { "minLength": 1, "type": "string" },
                "deployed": { "const": true, "type": "boolean" },
                "deployedOrReleased": { "const": true, "type": "boolean" },
                "environment": { "minLength": 1, "type": "string" },
                "fallbackBranch": { "minLength": 1, "type": "string" },
                "fallbackTag": { "minLength": 1, "type": "string" },
                "latest": { "type": "boolean" },
                "mainBranch": { "const": true, "type": "boolean" },
                "matchingBranch": { "const": true, "type": "boolean" },
                "released": { "const": true, "type": "boolean" },
                "tag": { "minLength": 1, "type": "string" }
              }
            }
          },
          "includePendingStatus": { "type": "boolean" },
          "includeWipPactsSince": { "format": "date-time", "type": "string" },
          "providerVersionBranch": { "type": "string" },
          "providerVersionTags": {
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "VerifiablePact": {
        "type": "object",
        "properties": {
          "shortDescription": { "type": "string" },
          "verificationProperties": {
            "type": "object",
            "properties": {
              "pending": { "type": "boolean" },
              "notices": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "when": { "type": "string" },
                    "text": { "type": "string" }
                  },
                  "required": ["when", "text"]
                }
              },
              "wip": { "type": "boolean" }
            },
            "required": ["notices"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["shortDescription", "verificationProperties", "_links"]
      },
      "VerifiablePacts": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "pacts": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/VerifiablePact" }
              }
            },
            "required": ["pacts"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self"]
          }
        },
        "required": ["_embedded", "_links"]
      },
      "VerificationStatus": {
        "anyOf": [
          { "const": "failed", "type": "string" },
          { "const": "failed_pending", "type": "string" },
          { "const": "never", "type": "string" },
          { "const": "success", "type": "string" }
        ]
      },
      "CreateWebhook": {
        "type": "object",
        "properties": {
          "consumer": {
            "type": "object",
            "properties": { "name": { "type": "string" } },
            "required": ["name"]
          },
          "description": { "type": "string" },
          "enabled": { "type": "boolean" },
          "events": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": { "name": { "type": "string" } },
              "required": ["name"]
            }
          },
          "provider": {
            "type": "object",
            "properties": { "name": { "type": "string" } },
            "required": ["name"]
          },
          "request": {
            "type": "object",
            "properties": {
              "body": {},
              "headers": {
                "type": "object",
                "patternProperties": { "^(.*)$": { "type": "string" } }
              },
              "method": { "const": "POST", "type": "string" },
              "password": { "type": "string" },
              "url": { "type": "string" },
              "username": { "type": "string" }
            },
            "required": ["method", "url"]
          },
          "teamUuid": {
            "anyOf": [
              { "type": "null" },
              { "format": "uuid", "type": "string" }
            ]
          }
        },
        "required": ["description", "events", "request"]
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "consumer": {
            "type": "object",
            "properties": { "name": { "type": "string" } },
            "required": ["name"]
          },
          "description": { "type": "string" },
          "enabled": { "type": "boolean" },
          "events": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": { "name": { "type": "string" } },
              "required": ["name"]
            }
          },
          "provider": {
            "type": "object",
            "properties": { "name": { "type": "string" } },
            "required": ["name"]
          },
          "request": {
            "type": "object",
            "properties": {
              "body": {},
              "headers": {
                "type": "object",
                "patternProperties": { "^(.*)$": { "type": "string" } }
              },
              "method": { "const": "POST", "type": "string" },
              "password": { "type": "string" },
              "url": { "type": "string" },
              "username": { "type": "string" }
            },
            "required": ["method", "url"]
          },
          "teamUuid": {
            "anyOf": [
              { "type": "null" },
              { "format": "uuid", "type": "string" }
            ]
          },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "uuid": { "type": "string" },
          "_embedded": {
            "type": "object",
            "properties": {
              "team": { "$ref": "#/components/schemas/EmbeddedTeam" }
            },
            "required": ["team"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:execute": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:consumer": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:provider": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:pact-webhooks": {
                "$ref": "#/components/schemas/EmbeddedLink"
              },
              "pb:webhooks": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["self", "pb:execute", "pb:webhooks"]
          }
        },
        "required": [
          "description",
          "events",
          "request",
          "createdAt",
          "uuid",
          "_links"
        ]
      },
      "Webhooks": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "webhooks": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedWebhook" }
              }
            },
            "required": ["webhooks"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:create": { "$ref": "#/components/schemas/EmbeddedLink" },
              "pb:webhooks": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedLink" }
              },
              "curies": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EmbeddedLink" }
              }
            },
            "required": ["self", "pb:create", "pb:webhooks", "curies"]
          }
        },
        "required": ["_embedded", "_links"]
      },
      "UpdateWebhook": {
        "type": "object",
        "properties": {
          "consumer": {
            "type": "object",
            "properties": { "name": { "type": "string" } },
            "required": ["name"]
          },
          "description": { "type": "string" },
          "enabled": { "type": "boolean" },
          "events": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": { "name": { "type": "string" } },
              "required": ["name"]
            }
          },
          "provider": {
            "type": "object",
            "properties": { "name": { "type": "string" } },
            "required": ["name"]
          },
          "request": {
            "type": "object",
            "properties": {
              "body": {},
              "headers": {
                "type": "object",
                "patternProperties": { "^(.*)$": { "type": "string" } }
              },
              "method": { "const": "POST", "type": "string" },
              "password": { "type": "string" },
              "url": { "type": "string" },
              "username": { "type": "string" }
            },
            "required": ["method", "url"]
          },
          "teamUuid": {
            "anyOf": [
              { "type": "null" },
              { "format": "uuid", "type": "string" }
            ]
          }
        }
      },
      "TestUnsavedWebhook": {
        "type": "object",
        "properties": {
          "teamUuid": { "format": "uuid", "type": "string" },
          "request": {
            "type": "object",
            "properties": {
              "body": {},
              "headers": {
                "type": "object",
                "patternProperties": { "^(.*)$": { "type": "string" } }
              },
              "method": { "const": "POST", "type": "string" },
              "password": { "type": "string" },
              "url": { "type": "string" },
              "username": { "type": "string" }
            },
            "required": ["method", "url"]
          }
        },
        "required": ["request"]
      },
      "WebhookExecutionResult": {
        "type": "object",
        "properties": {
          "logs": { "type": "string" },
          "message": { "type": "string" },
          "request": {
            "type": "object",
            "properties": {
              "headers": {
                "type": "object",
                "patternProperties": { "^(.*)$": { "type": "string" } }
              },
              "url": { "type": "string" },
              "body": {}
            },
            "required": ["headers", "url"]
          },
          "response": {
            "type": "object",
            "properties": {
              "headers": {
                "type": "object",
                "patternProperties": { "^(.*)$": { "type": "string" } }
              },
              "status": { "type": "number" },
              "body": {}
            },
            "required": ["headers", "status"]
          },
          "success": { "type": "boolean" },
          "_links": {
            "type": "object",
            "properties": {
              "try-again": { "$ref": "#/components/schemas/EmbeddedLink" },
              "webhook": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["try-again", "webhook"]
          }
        },
        "required": ["logs", "request", "success", "_links"]
      },
      "UnsavedWebhookExecutionResult": {
        "type": "object",
        "properties": {
          "logs": { "type": "string" },
          "message": { "type": "string" },
          "request": {
            "type": "object",
            "properties": {
              "headers": {
                "type": "object",
                "patternProperties": { "^(.*)$": { "type": "string" } }
              },
              "url": { "type": "string" },
              "body": {}
            },
            "required": ["headers", "url"]
          },
          "response": {
            "type": "object",
            "properties": {
              "headers": {
                "type": "object",
                "patternProperties": { "^(.*)$": { "type": "string" } }
              },
              "status": { "type": "number" },
              "body": {}
            },
            "required": ["headers", "status"]
          },
          "success": { "type": "boolean" },
          "_links": {
            "type": "object",
            "properties": {
              "try-again": { "$ref": "#/components/schemas/EmbeddedLink" }
            },
            "required": ["try-again"]
          }
        },
        "required": ["logs", "request", "success", "_links"]
      }
    }
  },
  "security": [{ "bearerAuth": [] }]
}
