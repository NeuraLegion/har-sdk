{
  "info": {
    "_postman_id": "0b4fbd2a-c140-4ea1-92a5-9e36089fb6d0",
    "name": "NexPloit REST API",
    "description": "\n  ![](https://neuralegion.com/wp-content/uploads/2019/07/Group-589.png)\n\n  This is the NexPloit REST API.\n  It has the same capatibilites as the NexPloit application available at [nexploit.app](https://nexploit.app).\n\n  You can find out more about NexPloit at [NeuraLegion.com](https://www.NeuraLegion.com).\n\n  ## Available endpoints\n\n  ### Organization\n\n  A user can only belong to a single organization.\n  The following endpoints allow to manage the organization and its memberships.\n\n  * [Organization](#/Organization) — manage the organization.\n\n  * [Memberships](#/Memberships) — manage the organization memberships.\n\n  * [Groups](#/Groups) — manage user groups.\n\n  * [Integrations](#/Integrations) — manage the organization integrations.\n\n  * [Files](#/Files) — manage stored files.\n\n  * [Specifications](#/Specifications) — manage API specifications.\n\n  * [Hosts](#/Hosts) — manage hosts for scanning.\n\n  ### Billing\n\n  Access NexPloit products and manage subscriptions for the organization.\n\n  * [Products](#/Products) — view available NexPloit products.\n\n  * [Plans](#/Plans) — view NexPloit product plans.\n\n  * [Payment Methods](#Payment%20Methods) — manage payment methods for the organization.\n\n  * [Payments](#/Payments) — manage payments for the organization.\n\n  * [Subscriptions](#/Subscriptions) — manage product subscriptions for the organization.\n\n  * [Billing](#/Billing) — view the billing information.\n\n  ### Scans\n\n  Run, view and edit scans.\n\n  * [Scans](#/Scans) — manage scans.\n\n  * [Scan Templates](#/Scan%20Templates) — manage scan templates.\n\n  * [Repeaters](#/Repeaters) — manage repeaters.\n\n  * [Issues](#/Issues) — manage issues.\n\n  * [Comments](#/Comments) — manage scan and issue comments.\n\n  * [Logs](#/Logs) — manage scan logs.\n\n  ### Access management\n\n  Control how you access NexPloit services.\n\n  * [MFA](#/MFA) — manage **M**ulti-**F**actor **A**uthorization.\n\n  * [Application API Keys](#/Application%20API%20Keys) — manage application API keys.\n\n  * [Personal API Keys](#/Personal%20API%20Keys) — manage personal API keys.\n\n  ### Other\n\n  * [Activities](#/Activities) — manage news feed activities.\n  \n\nContact Support:\n Email: support@neuralegion.com",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "api/v1",
      "item": [
        {
          "name": "activity",
          "item": [
            {
              "name": "Get all the scans (each scan state is a separate scan record).",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/activity/scans",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "activity", "scans"]
                },
                "description": "Returns an array of all the scans (each scan state is a seperate scan record)."
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/activity/scans",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "activity", "scans"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"id\": \"dolor labore\",\n  \"name\": \"Juicy shop\",\n  \"elapsed\": 145740.80913335085,\n  \"entryPoints\": 51852082.98501529,\n  \"totalParams\": 23106707.538003523,\n  \"requests\": 71401119.70952962,\n  \"status\": \"idle\",\n  \"startTime\": \"2013-05-23T12:47:09.724Z\",\n  \"createdAt\": \"1957-01-13T21:22:57.396Z\",\n  \"startedBy\": {\n   \"id\": \"12eb6703-32ef-9c6f-8129-46c3a4c3200b\",\n   \"firstName\": \"dolore dolor non dolore\",\n   \"lastName\": \"est dolore id\"\n  },\n  \"organization\": {\n   \"id\": \"8edea5a6-fef5-8802-98ae-41020b17eb89\",\n   \"name\": \"Lorem exercitation\"\n  },\n  \"issuesLength\": 0,\n  \"discoveryTypes\": [\n   \"archive\",\n   \"crawler\"\n  ],\n  \"module\": \"fuzzer\",\n  \"scheduling\": false,\n  \"fileName\": \"deserunt exercitation velit nisi\",\n  \"tests\": [\n   \"retire_js\",\n   \"business_constraint_bypass\"\n  ],\n  \"poolSize\": 86340201.56745078,\n  \"smart\": true,\n  \"skipStaticParams\": true,\n  \"attackParamLocations\": [\n   \"header\",\n   \"artifical-query\"\n  ],\n  \"requestStatuses\": {},\n  \"components\": [\n   {\n    \"value\": 0,\n    \"name\": \"occaecat dolore anim incididun\",\n    \"total\": 48577760.359012455\n   },\n   {\n    \"value\": 0,\n    \"name\": \"fugiat dolore\",\n    \"total\": 23334391.2675803\n   }\n  ]\n },\n {\n  \"id\": \"sint enim exercitation\",\n  \"name\": \"Juicy shop\",\n  \"elapsed\": 68997850.64759976,\n  \"entryPoints\": 77400069.43857722,\n  \"totalParams\": 88011302.98125339,\n  \"requests\": 54506282.21224156,\n  \"status\": \"failed\",\n  \"startTime\": \"1966-08-07T15:03:13.165Z\",\n  \"createdAt\": \"2020-07-21T14:54:00.497Z\",\n  \"startedBy\": {\n   \"id\": \"urn:uuid:614d6c60-9764-fc61-2ff0-6a45695506a5\",\n   \"firstName\": \"minim proident Excepteur ullamco\",\n   \"lastName\": \"laborum adipisici\"\n  },\n  \"organization\": {\n   \"id\": \"urn:uuid:e31cc216-2991-96f4-59f1-41cec1a641f4\",\n   \"name\": \"aute Lore\"\n  },\n  \"issuesLength\": 0,\n  \"discoveryTypes\": [\n   \"oas\",\n   \"crawler\"\n  ],\n  \"module\": \"dast\",\n  \"scheduling\": true,\n  \"fileName\": \"aliqua amet in\",\n  \"tests\": [\n   \"lfi\",\n   \"rfi\"\n  ],\n  \"poolSize\": 43366105.302045874,\n  \"smart\": false,\n  \"skipStaticParams\": false,\n  \"attackParamLocations\": [\n   \"fragment\",\n   \"header\"\n  ],\n  \"requestStatuses\": {},\n  \"components\": [\n   {\n    \"value\": 0,\n    \"name\": \"sint commodo\",\n    \"total\": 23844632.584034905\n   },\n   {\n    \"value\": 0,\n    \"name\": \"eu enim non\",\n    \"total\": -48783739.391451865\n   }\n  ]\n }\n]"
                }
              ]
            },
            {
              "name": "Get organizations",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/activity/organizations",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "activity", "organizations"]
                },
                "description": "Returns collection of BIOrganization entities"
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/activity/organizations",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "activity", "organizations"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"organizationId\": \"upmVm5iPkddvzY6RisT7Cr\",\n  \"name\": \"NeuraLegion\",\n  \"active\": true,\n  \"deleted\": false,\n  \"createdAt\": \"2019-05-22T10:56:47.668Z\"\n },\n {\n  \"organizationId\": \"upmVm5iPkddvzY6RisT7Cr\",\n  \"name\": \"NeuraLegion\",\n  \"active\": true,\n  \"deleted\": false,\n  \"createdAt\": \"2019-05-22T10:56:47.668Z\"\n }\n]"
                }
              ]
            }
          ]
        },
        {
          "name": "statistics",
          "item": [
            {
              "name": "Get all scan data for charts",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/statistics/scans?from=<string>&to=<string>&orgId=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "statistics", "scans"],
                  "query": [
                    {
                      "key": "from",
                      "value": "<string>",
                      "description": "(Required) "
                    },
                    {
                      "key": "to",
                      "value": "<string>",
                      "description": "(Required) "
                    },
                    {
                      "key": "orgId",
                      "value": "<string>"
                    }
                  ]
                },
                "description": "Return chart data in range from-to under a step."
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/statistics/scans?from=<string>&to=<string>&orgId=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "statistics", "scans"],
                      "query": [
                        {
                          "key": "from",
                          "value": "<string>"
                        },
                        {
                          "key": "to",
                          "value": "<string>"
                        },
                        {
                          "key": "orgId",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"name\": \"High\",\n  \"data\": [\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   },\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   }\n  ]\n },\n {\n  \"name\": \"High\",\n  \"data\": [\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   },\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   }\n  ]\n }\n]"
                }
              ]
            },
            {
              "name": "Get all scan usage time data for charts",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/statistics/time?from=<string>&to=<string>&orgId=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "statistics", "time"],
                  "query": [
                    {
                      "key": "from",
                      "value": "<string>",
                      "description": "(Required) "
                    },
                    {
                      "key": "to",
                      "value": "<string>",
                      "description": "(Required) "
                    },
                    {
                      "key": "orgId",
                      "value": "<string>"
                    }
                  ]
                },
                "description": "Return chart data in range from-to under a step."
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/statistics/time?from=<string>&to=<string>&orgId=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "statistics", "time"],
                      "query": [
                        {
                          "key": "from",
                          "value": "<string>"
                        },
                        {
                          "key": "to",
                          "value": "<string>"
                        },
                        {
                          "key": "orgId",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"name\": \"High\",\n  \"data\": [\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   },\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   }\n  ]\n },\n {\n  \"name\": \"High\",\n  \"data\": [\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   },\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   }\n  ]\n }\n]"
                }
              ]
            },
            {
              "name": "Get all issue data for charts",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/statistics/issues?from=<string>&to=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "statistics", "issues"],
                  "query": [
                    {
                      "key": "from",
                      "value": "<string>",
                      "description": "(Required) "
                    },
                    {
                      "key": "to",
                      "value": "<string>",
                      "description": "(Required) "
                    }
                  ]
                },
                "description": "Return chart data in range from-to under a step."
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/statistics/issues?from=<string>&to=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "statistics", "issues"],
                      "query": [
                        {
                          "key": "from",
                          "value": "<string>"
                        },
                        {
                          "key": "to",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"name\": \"High\",\n  \"data\": [\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   },\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   }\n  ]\n },\n {\n  \"name\": \"High\",\n  \"data\": [\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   },\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   }\n  ]\n }\n]"
                }
              ]
            },
            {
              "name": "Get organization chart data",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/statistics/organizations?from=<string>&to=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "statistics", "organizations"],
                  "query": [
                    {
                      "key": "from",
                      "value": "<string>",
                      "description": "(Required) "
                    },
                    {
                      "key": "to",
                      "value": "<string>",
                      "description": "(Required) "
                    }
                  ]
                },
                "description": "Returns a collection of chart objects organization data."
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/statistics/organizations?from=<string>&to=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "statistics", "organizations"],
                      "query": [
                        {
                          "key": "from",
                          "value": "<string>"
                        },
                        {
                          "key": "to",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"name\": \"High\",\n  \"data\": [\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   },\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   }\n  ]\n },\n {\n  \"name\": \"High\",\n  \"data\": [\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   },\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   }\n  ]\n }\n]"
                }
              ]
            },
            {
              "name": "Get subscription chart data",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/statistics/subscriptions?from=<string>&to=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "statistics", "subscriptions"],
                  "query": [
                    {
                      "key": "from",
                      "value": "<string>",
                      "description": "(Required) "
                    },
                    {
                      "key": "to",
                      "value": "<string>",
                      "description": "(Required) "
                    }
                  ]
                },
                "description": "Returns a collection of chart objects subscription data."
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/statistics/subscriptions?from=<string>&to=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "statistics", "subscriptions"],
                      "query": [
                        {
                          "key": "from",
                          "value": "<string>"
                        },
                        {
                          "key": "to",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"name\": \"High\",\n  \"data\": [\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   },\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   }\n  ]\n },\n {\n  \"name\": \"High\",\n  \"data\": [\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   },\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   }\n  ]\n }\n]"
                }
              ]
            },
            {
              "name": "Get storage chart data",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/statistics/storage?from=<string>&to=<string>&organizationId=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "statistics", "storage"],
                  "query": [
                    {
                      "key": "from",
                      "value": "<string>",
                      "description": "(Required) "
                    },
                    {
                      "key": "to",
                      "value": "<string>",
                      "description": "(Required) "
                    },
                    {
                      "key": "organizationId",
                      "value": "<string>"
                    }
                  ]
                },
                "description": "Returns chart data for storage graph"
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/statistics/storage?from=<string>&to=<string>&organizationId=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "statistics", "storage"],
                      "query": [
                        {
                          "key": "from",
                          "value": "<string>"
                        },
                        {
                          "key": "to",
                          "value": "<string>"
                        },
                        {
                          "key": "organizationId",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"name\": \"High\",\n  \"data\": [\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   },\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   }\n  ]\n },\n {\n  \"name\": \"High\",\n  \"data\": [\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   },\n   {\n    \"value\": 0,\n    \"date\": \"2019-01-01\"\n   }\n  ]\n }\n]"
                }
              ]
            }
          ]
        },
        {
          "name": "files",
          "item": [
            {
              "name": "{file Id}",
              "item": [
                {
                  "name": "tree",
                  "item": [
                    {
                      "name": "Read specification nodes from stored file",
                      "request": {
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization",
                              "type": "string"
                            },
                            {
                              "key": "value",
                              "value": true,
                              "type": "boolean"
                            },
                            {
                              "key": "in",
                              "value": "header",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/files/:fileId/tree",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "files", ":fileId", "tree"],
                          "variable": [
                            {
                              "key": "fileId",
                              "value": "<string>",
                              "description": "(Required) The file ID"
                            }
                          ]
                        },
                        "description": "Returns tree with information about folder structure, URLs and source code for specified file."
                      },
                      "response": [
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: apikey",
                                "key": "Authorization",
                                "value": "<API Key>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/files/:fileId/tree",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "v1", "files", ":fileId", "tree"],
                              "variable": [
                                {
                                  "key": "fileId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"name\": \"Duis laborum\",\n \"method\": \"officia\",\n \"children\": [\n  {\n   \"name\": \"sint ullamco aute non\",\n   \"method\": \"nulla\",\n   \"children\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/SpecTreeNodeView detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/SpecTreeNodeView detected>\"\n    }\n   ],\n   \"code\": \"aliquip\"\n  },\n  {\n   \"name\": \"exercitation culpa sunt voluptate\",\n   \"method\": \"est eu\",\n   \"children\": [\n    {\n     \"value\": \"<Circular reference to #/components/schemas/SpecTreeNodeView detected>\"\n    },\n    {\n     \"value\": \"<Circular reference to #/components/schemas/SpecTreeNodeView detected>\"\n    }\n   ],\n   \"code\": \"officia aute sed deserunt\"\n  }\n ],\n \"code\": \"ut in eu consequat\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Store new file from specification tree",
                      "request": {
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization",
                              "type": "string"
                            },
                            {
                              "key": "value",
                              "value": true,
                              "type": "boolean"
                            },
                            {
                              "key": "in",
                              "value": "header",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"node\": \"<object>\",\n    \"headers\": \"<string>\",\n    \"variables\": \"<string>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/files/:fileId/tree",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "files", ":fileId", "tree"],
                          "variable": [
                            {
                              "key": "fileId",
                              "value": "<string>",
                              "description": "(Required) The file ID"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Created",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: apikey",
                                "key": "Authorization",
                                "value": "<API Key>"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"node\": \"<object>\",\n    \"headers\": \"<string>\",\n    \"variables\": \"<string>\"\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/files/:fileId/tree",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "v1", "files", ":fileId", "tree"],
                              "variable": [
                                {
                                  "key": "fileId"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"id\": \"in tempor\",\n \"size\": 0,\n \"mimeType\": \"do\",\n \"name\": \"esse consequat sint\",\n \"lastModified\": \"1946-09-23T03:58:39.948Z\",\n \"revision\": 1\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Download a file",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/files/:fileId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "files", ":fileId"],
                      "variable": [
                        {
                          "key": "fileId",
                          "value": "<string>",
                          "description": "(Required) The file ID"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/files/:fileId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "files", ":fileId"],
                          "variable": [
                            {
                              "key": "fileId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "*/*"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Delete a single file",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/files/:fileId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "files", ":fileId"],
                      "variable": [
                        {
                          "key": "fileId",
                          "value": "<string>",
                          "description": "(Required) The file ID"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/files/:fileId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "files", ":fileId"],
                          "variable": [
                            {
                              "key": "fileId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Save revision as a new file",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/files/:fileId/revisions/last?keepAsNew=<boolean>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "api",
                        "v1",
                        "files",
                        ":fileId",
                        "revisions",
                        "last"
                      ],
                      "query": [
                        {
                          "key": "keepAsNew",
                          "value": "<boolean>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "fileId",
                          "value": "<string>",
                          "description": "(Required) The file ID"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/files/:fileId/revisions/last?keepAsNew=<boolean>",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "files",
                            ":fileId",
                            "revisions",
                            "last"
                          ],
                          "query": [
                            {
                              "key": "keepAsNew",
                              "value": "<boolean>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "fileId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"id\": \"in tempor\",\n \"size\": 0,\n \"mimeType\": \"do\",\n \"name\": \"esse consequat sint\",\n \"lastModified\": \"1946-09-23T03:58:39.948Z\",\n \"revision\": 1\n}"
                    }
                  ]
                },
                {
                  "name": "Get targets",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/files/:fileId/targets",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "files", ":fileId", "targets"],
                      "variable": [
                        {
                          "key": "fileId",
                          "value": "<string>",
                          "description": "(Required) The archive file ID"
                        }
                      ]
                    },
                    "description": "Returns a stored targets."
                  },
                  "response": [
                    {
                      "name": "File not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/files/:fileId/targets",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "files", ":fileId", "targets"],
                          "variable": [
                            {
                              "key": "fileId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"fugiat ut et\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"consequat laborum in\",\n   \"message\": \"culpa laborum Excepteur id\"\n  },\n  {\n   \"name\": \"Excepteur voluptate id\",\n   \"message\": \"lab\"\n  }\n ],\n \"stack\": [\n  \"proident laboris ut do\",\n  \"elit laboris amet\"\n ]\n}"
                    },
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/files/:fileId/targets",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "files", ":fileId", "targets"],
                          "variable": [
                            {
                              "key": "fileId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"urls\": [\n  \"sunt velit consequat magna nisi\",\n  \"est\"\n ]\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Get all files",
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "Authorization",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": true,
                      "type": "boolean"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/files",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "files"]
                },
                "description": "Returns all the files the logged-in user has access to."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/files",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "files"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"id\": \"nostrud irure\",\n  \"size\": 0,\n  \"mimeType\": \"in consectetur laboris commodo velit\",\n  \"name\": \"dolore\",\n  \"lastModified\": \"2000-01-23T13:00:02.972Z\",\n  \"revision\": 1\n },\n {\n  \"id\": \"adipisicing sunt irure\",\n  \"size\": 0,\n  \"mimeType\": \"laborum sed\",\n  \"name\": \"esse sed laborum do\",\n  \"lastModified\": \"2020-07-01T18:01:09.546Z\",\n  \"revision\": 1\n }\n]"
                }
              ]
            },
            {
              "name": "Upload file in the storage",
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "Authorization",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": true,
                      "type": "boolean"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"file\": \"<binary>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/files?discard=<boolean>",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "files"],
                  "query": [
                    {
                      "key": "discard",
                      "value": "<boolean>",
                      "description": "Whether to delete the file once a scan using them runs. Defaults to `false`"
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "<File too long | Too many parts | Too many files | Field name too long | Field value too long | Too many fields | Unexpected field>  [fieldName] Example: File too long file1",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"file\": \"<binary>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/files?discard=<boolean>",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "files"],
                      "query": [
                        {
                          "key": "discard",
                          "value": "<boolean>"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"BAD_REQUEST\",\n \"message\": \"voluptate reprehenderit nulla\",\n \"status\": 400,\n \"errors\": [\n  {\n   \"name\": \"sit proident dolore laborum\",\n   \"message\": \"consectetur e\"\n  },\n  {\n   \"name\": \"ex cillum\",\n   \"message\": \"in Lorem aliqua\"\n  }\n ],\n \"stack\": [\n  \"exercitation culpa pariatur ut\",\n  \"ad dolore do\"\n ]\n}"
                },
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"file\": \"<binary>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/files?discard=<boolean>",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "files"],
                      "query": [
                        {
                          "key": "discard",
                          "value": "<boolean>"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"id\": \"nostrud irure\",\n  \"size\": 0,\n  \"mimeType\": \"in consectetur laboris commodo velit\",\n  \"name\": \"dolore\",\n  \"lastModified\": \"2000-01-23T13:00:02.972Z\",\n  \"revision\": 1\n },\n {\n  \"id\": \"adipisicing sunt irure\",\n  \"size\": 0,\n  \"mimeType\": \"laborum sed\",\n  \"name\": \"esse sed laborum do\",\n  \"lastModified\": \"2020-07-01T18:01:09.546Z\",\n  \"revision\": 1\n }\n]"
                }
              ]
            },
            {
              "name": "Delete multiple files",
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "Authorization",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": true,
                      "type": "boolean"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"ids\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/files",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "files"]
                }
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"ids\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/files",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "files"]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Get the storage metrics",
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "Authorization",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": true,
                      "type": "boolean"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/files/metrics",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "files", "metrics"]
                }
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/files/metrics",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "files", "metrics"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"id\": \"minim\",\n \"used\": 0,\n \"capacity\": 0,\n \"filesCount\": 0\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "me",
          "item": [
            {
              "name": "feed",
              "item": [
                {
                  "name": "following",
                  "item": [
                    {
                      "name": "Follow a entiry activity",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"targetIds\": [\n        \"<string>\"\n    ],\n    \"keepHistory\": true\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/me/feed/following",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "me", "feed", "following"]
                        },
                        "description": "Creates a following relationship with a entity.       Right now, only a user may be followed."
                      },
                      "response": [
                        {
                          "name": "No Content",
                          "originalRequest": {
                            "method": "POST",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"targetIds\": [\n        \"<string>\"\n    ],\n    \"keepHistory\": true\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/me/feed/following",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "v1", "me", "feed", "following"]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Stop following a entity",
                      "request": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"targetIds\": [\n        \"<string>\"\n    ],\n    \"keepHistory\": true\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/me/feed/following",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "me", "feed", "following"]
                        },
                        "description": "Removes a following relationship with a entity.       Right now, only a user may be followed."
                      },
                      "response": [
                        {
                          "name": "No Content",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"targetIds\": [\n        \"<string>\"\n    ],\n    \"keepHistory\": true\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/me/feed/following",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "v1", "me", "feed", "following"]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "activities",
                  "item": [
                    {
                      "name": "Remove activities from the feed",
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/me/feed/activities",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "me", "feed", "activities"]
                        }
                      },
                      "response": [
                        {
                          "name": "Success.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/me/feed/activities",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "v1", "me", "feed", "activities"]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Remove a single activity from the feed",
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/me/feed/activities/:activityId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "me",
                            "feed",
                            "activities",
                            ":activityId"
                          ],
                          "variable": [
                            {
                              "key": "activityId",
                              "value": "<string>",
                              "description": "(Required) "
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Success.",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/me/feed/activities/:activityId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "me",
                                "feed",
                                "activities",
                                ":activityId"
                              ],
                              "variable": [
                                {
                                  "key": "activityId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "subscriptions",
                  "item": [
                    {
                      "name": "Setup the feed preferences",
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n    {\n        \"objectType\": \"<string>\",\n        \"verbs\": [\n            \"<string>\"\n        ]\n    },\n    {\n        \"objectType\": \"<string>\",\n        \"verbs\": [\n            \"<string>\"\n        ]\n    }\n]"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/me/feed/subscriptions",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "me", "feed", "subscriptions"]
                        },
                        "description": "Setup the feed preferences as a list of verbs grouped by object."
                      },
                      "response": [
                        {
                          "name": "No Content",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n    {\n        \"objectType\": \"<string>\",\n        \"verbs\": [\n            \"<string>\"\n        ]\n    },\n    {\n        \"objectType\": \"<string>\",\n        \"verbs\": [\n            \"<string>\"\n        ]\n    }\n]"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/me/feed/subscriptions",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "me",
                                "feed",
                                "subscriptions"
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Get the feed preferences",
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/me/feed/subscriptions",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "me", "feed", "subscriptions"]
                        },
                        "description": "Returns the feed preferences as a list of verbs grouped by object."
                      },
                      "response": [
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/me/feed/subscriptions",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "me",
                                "feed",
                                "subscriptions"
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "[\n {\n  \"objectType\": \"<string>\",\n  \"verbs\": [\n   \"<string>\"\n  ]\n },\n {\n  \"objectType\": \"<string>\",\n  \"verbs\": [\n   \"<string>\"\n  ]\n }\n]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Get all activities",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/me/feed?limit=25&offset=0",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "me", "feed"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "25",
                          "description": "The number of items to retrieve"
                        },
                        {
                          "key": "offset",
                          "value": "0",
                          "description": "The first position to return results"
                        }
                      ]
                    },
                    "description": "Returns a list of all activities visible to the logged-in user."
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/me/feed?limit=25&offset=0",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "me", "feed"],
                          "query": [
                            {
                              "key": "limit",
                              "value": "25"
                            },
                            {
                              "key": "offset",
                              "value": "0"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"unseen\": 0,\n \"activities\": [\n  {\n   \"id\": \"ad sint\",\n   \"isSeen\": false,\n   \"published\": \"1995-03-18T22:47:44.823Z\",\n   \"verb\": \"stop\",\n   \"actor\": {\n    \"id\": \"incididunt culpa occaecat nisi\",\n    \"type\": \"app\",\n    \"name\": \"do quis Ut\",\n    \"extra\": {}\n   },\n   \"object\": {\n    \"id\": \"tempor anim dolore dolor\",\n    \"type\": \"user\",\n    \"name\": \"dolore nisi enim minim i\",\n    \"extra\": {}\n   },\n   \"target\": {\n    \"id\": \"fugiat anim occaecat\",\n    \"type\": \"subscription\",\n    \"name\": \"commodo ad\",\n    \"extra\": {}\n   }\n  },\n  {\n   \"id\": \"ut mollit\",\n   \"isSeen\": false,\n   \"published\": \"1979-02-28T14:14:36.776Z\",\n   \"verb\": \"subscribe\",\n   \"actor\": {\n    \"id\": \"in incididunt sed\",\n    \"type\": \"file\",\n    \"name\": \"ut elit\",\n    \"extra\": {}\n   },\n   \"object\": {\n    \"id\": \"culpa anim\",\n    \"type\": \"subscription\",\n    \"name\": \"ad elit Lorem\",\n    \"extra\": {}\n   },\n   \"target\": {\n    \"id\": \"occaecat eiusmod\",\n    \"type\": \"payment_method\",\n    \"name\": \"ex Duis culpa Excepteur eu\",\n    \"extra\": {}\n   }\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "Mark activities as seen",
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"markSeenAll\": false,\n    \"markSeen\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/me/feed",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "me", "feed"]
                    }
                  },
                  "response": [
                    {
                      "name": "No Content",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"markSeenAll\": false,\n    \"markSeen\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/me/feed",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "me", "feed"]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "org",
              "item": [
                {
                  "name": "api-keys",
                  "item": [
                    {
                      "name": "{api Key Id}",
                      "item": [
                        {
                          "name": "Rewrite an API key.",
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "<Bearer Token>",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"name\": \"<string>\",\n    \"scopes\": [\n        \"<string>\"\n    ]\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/me/org/api-keys/:apiKeyId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "me",
                                "org",
                                "api-keys",
                                ":apiKeyId"
                              ],
                              "variable": [
                                {
                                  "key": "apiKeyId",
                                  "value": "<string>",
                                  "description": "(Required) The identifier of the API key being rewritten."
                                }
                              ]
                            },
                            "description": "Rewrite an API key parameters, i.e. its name and access scopes."
                          },
                          "response": [
                            {
                              "name": "Success.",
                              "originalRequest": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"name\": \"<string>\",\n    \"scopes\": [\n        \"<string>\"\n    ]\n}"
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/me/org/api-keys/:apiKeyId",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "me",
                                    "org",
                                    "api-keys",
                                    ":apiKeyId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "apiKeyId"
                                    }
                                  ]
                                }
                              },
                              "status": "No Content",
                              "code": 204,
                              "_postman_previewlanguage": "text",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "text/plain"
                                }
                              ],
                              "cookie": [],
                              "body": ""
                            }
                          ]
                        },
                        {
                          "name": "Delete an API key.",
                          "request": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/me/org/api-keys/:apiKeyId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "me",
                                "org",
                                "api-keys",
                                ":apiKeyId"
                              ],
                              "variable": [
                                {
                                  "key": "apiKeyId",
                                  "value": "<string>",
                                  "description": "(Required) The identifier of the API key being deleted."
                                }
                              ]
                            },
                            "description": "Delete an API key by its identifier."
                          },
                          "response": [
                            {
                              "name": "Success.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [],
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/me/org/api-keys/:apiKeyId",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "me",
                                    "org",
                                    "api-keys",
                                    ":apiKeyId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "apiKeyId"
                                    }
                                  ]
                                }
                              },
                              "status": "No Content",
                              "code": 204,
                              "_postman_previewlanguage": "text",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "text/plain"
                                }
                              ],
                              "cookie": [],
                              "body": ""
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Create a new API key.",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"<string>\",\n    \"scopes\": [\n        \"<string>\"\n    ]\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/me/org/api-keys",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "me", "org", "api-keys"]
                        },
                        "description": "Create a new API key with name and access scopes."
                      },
                      "response": [
                        {
                          "name": "Successful operation.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"name\": \"<string>\",\n    \"scopes\": [\n        \"<string>\"\n    ]\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/me/org/api-keys",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "v1", "me", "org", "api-keys"]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"id\": \"id non qui\",\n \"name\": \"mollit proident\",\n \"prefix\": \"ea\",\n \"scopes\": [\n  \"nostr\",\n  \"Lorem sit\"\n ],\n \"lastModified\": \"2010-07-24T05:25:33.354Z\",\n \"pureKey\": \"cillum reprehenderit\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Fetch all API keys.",
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/me/org/api-keys",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "me", "org", "api-keys"]
                        },
                        "description": "Retrieve all API keys available to the logged in user."
                      },
                      "response": [
                        {
                          "name": "In case of success, an array of API keys is returned.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/me/org/api-keys",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "v1", "me", "org", "api-keys"]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "[\n {\n  \"id\": \"do incididu\",\n  \"name\": \"aute aliquip\",\n  \"prefix\": \"eiusmo\",\n  \"scopes\": [\n   \"officia\",\n   \"nulla velit\"\n  ],\n  \"lastModified\": \"1964-10-21T23:33:44.646Z\",\n  \"pureKey\": \"elit \"\n },\n {\n  \"id\": \"officia con\",\n  \"name\": \"adipisicing cillu\",\n  \"prefix\": \"offi\",\n  \"scopes\": [\n   \"officia adipisicing labore laborum dolor\",\n   \"ex irure est reprehenderit deserunt\"\n  ],\n  \"lastModified\": \"1976-01-04T11:21:46.380Z\",\n  \"pureKey\": \"aliqua deserunt ut aute\"\n }\n]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "memberships",
                  "item": [
                    {
                      "name": "{member Id}",
                      "item": [
                        {
                          "name": "Update a membership",
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "<Bearer Token>",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"active\": \"<boolean>\",\n    \"email\": \"<email>\",\n    \"roleId\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"groups\": [\n        \"<string>\"\n    ]\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/me/org/memberships/:memberId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "me",
                                "org",
                                "memberships",
                                ":memberId"
                              ],
                              "variable": [
                                {
                                  "key": "memberId",
                                  "value": "<string>",
                                  "description": "(Required) The membership ID"
                                }
                              ]
                            },
                            "description": "Updates a membership with new parameters."
                          },
                          "response": [
                            {
                              "name": "Success",
                              "originalRequest": {
                                "method": "PATCH",
                                "header": [
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"active\": \"<boolean>\",\n    \"email\": \"<email>\",\n    \"roleId\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"groups\": [\n        \"<string>\"\n    ]\n}"
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/me/org/memberships/:memberId",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "me",
                                    "org",
                                    "memberships",
                                    ":memberId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "memberId"
                                    }
                                  ]
                                }
                              },
                              "status": "No Content",
                              "code": 204,
                              "_postman_previewlanguage": "text",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "text/plain"
                                }
                              ],
                              "cookie": [],
                              "body": ""
                            }
                          ]
                        },
                        {
                          "name": "Cancel a membership",
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "<Bearer Token>",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/me/org/memberships/:memberId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "me",
                                "org",
                                "memberships",
                                ":memberId"
                              ],
                              "variable": [
                                {
                                  "key": "memberId",
                                  "value": "<string>",
                                  "description": "(Required) The membership ID"
                                }
                              ]
                            },
                            "description": "Removes a user from the organization     by deleting the related membership."
                          },
                          "response": [
                            {
                              "name": "Success",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/me/org/memberships/:memberId",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "me",
                                    "org",
                                    "memberships",
                                    ":memberId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "memberId"
                                    }
                                  ]
                                }
                              },
                              "status": "No Content",
                              "code": 204,
                              "_postman_previewlanguage": "text",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "text/plain"
                                }
                              ],
                              "cookie": [],
                              "body": ""
                            }
                          ]
                        },
                        {
                          "name": "Get a single membership",
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "<Bearer Token>",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/me/org/memberships/:memberId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "me",
                                "org",
                                "memberships",
                                ":memberId"
                              ],
                              "variable": [
                                {
                                  "key": "memberId",
                                  "value": "<string>",
                                  "description": "(Required) The membership ID"
                                }
                              ]
                            }
                          },
                          "response": [
                            {
                              "name": "Success",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/me/org/memberships/:memberId",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "me",
                                    "org",
                                    "memberships",
                                    ":memberId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "memberId"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n \"id\": \"esse\",\n \"email\": \"Hup4@RwejbuoGalb.ftui\",\n \"firstName\": \"elit Lorem\",\n \"lastName\": \"aliquip \",\n \"userId\": \"al\",\n \"organizationId\": \"culp\",\n \"consents\": {\n  \"thirdParty\": true,\n  \"smartScanOff\": true,\n  \"extraTargetParamLocations\": false,\n  \"businessLogicTests\": false\n },\n \"inviteStatus\": \"requested_to_be_invited\",\n \"roleId\": \"in do qui labor\",\n \"multiFactorEnabled\": false,\n \"active\": false,\n \"sso\": false\n}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Create a new membership",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "<Bearer Token>",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"email\": \"<email>\",\n    \"roleId\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"groups\": [\n        \"<string>\"\n    ]\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/me/org/memberships",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "me", "org", "memberships"]
                        },
                        "description": "Adds a user to the organization. Note that each membership     has its own ID distinct from the user. The ID may be revealed by fetching     all the organization memberships."
                      },
                      "response": [
                        {
                          "name": "Membership created",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"email\": \"<email>\",\n    \"roleId\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"groups\": [\n        \"<string>\"\n    ]\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/me/org/memberships",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "v1", "me", "org", "memberships"]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "*/*"
                            }
                          ],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Get all memberships",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "<Bearer Token>",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/me/org/memberships",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "me", "org", "memberships"]
                        },
                        "description": "Returns all the memberships in the organization."
                      },
                      "response": [
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/me/org/memberships",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "v1", "me", "org", "memberships"]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "[\n {\n  \"id\": \"Ut nulla adipisici\",\n  \"email\": \"VWn8xxEP9GQuD@fVDPRCUzasbWmDsQZcaPRMWQgWevmh.me\",\n  \"firstName\": \"et nisi est\",\n  \"lastName\": \"commodo\",\n  \"userId\": \"aliquip d\",\n  \"organizationId\": \"ex mollit ea aliqua\",\n  \"consents\": {\n   \"thirdParty\": false,\n   \"smartScanOff\": true,\n   \"extraTargetParamLocations\": true,\n   \"businessLogicTests\": true\n  },\n  \"inviteStatus\": \"approved\",\n  \"roleId\": \"proident repre\",\n  \"multiFactorEnabled\": false,\n  \"active\": false,\n  \"sso\": false\n },\n {\n  \"id\": \"aliqua dolore labori\",\n  \"email\": \"NR9Qcee4KC@eVvS.ly\",\n  \"firstName\": \"dolor elit ad dolor\",\n  \"lastName\": \"magna fugiat aliqua\",\n  \"userId\": \"consect\",\n  \"organizationId\": \"aliqua no\",\n  \"consents\": {\n   \"thirdParty\": false,\n   \"smartScanOff\": true,\n   \"extraTargetParamLocations\": false,\n   \"businessLogicTests\": false\n  },\n  \"inviteStatus\": \"approved\",\n  \"roleId\": \"u\",\n  \"multiFactorEnabled\": false,\n  \"active\": false,\n  \"sso\": false\n }\n]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "groups",
                  "item": [
                    {
                      "name": "{group Id}",
                      "item": [
                        {
                          "name": "memberships",
                          "item": [
                            {
                              "name": "Add members into a group",
                              "request": {
                                "auth": {
                                  "type": "bearer",
                                  "bearer": [
                                    {
                                      "key": "token",
                                      "value": "<Bearer Token>",
                                      "type": "string"
                                    }
                                  ]
                                },
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"members\": [\n        \"<string>\"\n    ]\n}"
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/me/org/groups/:groupId/memberships",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "me",
                                    "org",
                                    "groups",
                                    ":groupId",
                                    "memberships"
                                  ],
                                  "variable": [
                                    {
                                      "key": "groupId",
                                      "value": "<string>",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "description": "Adds multiple new member users into a group."
                              },
                              "response": [
                                {
                                  "name": "In case of success, returns the modified group object.",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n    \"members\": [\n        \"<string>\"\n    ]\n}"
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/api/v1/me/org/groups/:groupId/memberships",
                                      "host": ["{{baseUrl}}"],
                                      "path": [
                                        "api",
                                        "v1",
                                        "me",
                                        "org",
                                        "groups",
                                        ":groupId",
                                        "memberships"
                                      ],
                                      "variable": [
                                        {
                                          "key": "groupId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Created",
                                  "code": 201,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n \"name\": \"Admins\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"predefined\": false,\n \"members\": [\n  \"<string>\"\n ],\n \"createdAt\": \"<dateTime>\",\n \"updatedAt\": \"<dateTime>\",\n \"sso\": false\n}"
                                }
                              ]
                            },
                            {
                              "name": "Remove members from a group",
                              "request": {
                                "auth": {
                                  "type": "bearer",
                                  "bearer": [
                                    {
                                      "key": "token",
                                      "value": "<Bearer Token>",
                                      "type": "string"
                                    }
                                  ]
                                },
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"members\": [\n        \"<string>\"\n    ]\n}"
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/me/org/groups/:groupId/memberships",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "me",
                                    "org",
                                    "groups",
                                    ":groupId",
                                    "memberships"
                                  ],
                                  "variable": [
                                    {
                                      "key": "groupId",
                                      "value": "<string>",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "description": "Removes multiple member users from a group."
                              },
                              "response": [
                                {
                                  "name": "In case of success, returns the modified group object.",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "description": "Added as a part of security scheme: bearer",
                                        "key": "Authorization",
                                        "value": "Bearer <token>"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n    \"members\": [\n        \"<string>\"\n    ]\n}"
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/api/v1/me/org/groups/:groupId/memberships",
                                      "host": ["{{baseUrl}}"],
                                      "path": [
                                        "api",
                                        "v1",
                                        "me",
                                        "org",
                                        "groups",
                                        ":groupId",
                                        "memberships"
                                      ],
                                      "variable": [
                                        {
                                          "key": "groupId"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "OK",
                                  "code": 200,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n \"name\": \"Admins\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"predefined\": false,\n \"members\": [\n  \"<string>\"\n ],\n \"createdAt\": \"<dateTime>\",\n \"updatedAt\": \"<dateTime>\",\n \"sso\": false\n}"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "name": "Get a single group",
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "<Bearer Token>",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/me/org/groups/:groupId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "me",
                                "org",
                                "groups",
                                ":groupId"
                              ],
                              "variable": [
                                {
                                  "key": "groupId",
                                  "value": "<string>",
                                  "description": "(Required) "
                                }
                              ]
                            }
                          },
                          "response": [
                            {
                              "name": "Success",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/me/org/groups/:groupId",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "me",
                                    "org",
                                    "groups",
                                    ":groupId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n \"name\": \"Admins\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"predefined\": false,\n \"members\": [\n  \"<string>\"\n ],\n \"createdAt\": \"<dateTime>\",\n \"updatedAt\": \"<dateTime>\",\n \"sso\": false\n}"
                            }
                          ]
                        },
                        {
                          "name": "Update a group",
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "<Bearer Token>",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"name\": \"<string>\",\n    \"id\": \"<string>\",\n    \"description\": \"<string>\",\n    \"predefined\": false,\n    \"members\": [\n        \"<string>\"\n    ],\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"sso\": false\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/me/org/groups/:groupId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "me",
                                "org",
                                "groups",
                                ":groupId"
                              ],
                              "variable": [
                                {
                                  "key": "groupId",
                                  "value": "<string>",
                                  "description": "(Required) "
                                }
                              ]
                            }
                          },
                          "response": [
                            {
                              "name": "In case of success, returns the modified group object.",
                              "originalRequest": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"name\": \"Admins\",\n    \"id\": \"<string>\",\n    \"description\": \"<string>\",\n    \"predefined\": false,\n    \"members\": [\n        \"<string>\"\n    ],\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"sso\": false\n}"
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/me/org/groups/:groupId",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "me",
                                    "org",
                                    "groups",
                                    ":groupId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n \"name\": \"Admins\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"predefined\": false,\n \"members\": [\n  \"<string>\"\n ],\n \"createdAt\": \"<dateTime>\",\n \"updatedAt\": \"<dateTime>\",\n \"sso\": false\n}"
                            }
                          ]
                        },
                        {
                          "name": "Delete a group",
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "<Bearer Token>",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/me/org/groups/:groupId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "me",
                                "org",
                                "groups",
                                ":groupId"
                              ],
                              "variable": [
                                {
                                  "key": "groupId",
                                  "value": "<string>",
                                  "description": "(Required) "
                                }
                              ]
                            }
                          },
                          "response": [
                            {
                              "name": "Group deleted",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/me/org/groups/:groupId",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "me",
                                    "org",
                                    "groups",
                                    ":groupId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "groupId"
                                    }
                                  ]
                                }
                              },
                              "status": "No Content",
                              "code": 204,
                              "_postman_previewlanguage": "text",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "text/plain"
                                }
                              ],
                              "cookie": [],
                              "body": ""
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Get all groups",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "<Bearer Token>",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/me/org/groups",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "me", "org", "groups"]
                        },
                        "description": "Returns all the groups owned by the organization."
                      },
                      "response": [
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/me/org/groups",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "v1", "me", "org", "groups"]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "[\n {\n  \"name\": \"Admins\",\n  \"id\": \"elit\",\n  \"description\": \"incididunt in\",\n  \"predefined\": false,\n  \"members\": [\n   \"irure incidi\",\n   \"officia proident mollit dolore\"\n  ],\n  \"createdAt\": \"2014-09-26T19:05:31.446Z\",\n  \"updatedAt\": \"2005-06-01T05:17:16.916Z\",\n  \"sso\": false\n },\n {\n  \"name\": \"Admins\",\n  \"id\": \"magna quis Duis ad\",\n  \"description\": \"eu sunt\",\n  \"predefined\": false,\n  \"members\": [\n   \"consectetur incididu\",\n   \"eu dolore\"\n  ],\n  \"createdAt\": \"2021-01-09T19:16:46.507Z\",\n  \"updatedAt\": \"1962-11-29T00:50:47.206Z\",\n  \"sso\": false\n }\n]"
                        }
                      ]
                    },
                    {
                      "name": "Create a new group",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "<Bearer Token>",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"<string>\",\n    \"id\": \"<string>\",\n    \"description\": \"<string>\",\n    \"predefined\": false,\n    \"members\": [\n        \"<string>\"\n    ],\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"sso\": false\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/me/org/groups",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "me", "org", "groups"]
                        },
                        "description": "Creates a new group with provided parameters."
                      },
                      "response": [
                        {
                          "name": "In case of success, returns the newly created group.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"name\": \"Admins\",\n    \"id\": \"<string>\",\n    \"description\": \"<string>\",\n    \"predefined\": false,\n    \"members\": [\n        \"<string>\"\n    ],\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"sso\": false\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/me/org/groups",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "v1", "me", "org", "groups"]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"name\": \"Admins\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"predefined\": false,\n \"members\": [\n  \"<string>\"\n ],\n \"createdAt\": \"<dateTime>\",\n \"updatedAt\": \"<dateTime>\",\n \"sso\": false\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Get the organization",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/me/org",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "me", "org"]
                    },
                    "description": "Retrieves details about the organization     the logged-in user belongs to."
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/me/org",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "me", "org"]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"id\": \"aute\",\n \"name\": \"veniam consequat occaecat\",\n \"permissions\": {\n  \"businessLogic\": true,\n  \"dast\": true,\n  \"orgApiKeys\": true,\n  \"rbac\": true,\n  \"repeaters\": false,\n  \"sdlc\": false,\n  \"sso\": true,\n  \"zeroDay\": false,\n  \"onlyAuthorizedHosts\": true,\n  \"reportCustomization\": false,\n  \"reports\": true\n },\n \"createdBy\": \"amet est labor\",\n \"supportLead\": \"et proident in\",\n \"tagIds\": [\n  \"aliqua\",\n  \"non qui quis\"\n ],\n \"quotas\": [\n  {\n   \"limit\": -9803410.471735403,\n   \"type\": \"engines\"\n  },\n  {\n   \"limit\": 30998346.08670613,\n   \"type\": \"file_storage\"\n  }\n ],\n \"environmentKey\": \"\",\n \"authorizedTargets\": [\n  \"aliqua qui Ut adipisicing est\",\n  \"reprehenderit\"\n ],\n \"active\": true,\n \"mfaEnabled\": false,\n \"updatedAt\": \"1983-12-29T18:22:13.141Z\",\n \"createdAt\": \"1973-08-08T06:48:40.117Z\"\n}"
                    }
                  ]
                },
                {
                  "name": "organization Create Organization",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"email\": \"<email>\",\n    \"active\": \"<boolean>\",\n    \"mfaEnabled\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"supportLead\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/me/org",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "me", "org"]
                    }
                  },
                  "response": [
                    {
                      "name": "Successful operation.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"email\": \"<email>\",\n    \"active\": \"<boolean>\",\n    \"mfaEnabled\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"supportLead\": \"<string>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/me/org",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "me", "org"]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "*/*"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Update the organization",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"email\": \"<email>\",\n    \"active\": \"<boolean>\",\n    \"mfaEnabled\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"supportLead\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/me/org",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "me", "org"]
                    },
                    "description": "Updates the organization the logged-in user     belongs to with new parameters."
                  },
                  "response": [
                    {
                      "name": "No Content",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"email\": \"<email>\",\n    \"active\": \"<boolean>\",\n    \"mfaEnabled\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"supportLead\": \"<string>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/me/org",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "me", "org"]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "date-settings",
              "item": [
                {
                  "name": "date Time Settings Get Date Settings",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/me/date-settings",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "me", "date-settings"]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/me/date-settings",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "me", "date-settings"]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"startOfWeek\": -91224503.74431197,\n \"timeFormat\": \"irure minim in\",\n \"timeZone\": \"anim \",\n \"dateFormat\": \"aliqua enim\"\n}"
                    }
                  ]
                },
                {
                  "name": "date Time Settings Update Date Settings",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"startOfWeek\": \"<number>\",\n    \"timeFormat\": \"<string>\",\n    \"timeZone\": \"<string>\",\n    \"dateFormat\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/me/date-settings",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "me", "date-settings"]
                    }
                  },
                  "response": [
                    {
                      "name": "Successful operation.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"startOfWeek\": \"<number>\",\n    \"timeFormat\": \"<string>\",\n    \"timeZone\": \"<string>\",\n    \"dateFormat\": \"<string>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/me/date-settings",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "me", "date-settings"]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "user Get",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/me",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "me"]
                }
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/me",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "me"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"firstName\": \"ad\",\n \"lastName\": \"aute fugiat magna eiusmod\",\n \"id\": \"ut pariatur veniam\",\n \"email\": \"tFJ27lNSGM@GPGFUXktssfcquHv.rkn\",\n \"emailConfirmed\": true,\n \"active\": false,\n \"isStaff\": true,\n \"identities\": [\n  {\n   \"id\": \"tempor Excepte\",\n   \"providerType\": \"adfs\"\n  },\n  {\n   \"id\": \"ipsum aute Lorem\",\n   \"providerType\": \"google\"\n  }\n ],\n \"multiFactorEnabled\": false,\n \"roleId\": \"est\",\n \"scopes\": [\n  \"auth-objects\",\n  \"scans:delete\"\n ],\n \"organizationId\": \"nulla\",\n \"memberId\": \"minim s\",\n \"hasPassword\": false,\n \"nextUrl\": \"deserunt incididunt in ad\"\n}"
                }
              ]
            },
            {
              "name": "user Update",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<email>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/me",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "me"]
                }
              },
              "response": [
                {
                  "name": "Success.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<email>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/me",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "me"]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Get logs",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/me/logs",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "me", "logs"]
                },
                "description": "Returns a list of personal activity logs."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/me/logs",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "me", "logs"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"id\": \"ut ipsum dolor non officia\",\n  \"isSeen\": false,\n  \"published\": \"1961-09-07T21:04:22.897Z\",\n  \"verb\": \"assign\",\n  \"actor\": {\n   \"id\": \"in\",\n   \"type\": \"repeater\",\n   \"name\": \"voluptate ea aute\",\n   \"extra\": {}\n  },\n  \"object\": {\n   \"id\": \"in Excepteur\",\n   \"type\": \"issue\",\n   \"name\": \"non irure\",\n   \"extra\": {}\n  },\n  \"target\": {\n   \"id\": \"non cupidatat Ut\",\n   \"type\": \"scan\",\n   \"name\": \"elit id nulla et\",\n   \"extra\": {}\n  }\n },\n {\n  \"id\": \"elit\",\n  \"isSeen\": false,\n  \"published\": \"2021-02-02T20:35:13.080Z\",\n  \"verb\": \"start\",\n  \"actor\": {\n   \"id\": \"sed ul\",\n   \"type\": \"subscription\",\n   \"name\": \"eu aute ad culpa\",\n   \"extra\": {}\n  },\n  \"object\": {\n   \"id\": \"officia Duis elit veniam\",\n   \"type\": \"comment\",\n   \"name\": \"laboris\",\n   \"extra\": {}\n  },\n  \"target\": {\n   \"id\": \"sunt reprehenderit\",\n   \"type\": \"payment_method\",\n   \"name\": \"fugiat dolor sint\",\n   \"extra\": {}\n  }\n }\n]"
                }
              ]
            },
            {
              "name": "member Consents Set Consents",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"thirdParty\": \"<boolean>\",\n    \"smartScanOff\": \"<boolean>\",\n    \"extraTargetParamLocations\": \"<boolean>\",\n    \"businessLogicTests\": \"<boolean>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/me/consents",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "me", "consents"]
                }
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"thirdParty\": \"<boolean>\",\n    \"smartScanOff\": \"<boolean>\",\n    \"extraTargetParamLocations\": \"<boolean>\",\n    \"businessLogicTests\": \"<boolean>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/me/consents",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "me", "consents"]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "payments",
          "item": [
            {
              "name": "{payment Id}",
              "item": [
                {
                  "name": "Update a payment",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"paymentMethodId\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/payments/:paymentId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "payments", ":paymentId"],
                      "variable": [
                        {
                          "key": "paymentId",
                          "value": "<string>",
                          "description": "(Required) The updated payment ID"
                        }
                      ]
                    },
                    "description": "Updates a payment with given parameters.     May be used to update a payment method to a valid one."
                  },
                  "response": [
                    {
                      "name": "No Content",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"paymentMethodId\": \"<string>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/payments/:paymentId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "payments", ":paymentId"],
                          "variable": [
                            {
                              "key": "paymentId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Retry a failed payment",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/payments/:paymentId/repay",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "payments", ":paymentId", "repay"],
                      "variable": [
                        {
                          "key": "paymentId",
                          "value": "<string>",
                          "description": "(Required) The failed payment ID"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/payments/:paymentId/repay",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "payments",
                            ":paymentId",
                            "repay"
                          ],
                          "variable": [
                            {
                              "key": "paymentId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"url\": \"minim in\",\n \"status\": \"aliquip esse a\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Get all payments",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/payments",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "payments"]
                },
                "description": "Returns the list of all payments for the organization."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/payments",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "payments"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"id\": \"u\",\n  \"subscriptionId\": \"do\",\n  \"amount\": 0,\n  \"paymentMethod\": {\n   \"cardType\": \"unknown\",\n   \"last4\": \"ad\",\n   \"expiration\": \"2007-07-21\",\n   \"paymentMethodId\": \"officia dolore\"\n  },\n  \"paymentMethodId\": \"adipisicing exercitation sunt\",\n  \"invoiceUrl\": \"consequat eiusmod enim quis Lorem\",\n  \"status\": \"succeeded\",\n  \"date\": \"laboris do\",\n  \"paid\": true\n },\n {\n  \"id\": \"ullamco esse sit\",\n  \"subscriptionId\": \"pariatur in \",\n  \"amount\": 0,\n  \"paymentMethod\": {\n   \"cardType\": \"unknown\",\n   \"last4\": \"ani\",\n   \"expiration\": \"1950-12-31\",\n   \"paymentMethodId\": \"et \"\n  },\n  \"paymentMethodId\": \"voluptate dolore et ad\",\n  \"invoiceUrl\": \"cupidatat aliqua eiusmod ea\",\n  \"status\": \"failed\",\n  \"date\": \"sint in sit culpa\",\n  \"paid\": true\n }\n]"
                }
              ]
            }
          ]
        },
        {
          "name": "billing",
          "item": [
            {
              "name": "Get billing summary",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/billing",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "billing"]
                },
                "description": "Returns the full billing summary related to the account."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/billing",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "billing"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"subscriptions\": [\n  {\n   \"id\": \"pariatur fugiat anim\",\n   \"paymentMethodId\": \"l\",\n   \"startedAt\": \"1993-11-30T08:21:13.599Z\",\n   \"trialPeriodEnd\": \"1985-03-21T02:22:11.418Z\",\n   \"endAt\": \"2018-02-09T22:22:54.971Z\",\n   \"status\": \"incomplete\",\n   \"quantity\": 1,\n   \"plan\": {\n    \"id\": \"Ex\",\n    \"interval\": \"none\",\n    \"productId\": \"officia elit\",\n    \"price\": 0,\n    \"trialPeriodDays\": 23863045.55633918\n   }\n  },\n  {\n   \"id\": \"labore proid\",\n   \"paymentMethodId\": \"eiusmod et qu\",\n   \"startedAt\": \"1958-07-03T00:21:19.400Z\",\n   \"trialPeriodEnd\": \"2012-07-16T22:09:09.244Z\",\n   \"endAt\": \"1951-04-18T04:41:20.191Z\",\n   \"status\": \"incomplete\",\n   \"quantity\": 1,\n   \"plan\": {\n    \"id\": \"sint\",\n    \"interval\": \"none\",\n    \"productId\": \"ut nostrud non labor\",\n    \"price\": 0,\n    \"trialPeriodDays\": 70904057.8752248\n   }\n  }\n ],\n \"contactInfo\": {\n  \"city\": \"ex ad\",\n  \"zip\": \"laboris veniam labore\",\n  \"country\": \"GR\",\n  \"line1\": \"anim sint ex sed\",\n  \"name\": \"velit Lorem nisi elit\",\n  \"email\": \"mJ-65xjy0yiV@pwkmUhjdttzTUkZL.xl\",\n  \"state\": \"NV\",\n  \"line2\": \"irure Lorem sed anim\",\n  \"phone\": \"nulla tempor dolore\"\n },\n \"taxes\": [\n  {\n   \"rate\": 25017521.055823714,\n   \"name\": \"non\"\n  },\n  {\n   \"rate\": -1605283.2004327327,\n   \"name\": \"in exercitation irure ullamco\"\n  }\n ]\n}"
                }
              ]
            },
            {
              "name": "Set contact details",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"city\": \"<string>\",\n    \"zip\": \"<string>\",\n    \"country\": \"<string>\",\n    \"line1\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"state\": \"<string>\",\n    \"line2\": \"<string>\",\n    \"phone\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/billing/contact",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "billing", "contact"]
                },
                "description": "Sets the full contact details to the account including an address."
              },
              "response": [
                {
                  "name": "No Content",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"city\": \"<string>\",\n    \"zip\": \"<string>\",\n    \"country\": \"<string>\",\n    \"line1\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"state\": \"<string>\",\n    \"line2\": \"<string>\",\n    \"phone\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/billing/contact",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "billing", "contact"]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "payment-methods",
          "item": [
            {
              "name": "{method Id}",
              "item": [
                {
                  "name": "Get a single payment method",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/payment-methods/:methodId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "payment-methods", ":methodId"],
                      "variable": [
                        {
                          "key": "methodId",
                          "value": "<string>",
                          "description": "(Required) The payment method ID"
                        }
                      ]
                    },
                    "description": "Returns a payment method by its ID."
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/payment-methods/:methodId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "payment-methods", ":methodId"],
                          "variable": [
                            {
                              "key": "methodId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"cardType\": \"discover\",\n \"last4\": \"do \",\n \"expiration\": \"1995-06-07\",\n \"id\": \"do\",\n \"defaultMethod\": false\n}"
                    }
                  ]
                },
                {
                  "name": "Set the default payment method",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"defaultMethod\": \"<boolean>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/payment-methods/:methodId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "payment-methods", ":methodId"],
                      "variable": [
                        {
                          "key": "methodId",
                          "value": "<string>",
                          "description": "(Required) The payment method ID"
                        }
                      ]
                    },
                    "description": "Updates the default payment method for the       organization using the provided payment method ID."
                  },
                  "response": [
                    {
                      "name": "No Content",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"defaultMethod\": \"<boolean>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/payment-methods/:methodId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "payment-methods", ":methodId"],
                          "variable": [
                            {
                              "key": "methodId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Remove a payment method",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/payment-methods/:methodId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "payment-methods", ":methodId"],
                      "variable": [
                        {
                          "key": "methodId",
                          "value": "<string>",
                          "description": "(Required) The payment method ID"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/payment-methods/:methodId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "payment-methods", ":methodId"],
                          "variable": [
                            {
                              "key": "methodId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "Get all payment methods",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/payment-methods",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "payment-methods"]
                },
                "description": "Returns all the payment methods     associated with the organization."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/payment-methods",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "payment-methods"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"cardType\": \"discover\",\n  \"last4\": \"ve\",\n  \"expiration\": \"1985-02-07\",\n  \"id\": \"in Lorem\",\n  \"defaultMethod\": false\n },\n {\n  \"cardType\": \"visa\",\n  \"last4\": \"t\",\n  \"expiration\": \"1944-07-17\",\n  \"id\": \"occaecat sed aliqua\",\n  \"defaultMethod\": false\n }\n]"
                }
              ]
            },
            {
              "name": "Add a new payment method",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"cardNumber\": \"<string>\",\n    \"securityNumber\": \"<string>\",\n    \"expiration\": \"<string>\",\n    \"defaultMethod\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/payment-methods",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "payment-methods"]
                },
                "description": "Creates a new payment method for     the organization with provided parameters."
              },
              "response": [
                {
                  "name": "Created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"cardNumber\": \"<string>\",\n    \"securityNumber\": \"<string>\",\n    \"expiration\": \"<string>\",\n    \"defaultMethod\": true\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/payment-methods",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "payment-methods"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"cardType\": \"discover\",\n \"last4\": \"do \",\n \"expiration\": \"1995-06-07\",\n \"id\": \"do\",\n \"defaultMethod\": false\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "subscriptions",
          "item": [
            {
              "name": "{subscription Id}",
              "item": [
                {
                  "name": "Get a single subscription",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/subscriptions/:subscriptionId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "subscriptions", ":subscriptionId"],
                      "variable": [
                        {
                          "key": "subscriptionId",
                          "value": "<string>",
                          "description": "(Required) The requested subscription ID"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Subscription Not Found",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/subscriptions/:subscriptionId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "subscriptions",
                            ":subscriptionId"
                          ],
                          "variable": [
                            {
                              "key": "subscriptionId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                    },
                    {
                      "name": "Successful operation.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/subscriptions/:subscriptionId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "subscriptions",
                            ":subscriptionId"
                          ],
                          "variable": [
                            {
                              "key": "subscriptionId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"id\": \"enim id do\",\n \"paymentMethodId\": \"id a\",\n \"startedAt\": \"1993-05-27T05:32:06.109Z\",\n \"trialPeriodEnd\": \"2004-12-25T03:55:26.844Z\",\n \"endAt\": \"1950-10-29T15:08:49.999Z\",\n \"status\": \"incomplete\",\n \"quantity\": 1,\n \"plan\": {\n  \"id\": \"proident repr\",\n  \"interval\": \"none\",\n  \"productId\": \"ex\",\n  \"price\": 0,\n  \"trialPeriodDays\": 6836984.4229144715\n }\n}"
                    }
                  ]
                },
                {
                  "name": "Update a subscription",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"planId\": \"<string>\",\n    \"paymentMethodId\": \"<string>\",\n    \"quantity\": 1\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/subscriptions/:subscriptionId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "subscriptions", ":subscriptionId"],
                      "variable": [
                        {
                          "key": "subscriptionId",
                          "value": "<string>",
                          "description": "(Required) The updated subscription ID"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Subscription Not Found",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"planId\": \"<string>\",\n    \"paymentMethodId\": \"<string>\",\n    \"quantity\": 1\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/subscriptions/:subscriptionId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "subscriptions",
                            ":subscriptionId"
                          ],
                          "variable": [
                            {
                              "key": "subscriptionId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                    },
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"planId\": \"<string>\",\n    \"paymentMethodId\": \"<string>\",\n    \"quantity\": 1\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/subscriptions/:subscriptionId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "subscriptions",
                            ":subscriptionId"
                          ],
                          "variable": [
                            {
                              "key": "subscriptionId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"id\": \"enim id do\",\n \"paymentMethodId\": \"id a\",\n \"startedAt\": \"1993-05-27T05:32:06.109Z\",\n \"trialPeriodEnd\": \"2004-12-25T03:55:26.844Z\",\n \"endAt\": \"1950-10-29T15:08:49.999Z\",\n \"status\": \"incomplete\",\n \"quantity\": 1,\n \"plan\": {\n  \"id\": \"proident repr\",\n  \"interval\": \"none\",\n  \"productId\": \"ex\",\n  \"price\": 0,\n  \"trialPeriodDays\": 6836984.4229144715\n }\n}"
                    }
                  ]
                },
                {
                  "name": "Cancel an subscription",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/subscriptions/:subscriptionId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "subscriptions", ":subscriptionId"],
                      "variable": [
                        {
                          "key": "subscriptionId",
                          "value": "<string>",
                          "description": "(Required) The cancelled subscription ID"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Subscription Not Found",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/subscriptions/:subscriptionId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "subscriptions",
                            ":subscriptionId"
                          ],
                          "variable": [
                            {
                              "key": "subscriptionId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                    },
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/subscriptions/:subscriptionId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "subscriptions",
                            ":subscriptionId"
                          ],
                          "variable": [
                            {
                              "key": "subscriptionId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Repay a past due subscription",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/subscriptions/:subscriptionId/repay",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "api",
                        "v1",
                        "subscriptions",
                        ":subscriptionId",
                        "repay"
                      ],
                      "variable": [
                        {
                          "key": "subscriptionId",
                          "value": "<string>",
                          "description": "(Required) The past due subscription ID"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/subscriptions/:subscriptionId/repay",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "subscriptions",
                            ":subscriptionId",
                            "repay"
                          ],
                          "variable": [
                            {
                              "key": "subscriptionId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"url\": \"minim in\",\n \"status\": \"aliquip esse a\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Get all subscriptions",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/subscriptions",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "subscriptions"]
                },
                "description": "Returns a list of all the subscriptions for the organization."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/subscriptions",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "subscriptions"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"id\": \"dolor veniam\",\n  \"paymentMethodId\": \"enim ut pariat\",\n  \"startedAt\": \"1953-12-16T14:58:01.144Z\",\n  \"trialPeriodEnd\": \"1997-04-07T03:34:34.831Z\",\n  \"endAt\": \"1984-07-31T06:20:18.509Z\",\n  \"status\": \"incomplete\",\n  \"quantity\": 1,\n  \"plan\": {\n   \"id\": \"officia mollit in d\",\n   \"interval\": \"none\",\n   \"productId\": \"do qui occaecat labo\",\n   \"price\": 0,\n   \"trialPeriodDays\": 33368467.366722543\n  }\n },\n {\n  \"id\": \"\",\n  \"paymentMethodId\": \"ipsum si\",\n  \"startedAt\": \"1943-01-21T08:33:07.245Z\",\n  \"trialPeriodEnd\": \"1992-06-01T06:05:32.644Z\",\n  \"endAt\": \"1951-12-25T11:26:41.757Z\",\n  \"status\": \"incomplete\",\n  \"quantity\": 1,\n  \"plan\": {\n   \"id\": \"in ip\",\n   \"interval\": \"none\",\n   \"productId\": \"n\",\n   \"price\": 0,\n   \"trialPeriodDays\": 52237047.90113113\n  }\n }\n]"
                }
              ]
            },
            {
              "name": "Subscribe to a plan",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"planId\": \"<string>\",\n    \"paymentMethodId\": \"<string>\",\n    \"quantity\": 1\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/subscriptions",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "subscriptions"]
                }
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"planId\": \"<string>\",\n    \"paymentMethodId\": \"<string>\",\n    \"quantity\": 1\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/subscriptions",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "subscriptions"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"id\": \"enim id do\",\n \"paymentMethodId\": \"id a\",\n \"startedAt\": \"1993-05-27T05:32:06.109Z\",\n \"trialPeriodEnd\": \"2004-12-25T03:55:26.844Z\",\n \"endAt\": \"1950-10-29T15:08:49.999Z\",\n \"status\": \"incomplete\",\n \"quantity\": 1,\n \"plan\": {\n  \"id\": \"proident repr\",\n  \"interval\": \"none\",\n  \"productId\": \"ex\",\n  \"price\": 0,\n  \"trialPeriodDays\": 6836984.4229144715\n }\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "services",
          "item": [
            {
              "name": "stripe Events Process Stripe Event",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/services/stripe/events",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "services", "stripe", "events"]
                }
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/services/stripe/events",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "services", "stripe", "events"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "*/*"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "integration S Webhooks Github Web Hook",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-GitHub-Event",
                    "value": "<object>"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"installation\": \"<object>\",\n    \"repository\": \"<object>\",\n    \"action\": \"<object>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/services/github/callback",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "services", "github", "callback"]
                }
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-GitHub-Event",
                        "value": "<object>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"installation\": \"<object>\",\n    \"repository\": \"<object>\",\n    \"action\": \"<object>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/services/github/callback",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "services", "github", "callback"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "*/*"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "integration S Webhooks Slack Web Hook",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"event\": {\n        \"type\": \"<string>\",\n        \"challenge\": \"<string>\",\n        \"channel\": \"<string>\",\n        \"payload\": \"<string>\"\n    },\n    \"team_id\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/services/slack/callback",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "services", "slack", "callback"]
                }
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"event\": {\n        \"type\": \"<string>\",\n        \"challenge\": \"<string>\",\n        \"channel\": \"<string>\",\n        \"payload\": \"<string>\"\n    },\n    \"team_id\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/services/slack/callback",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "services", "slack", "callback"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "*/*"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "integration S Webhooks Support Web Hook",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"type\": \"<string>\",\n    \"challenge\": \"<string>\",\n    \"channel\": \"<string>\",\n    \"payload\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/services/support/actions",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "services", "support", "actions"]
                }
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"type\": \"<string>\",\n    \"challenge\": \"<string>\",\n    \"channel\": \"<string>\",\n    \"payload\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/services/support/actions",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "services", "support", "actions"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "*/*"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "auth",
          "item": [
            {
              "name": "Logs in and returns the authentication token.",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "user-agent",
                    "value": "<string>"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"<email>\",\n    \"password\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "auth", "login"]
                }
              },
              "response": [
                {
                  "name": "Failed to log in with provided credentials.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "user-agent",
                        "value": "<string>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"email\": \"<email>\",\n    \"password\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth/login",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth", "login"]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"UNAUTHORIZED\",\n \"message\": \"minim eiusmod\",\n \"status\": 401,\n \"errors\": [\n  {\n   \"name\": \"et labore est anim veniam\",\n   \"message\": \"deserunt nulla\"\n  },\n  {\n   \"name\": \"ut\",\n   \"message\": \"esse fugiat dolore in\"\n  }\n ],\n \"stack\": [\n  \"velit amet dolor\",\n  \"aliqua nulla commodo est\"\n ]\n}"
                },
                {
                  "name": "Invalid username or password.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "user-agent",
                        "value": "<string>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"email\": \"<email>\",\n    \"password\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth/login",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth", "login"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"BAD_REQUEST\",\n \"message\": \"ullamco laborum\",\n \"status\": 400,\n \"errors\": [\n  {\n   \"name\": \"qui\",\n   \"message\": \"amet veniam\"\n  },\n  {\n   \"name\": \"enim commodo\",\n   \"message\": \"dolor do laborum aute tempor\"\n  }\n ],\n \"stack\": [\n  \"commodo est\",\n  \"velit dolor cillum aliqua\"\n ]\n}"
                },
                {
                  "name": "Failed to log in with specified authentication method.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "user-agent",
                        "value": "<string>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"email\": \"<email>\",\n    \"password\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth/login",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth", "login"]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"FORBIDDEN\",\n \"message\": \"pariatur ad\",\n \"status\": 403,\n \"errors\": [\n  {\n   \"name\": \"mollit anim sunt\",\n   \"message\": \"dolore in\"\n  },\n  {\n   \"name\": \"Ut enim veniam pariatur\",\n   \"message\": \"tempor aute\"\n  }\n ],\n \"stack\": [\n  \"ullamco incididunt labore in quis\",\n  \"Ut\"\n ]\n}"
                },
                {
                  "name": "Successful operation. The authentication token is returned in a field named `accessToken`. You must include this token in subsequent requests.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "user-agent",
                        "value": "<string>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"email\": \"<email>\",\n    \"password\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth/login",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth", "login"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"accessToken\": \"ex fugiat\",\n \"expiresIn\": -64616866.166611195\n}"
                }
              ]
            },
            {
              "name": "Refresh access token.",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth/token",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "auth", "token"]
                }
              },
              "response": [
                {
                  "name": "Missing credentials.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth/token",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth", "token"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"BAD_REQUEST\",\n \"message\": \"ullamco laborum\",\n \"status\": 400,\n \"errors\": [\n  {\n   \"name\": \"qui\",\n   \"message\": \"amet veniam\"\n  },\n  {\n   \"name\": \"enim commodo\",\n   \"message\": \"dolor do laborum aute tempor\"\n  }\n ],\n \"stack\": [\n  \"commodo est\",\n  \"velit dolor cillum aliqua\"\n ]\n}"
                },
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth/token",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth", "token"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"accessToken\": \"ex fugiat\",\n \"expiresIn\": -64616866.166611195\n}"
                }
              ]
            },
            {
              "name": "Returns all user's sessions.",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth/sessions",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "auth", "sessions"]
                }
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth/sessions",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth", "sessions"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"tokenId\": \"labori\",\n  \"ip\": \"8.215.12.117\",\n  \"deviceName\": \"chrome\",\n  \"browserName\": \"mac\",\n  \"lastLoggedInAt\": \"1984-10-13T08:35:20.869Z\"\n },\n {\n  \"tokenId\": \"aute fug\",\n  \"ip\": \"8.215.12.117\",\n  \"deviceName\": \"chrome\",\n  \"browserName\": \"mac\",\n  \"lastLoggedInAt\": \"2005-09-16T19:24:10.328Z\"\n }\n]"
                }
              ]
            },
            {
              "name": "authentication Change Password",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"password\": \"<string>\",\n    \"oldPassword\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth/password",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "auth", "password"]
                }
              },
              "response": [
                {
                  "name": "Success.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"password\": \"<string>\",\n    \"oldPassword\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth/password",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth", "password"]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Logging out a user from the application.",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth/logout",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "auth", "logout"]
                }
              },
              "response": [
                {
                  "name": "Success.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth/logout",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth", "logout"]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Missing credentials.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth/logout",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth", "logout"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"BAD_REQUEST\",\n \"message\": \"ullamco laborum\",\n \"status\": 400,\n \"errors\": [\n  {\n   \"name\": \"qui\",\n   \"message\": \"amet veniam\"\n  },\n  {\n   \"name\": \"enim commodo\",\n   \"message\": \"dolor do laborum aute tempor\"\n  }\n ],\n \"stack\": [\n  \"commodo est\",\n  \"velit dolor cillum aliqua\"\n ]\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "mfa",
          "item": [
            {
              "name": "setup",
              "item": [
                {
                  "name": "Disable MFA",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/mfa/setup",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "mfa", "setup"]
                    },
                    "description": "Disables MFA for the logged-in user."
                  },
                  "response": [
                    {
                      "name": "MFA disabled.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/mfa/setup",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "mfa", "setup"]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Setup MFA",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/mfa/setup",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "mfa", "setup"]
                    },
                    "description": "Returns URL and code to be used in an OTP application.     These are usually rendered in form of a QR code."
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/mfa/setup",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "mfa", "setup"]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"url\": \"sit \",\n \"code\": \"ut consectetur commodo adipisicing\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Verify MFA",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "user-agent",
                    "value": "<string>"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"otp\": \"<string>\",\n    \"token\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/mfa",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "mfa"]
                },
                "description": "An internal endpoint used to     verify an OTP against the stored token"
              },
              "response": [
                {
                  "name": "Missing credentials.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "user-agent",
                        "value": "<string>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"otp\": \"<string>\",\n    \"token\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/mfa",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "mfa"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"BAD_REQUEST\",\n \"message\": \"ullamco laborum\",\n \"status\": 400,\n \"errors\": [\n  {\n   \"name\": \"qui\",\n   \"message\": \"amet veniam\"\n  },\n  {\n   \"name\": \"enim commodo\",\n   \"message\": \"dolor do laborum aute tempor\"\n  }\n ],\n \"stack\": [\n  \"commodo est\",\n  \"velit dolor cillum aliqua\"\n ]\n}"
                },
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "user-agent",
                        "value": "<string>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"otp\": \"<string>\",\n    \"token\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/mfa",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "mfa"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"accessToken\": \"ex fugiat\",\n \"expiresIn\": -64616866.166611195\n}"
                },
                {
                  "name": "Failed to log in with provided credentials.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "user-agent",
                        "value": "<string>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"otp\": \"<string>\",\n    \"token\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/mfa",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "mfa"]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"UNAUTHORIZED\",\n \"message\": \"elit et\",\n \"status\": 401,\n \"errors\": [\n  {\n   \"name\": \"Lorem in incididunt in\",\n   \"message\": \"elit non\"\n  },\n  {\n   \"name\": \"eu sed occaecat laborum\",\n   \"message\": \"ad dolore nostrud cillum\"\n  }\n ],\n \"stack\": [\n  \"do\",\n  \"velit ad\"\n ]\n}"
                }
              ]
            },
            {
              "name": "Verify OTP code",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"otp\": \"<string>\",\n    \"code\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/mfa/verify",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "mfa", "verify"]
                },
                "description": "Verifies an OTP and, in case of success,     enables MFA for the logged in user."
              },
              "response": [
                {
                  "name": "MFA enabled.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"otp\": \"<string>\",\n    \"code\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/mfa/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "mfa", "verify"]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "users",
          "item": [
            {
              "name": "{user Id}",
              "item": [
                {
                  "name": "users Get User",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/users/:userId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "users", ":userId"],
                      "variable": [
                        {
                          "key": "userId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/users/:userId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "users", ":userId"],
                          "variable": [
                            {
                              "key": "userId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"firstName\": \"aute Ut\",\n \"lastName\": \"labore est\",\n \"id\": \"consectetur labo\",\n \"email\": \"YPfuGLlKczGVR4Q@iACUuVvjxprUdBFXSolXQP.rj\",\n \"emailConfirmed\": false,\n \"active\": true,\n \"isStaff\": true,\n \"identities\": [\n  {\n   \"id\": \"esse velit nulla\",\n   \"providerType\": \"github\"\n  },\n  {\n   \"id\": \"Ut labore\",\n   \"providerType\": \"okta\"\n  }\n ],\n \"multiFactorEnabled\": false\n}"
                    }
                  ]
                },
                {
                  "name": "users Update User",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<email>\",\n    \"active\": \"<boolean>\",\n    \"isStaff\": \"<boolean>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/users/:userId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "users", ":userId"],
                      "variable": [
                        {
                          "key": "userId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "No Content",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<email>\",\n    \"active\": \"<boolean>\",\n    \"isStaff\": \"<boolean>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/users/:userId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "users", ":userId"],
                          "variable": [
                            {
                              "key": "userId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "users Get Users",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/users",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "users"]
                }
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/users",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "users"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"firstName\": \"culpa Lorem Excepteur consequat\",\n  \"lastName\": \"aliquip\",\n  \"id\": \"proident officia \",\n  \"email\": \"bEIaiRz@zYaZeeOD.gvyg\",\n  \"emailConfirmed\": true,\n  \"active\": true,\n  \"isStaff\": false,\n  \"identities\": [\n   {\n    \"id\": \"qui eu\",\n    \"providerType\": \"github\"\n   },\n   {\n    \"id\": \"veniam quis ipsum\",\n    \"providerType\": \"github\"\n   }\n  ],\n  \"multiFactorEnabled\": false\n },\n {\n  \"firstName\": \"do aliqua dolore\",\n  \"lastName\": \"incididunt a\",\n  \"id\": \"ea labor\",\n  \"email\": \"GY6kfdGt7a@JxRwOCUnvxKNPRtiuraOofyLrGXmKSjwM.hvyy\",\n  \"emailConfirmed\": true,\n  \"active\": false,\n  \"isStaff\": false,\n  \"identities\": [\n   {\n    \"id\": \"officia dolore sun\",\n    \"providerType\": \"google\"\n   },\n   {\n    \"id\": \"laboris\",\n    \"providerType\": \"google\"\n   }\n  ],\n  \"multiFactorEnabled\": false\n }\n]"
                }
              ]
            }
          ]
        },
        {
          "name": "api-keys",
          "item": [
            {
              "name": "{api Key Id}",
              "item": [
                {
                  "name": "Update an API key",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"<string>\",\n    \"scopes\": [\n        \"<string>\"\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/api-keys/:apiKeyId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "api-keys", ":apiKeyId"],
                      "variable": [
                        {
                          "key": "apiKeyId",
                          "value": "<string>",
                          "description": "(Required) The updated personal API key ID"
                        }
                      ]
                    },
                    "description": "Updates a personal API key name and its access scopes."
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"<string>\",\n    \"scopes\": [\n        \"<string>\"\n    ]\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/api-keys/:apiKeyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "api-keys", ":apiKeyId"],
                          "variable": [
                            {
                              "key": "apiKeyId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Delete an API key",
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/api-keys/:apiKeyId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "api-keys", ":apiKeyId"],
                      "variable": [
                        {
                          "key": "apiKeyId",
                          "value": "<string>",
                          "description": "(Required) The deleted personal API key ID"
                        }
                      ]
                    },
                    "description": "Removes a single personal API key by its ID."
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/api-keys/:apiKeyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "api-keys", ":apiKeyId"],
                          "variable": [
                            {
                              "key": "apiKeyId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "Create a new API key",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"scopes\": [\n        \"<string>\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/api-keys",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "api-keys"]
                },
                "description": "Creates a new personal API key for the currently       logged-in user with provided name and access scopes."
              },
              "response": [
                {
                  "name": "Created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"<string>\",\n    \"scopes\": [\n        \"<string>\"\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/api-keys",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "api-keys"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"id\": \"cillum fug\",\n \"name\": \"dolor consequat elit magna\",\n \"prefix\": \"pro\",\n \"scopes\": [\n  \"fugiat occaecat\",\n  \"sint aliqua\"\n ],\n \"lastModified\": \"1957-09-13T07:39:24.063Z\",\n \"pureKey\": \"Duis mollit culpa velit aliqua\"\n}"
                }
              ]
            },
            {
              "name": "Get all API keys",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/api-keys",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "api-keys"]
                },
                "description": "Returns all personal API keys belonging to       the currently logged-in user."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/api-keys",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "api-keys"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"id\": \"do incididu\",\n  \"name\": \"aute aliquip\",\n  \"prefix\": \"eiusmo\",\n  \"scopes\": [\n   \"officia\",\n   \"nulla velit\"\n  ],\n  \"lastModified\": \"1964-10-21T23:33:44.646Z\",\n  \"pureKey\": \"elit \"\n },\n {\n  \"id\": \"officia con\",\n  \"name\": \"adipisicing cillu\",\n  \"prefix\": \"offi\",\n  \"scopes\": [\n   \"officia adipisicing labore laborum dolor\",\n   \"ex irure est reprehenderit deserunt\"\n  ],\n  \"lastModified\": \"1976-01-04T11:21:46.380Z\",\n  \"pureKey\": \"aliqua deserunt ut aute\"\n }\n]"
                }
              ]
            }
          ]
        },
        {
          "name": "invites/{member Id}/{token}",
          "item": [
            {
              "name": "invitations Check Invite",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/invites/:memberId/:token",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "invites", ":memberId", ":token"],
                  "variable": [
                    {
                      "key": "memberId",
                      "value": "<string>",
                      "description": "(Required) "
                    },
                    {
                      "key": "token",
                      "value": "<string>",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/invites/:memberId/:token",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "invites", ":memberId", ":token"],
                      "variable": [
                        {
                          "key": "memberId"
                        },
                        {
                          "key": "token"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"firstName\": \"Excepteur in do aliquip dolore\",\n \"lastName\": \"elit consequat magna nostrud\",\n \"email\": \"uGqJHpM@zdRlLan.uox\",\n \"orgName\": \"acme\",\n \"existingMember\": false,\n \"needsAuthentication\": false,\n \"hasSso\": false,\n \"requiredSsoProvider\": \"google\"\n}"
                }
              ]
            },
            {
              "name": "invitations Accept Invite",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/invites/:memberId/:token",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "invites", ":memberId", ":token"],
                  "variable": [
                    {
                      "key": "memberId",
                      "value": "<string>",
                      "description": "(Required) "
                    },
                    {
                      "key": "token",
                      "value": "<string>",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "No Content",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/invites/:memberId/:token",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "invites", ":memberId", ":token"],
                      "variable": [
                        {
                          "key": "memberId"
                        },
                        {
                          "key": "token"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "auth-provider",
          "item": [
            {
              "name": "authentication Sso Provider Find By Type",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth-provider",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "auth-provider"]
                }
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth-provider",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth-provider"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"id\": \"ea sunt ex nostrud enim\",\n \"providerType\": \"github\",\n \"defaultRoleId\": \"ad minim\",\n \"pendingLinks\": 0,\n \"installed\": false,\n \"authUrl\": \"http://zzQWspcgvqYH.ornfd\",\n \"config\": {},\n \"addedAt\": \"1969-10-22T09:07:31.295Z\",\n \"updatedAt\": \"1974-09-28T21:09:06.581Z\",\n \"forceSso\": false,\n \"provisioning\": false\n}"
                },
                {
                  "name": "No Content",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth-provider",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth-provider"]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "authentication Sso Provider Edit Settings",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"providerType\": \"<string>\",\n    \"defaultRoleId\": \"<string>\",\n    \"config\": \"<object>\",\n    \"forceSso\": false,\n    \"provisioning\": false\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth-provider",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "auth-provider"]
                }
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"providerType\": \"<string>\",\n    \"defaultRoleId\": \"<string>\",\n    \"config\": \"<object>\",\n    \"forceSso\": false,\n    \"provisioning\": false\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth-provider",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth-provider"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"id\": \"ea sunt ex nostrud enim\",\n \"providerType\": \"github\",\n \"defaultRoleId\": \"ad minim\",\n \"pendingLinks\": 0,\n \"installed\": false,\n \"authUrl\": \"http://zzQWspcgvqYH.ornfd\",\n \"config\": {},\n \"addedAt\": \"1969-10-22T09:07:31.295Z\",\n \"updatedAt\": \"1974-09-28T21:09:06.581Z\",\n \"forceSso\": false,\n \"provisioning\": false\n}"
                }
              ]
            },
            {
              "name": "authentication Sso Provider Disable Auth Provider",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth-provider",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "auth-provider"]
                }
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth-provider",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth-provider"]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "authentication Sso Provider Get Git Hub Orgs",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth-provider/github/orgs",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "auth-provider", "github", "orgs"]
                }
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth-provider/github/orgs",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth-provider", "github", "orgs"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "*/*"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "authentication Sso Provider Send Link Reminders",
              "request": {
                "method": "PUT",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth-provider/reminders",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "auth-provider", "reminders"]
                }
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth-provider/reminders",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth-provider", "reminders"]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "scim",
          "item": [
            {
              "name": "Users",
              "item": [
                {
                  "name": "{user Id}",
                  "item": [
                    {
                      "name": "Get user by ID",
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scim/Users/:userId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scim", "Users", ":userId"],
                          "variable": [
                            {
                              "key": "userId",
                              "value": "<string>",
                              "description": "(Required) The requested user ID"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/scim/Users/:userId",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "v1", "scim", "Users", ":userId"],
                              "variable": [
                                {
                                  "key": "userId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"id\": \"<string>\",\n \"externalId\": \"<string>\",\n \"schemas\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"meta\": {\n  \"resourceType\": \"Group\",\n  \"created\": \"magna laborum mollit in in\",\n  \"lastModified\": \"Ut aliqua eu\"\n },\n \"active\": true,\n \"userName\": \"<string>\",\n \"name\": {\n  \"familyName\": \"sed Duis cillum\",\n  \"givenName\": \"est amet eiusmod\"\n }\n}"
                        }
                      ]
                    },
                    {
                      "name": "Add a new user",
                      "request": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"schemas\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"<string>\",\n            \"path\": \"<string>\",\n            \"value\": \"<object>\"\n        },\n        {\n            \"op\": \"<string>\",\n            \"path\": \"<string>\",\n            \"value\": \"<object>\"\n        }\n    ]\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scim/Users/:userId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scim", "Users", ":userId"],
                          "variable": [
                            {
                              "key": "userId",
                              "value": "<string>",
                              "description": "(Required) The updated user ID"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"schemas\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"<string>\",\n            \"path\": \"<string>\",\n            \"value\": \"<object>\"\n        },\n        {\n            \"op\": \"<string>\",\n            \"path\": \"<string>\",\n            \"value\": \"<object>\"\n        }\n    ]\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/scim/Users/:userId",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "v1", "scim", "Users", ":userId"],
                              "variable": [
                                {
                                  "key": "userId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"id\": \"<string>\",\n \"externalId\": \"<string>\",\n \"schemas\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"meta\": {\n  \"resourceType\": \"Group\",\n  \"created\": \"magna laborum mollit in in\",\n  \"lastModified\": \"Ut aliqua eu\"\n },\n \"active\": true,\n \"userName\": \"<string>\",\n \"name\": {\n  \"familyName\": \"sed Duis cillum\",\n  \"givenName\": \"est amet eiusmod\"\n }\n}"
                        }
                      ]
                    },
                    {
                      "name": "Delete user",
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scim/Users/:userId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scim", "Users", ":userId"],
                          "variable": [
                            {
                              "key": "userId",
                              "value": "<string>",
                              "description": "(Required) The updated user ID"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "No Content",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/scim/Users/:userId",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "v1", "scim", "Users", ":userId"],
                              "variable": [
                                {
                                  "key": "userId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Get all users",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scim/Users?startIndex=<number>&count=<number>&filter=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scim", "Users"],
                      "query": [
                        {
                          "key": "startIndex",
                          "value": "<number>"
                        },
                        {
                          "key": "count",
                          "value": "<number>"
                        },
                        {
                          "key": "filter",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scim/Users?startIndex=<number>&count=<number>&filter=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scim", "Users"],
                          "query": [
                            {
                              "key": "startIndex",
                              "value": "<number>"
                            },
                            {
                              "key": "count",
                              "value": "<number>"
                            },
                            {
                              "key": "filter",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"schemas\": [\n  \"fugiat consequat labore et amet\",\n  \"elit dolor consectetur\"\n ],\n \"Resources\": [\n  {\n   \"id\": \"reprehenderit\",\n   \"externalId\": \"dolor consequat nostrud\",\n   \"schemas\": [\n    \"proi\",\n    \"ex\"\n   ],\n   \"meta\": {\n    \"resourceType\": \"Group\",\n    \"created\": \"ut in magna adipisicing nostrud\",\n    \"lastModified\": \"ut enim proident\"\n   },\n   \"active\": true,\n   \"userName\": \"Ut Duis sit eu reprehenderit\",\n   \"name\": {\n    \"familyName\": \"aliquip officia exercitation\",\n    \"givenName\": \"in ut sit conse\"\n   }\n  },\n  {\n   \"id\": \"do tempor exercitati\",\n   \"externalId\": \"velit pariatur sint Ut laborum\",\n   \"schemas\": [\n    \"in mollit occaecat veniam\",\n    \"adipisicing\"\n   ],\n   \"meta\": {\n    \"resourceType\": \"User\",\n    \"created\": \"occaecat id eiusmod cupidatat\",\n    \"lastModified\": \"in minim Lorem laboris c\"\n   },\n   \"active\": true,\n   \"userName\": \"minim qui sunt \",\n   \"name\": {\n    \"familyName\": \"id Excepteur reprehenderit in\",\n    \"givenName\": \"dolore nulla\"\n   }\n  }\n ],\n \"totalResults\": 35856764.81657854,\n \"startIndex\": 74275673.98599973,\n \"itemsPerPage\": -9859569.91821371\n}"
                    }
                  ]
                },
                {
                  "name": "Add a new user",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<string>\",\n    \"externalId\": \"<string>\",\n    \"schemas\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"meta\": {\n        \"resourceType\": \"User\",\n        \"created\": \"Ut id\",\n        \"lastModified\": \"occaecat ea sed\"\n    },\n    \"active\": true,\n    \"userName\": \"<string>\",\n    \"name\": {\n        \"familyName\": \"sint laborum exercitation\",\n        \"givenName\": \"consectetur consequat\"\n    }\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scim/Users",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scim", "Users"]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<string>\",\n    \"externalId\": \"<string>\",\n    \"schemas\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"magna laborum mollit in in\",\n        \"lastModified\": \"Ut aliqua eu\"\n    },\n    \"active\": true,\n    \"userName\": \"<string>\",\n    \"name\": {\n        \"familyName\": \"sed Duis cillum\",\n        \"givenName\": \"est amet eiusmod\"\n    }\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scim/Users",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scim", "Users"]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"id\": \"<string>\",\n \"externalId\": \"<string>\",\n \"schemas\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"meta\": {\n  \"resourceType\": \"Group\",\n  \"created\": \"magna laborum mollit in in\",\n  \"lastModified\": \"Ut aliqua eu\"\n },\n \"active\": true,\n \"userName\": \"<string>\",\n \"name\": {\n  \"familyName\": \"sed Duis cillum\",\n  \"givenName\": \"est amet eiusmod\"\n }\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Groups",
              "item": [
                {
                  "name": "{group Id}",
                  "item": [
                    {
                      "name": "Get group by ID",
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scim/Groups/:groupId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scim", "Groups", ":groupId"],
                          "variable": [
                            {
                              "key": "groupId",
                              "value": "<string>",
                              "description": "(Required) The requested group ID"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/scim/Groups/:groupId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "scim",
                                "Groups",
                                ":groupId"
                              ],
                              "variable": [
                                {
                                  "key": "groupId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"id\": \"<string>\",\n \"externalId\": \"<string>\",\n \"schemas\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"meta\": {\n  \"resourceType\": \"User\",\n  \"created\": \"eu aliqua nulla\",\n  \"lastModified\": \"Lorem\"\n },\n \"displayName\": \"<string>\",\n \"members\": [\n  {\n   \"$ref\": \"in commodo sint\",\n   \"value\": \"laboris\"\n  },\n  {\n   \"$ref\": \"id eu nostrud amet\",\n   \"value\": \"occaecat anim\"\n  }\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Add a new group",
                      "request": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"schemas\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"<string>\",\n            \"path\": \"<string>\",\n            \"value\": \"<object>\"\n        },\n        {\n            \"op\": \"<string>\",\n            \"path\": \"<string>\",\n            \"value\": \"<object>\"\n        }\n    ]\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scim/Groups/:groupId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scim", "Groups", ":groupId"],
                          "variable": [
                            {
                              "key": "groupId",
                              "value": "<string>",
                              "description": "(Required) The updated group ID"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"schemas\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"<string>\",\n            \"path\": \"<string>\",\n            \"value\": \"<object>\"\n        },\n        {\n            \"op\": \"<string>\",\n            \"path\": \"<string>\",\n            \"value\": \"<object>\"\n        }\n    ]\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/scim/Groups/:groupId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "scim",
                                "Groups",
                                ":groupId"
                              ],
                              "variable": [
                                {
                                  "key": "groupId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"id\": \"<string>\",\n \"externalId\": \"<string>\",\n \"schemas\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"meta\": {\n  \"resourceType\": \"User\",\n  \"created\": \"eu aliqua nulla\",\n  \"lastModified\": \"Lorem\"\n },\n \"displayName\": \"<string>\",\n \"members\": [\n  {\n   \"$ref\": \"in commodo sint\",\n   \"value\": \"laboris\"\n  },\n  {\n   \"$ref\": \"id eu nostrud amet\",\n   \"value\": \"occaecat anim\"\n  }\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Delete group",
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scim/Groups/:groupId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scim", "Groups", ":groupId"],
                          "variable": [
                            {
                              "key": "groupId",
                              "value": "<string>",
                              "description": "(Required) The updated group ID"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "No Content",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/scim/Groups/:groupId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "scim",
                                "Groups",
                                ":groupId"
                              ],
                              "variable": [
                                {
                                  "key": "groupId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Get all groups",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scim/Groups?startIndex=<number>&count=<number>&filter=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scim", "Groups"],
                      "query": [
                        {
                          "key": "startIndex",
                          "value": "<number>"
                        },
                        {
                          "key": "count",
                          "value": "<number>"
                        },
                        {
                          "key": "filter",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scim/Groups?startIndex=<number>&count=<number>&filter=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scim", "Groups"],
                          "query": [
                            {
                              "key": "startIndex",
                              "value": "<number>"
                            },
                            {
                              "key": "count",
                              "value": "<number>"
                            },
                            {
                              "key": "filter",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"schemas\": [\n  \"laboris do\",\n  \"nostrud\"\n ],\n \"Resources\": [\n  {\n   \"id\": \"ullamco exercitation\",\n   \"externalId\": \"ullamco\",\n   \"schemas\": [\n    \"proident culpa reprehenderit in\",\n    \"qui ad ipsum non\"\n   ],\n   \"meta\": {\n    \"resourceType\": \"User\",\n    \"created\": \"culpa occaecat officia dolore\",\n    \"lastModified\": \"id incididunt Excepteur laboris\"\n   },\n   \"displayName\": \"sit reprehenderit laborum nisi commodo\",\n   \"members\": [\n    {\n     \"$ref\": \"deserunt dolor laboris nisi\",\n     \"value\": \"nostrud pariatur\"\n    },\n    {\n     \"$ref\": \"laboris\",\n     \"value\": \"do aute veniam \"\n    }\n   ]\n  },\n  {\n   \"id\": \"cupidatat veniam\",\n   \"externalId\": \"consectetur elit\",\n   \"schemas\": [\n    \"non anim ullamco tempor\",\n    \"anim\"\n   ],\n   \"meta\": {\n    \"resourceType\": \"User\",\n    \"created\": \"veniam reprehenderit esse et\",\n    \"lastModified\": \"nisi in\"\n   },\n   \"displayName\": \"do\",\n   \"members\": [\n    {\n     \"$ref\": \"reprehenderit ea\",\n     \"value\": \"aute\"\n    },\n    {\n     \"$ref\": \"Excep\",\n     \"value\": \"minim dolor amet irure\"\n    }\n   ]\n  }\n ],\n \"totalResults\": -11185759.728279844,\n \"startIndex\": 78190185.46321881,\n \"itemsPerPage\": 78133790.73793906\n}"
                    }
                  ]
                },
                {
                  "name": "Add a new group",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<string>\",\n    \"externalId\": \"<string>\",\n    \"schemas\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"meta\": {\n        \"resourceType\": \"User\",\n        \"created\": \"adipisicing esse ullamco\",\n        \"lastModified\": \"et aliquip do\"\n    },\n    \"displayName\": \"<string>\",\n    \"members\": [\n        {\n            \"$ref\": \"ipsum mollit in Ut\",\n            \"value\": \"id laboris\"\n        },\n        {\n            \"$ref\": \"vo\",\n            \"value\": \"laborum nulla non\"\n        }\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scim/Groups",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scim", "Groups"]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<string>\",\n    \"externalId\": \"<string>\",\n    \"schemas\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"meta\": {\n        \"resourceType\": \"User\",\n        \"created\": \"eu aliqua nulla\",\n        \"lastModified\": \"Lorem\"\n    },\n    \"displayName\": \"<string>\",\n    \"members\": [\n        {\n            \"$ref\": \"in commodo sint\",\n            \"value\": \"laboris\"\n        },\n        {\n            \"$ref\": \"id eu nostrud amet\",\n            \"value\": \"occaecat anim\"\n        }\n    ]\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scim/Groups",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scim", "Groups"]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"id\": \"<string>\",\n \"externalId\": \"<string>\",\n \"schemas\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"meta\": {\n  \"resourceType\": \"User\",\n  \"created\": \"eu aliqua nulla\",\n  \"lastModified\": \"Lorem\"\n },\n \"displayName\": \"<string>\",\n \"members\": [\n  {\n   \"$ref\": \"in commodo sint\",\n   \"value\": \"laboris\"\n  },\n  {\n   \"$ref\": \"id eu nostrud amet\",\n   \"value\": \"occaecat anim\"\n  }\n ]\n}"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "repeaters",
          "item": [
            {
              "name": "{repeater Id}",
              "item": [
                {
                  "name": "network",
                  "item": [
                    {
                      "name": "Get repeater network test output",
                      "request": {
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization",
                              "type": "string"
                            },
                            {
                              "key": "value",
                              "value": true,
                              "type": "boolean"
                            },
                            {
                              "key": "in",
                              "value": "header",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId/network",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "repeaters",
                            ":repeaterId",
                            "network"
                          ],
                          "variable": [
                            {
                              "key": "repeaterId",
                              "value": "<string>",
                              "description": "(Required) The requested repeater ID"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: apikey",
                                "key": "Authorization",
                                "value": "<API Key>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId/network",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "repeaters",
                                ":repeaterId",
                                "network"
                              ],
                              "variable": [
                                {
                                  "key": "repeaterId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"repeaterId\": \"aute eu\",\n \"urls\": \"occaecat eiusmod incididunt irure\",\n \"state\": \"error\",\n \"output\": \"dolore ut sed ex\",\n \"errorMessage\": \"labo\",\n \"runAt\": \"2012-01-27T08:26:16.193Z\"\n}"
                        },
                        {
                          "name": "No Content",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: apikey",
                                "key": "Authorization",
                                "value": "<API Key>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId/network",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "repeaters",
                                ":repeaterId",
                                "network"
                              ],
                              "variable": [
                                {
                                  "key": "repeaterId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: apikey",
                                "key": "Authorization",
                                "value": "<API Key>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId/network",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "repeaters",
                                ":repeaterId",
                                "network"
                              ],
                              "variable": [
                                {
                                  "key": "repeaterId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                        },
                        {
                          "name": "Forbidden",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: apikey",
                                "key": "Authorization",
                                "value": "<API Key>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId/network",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "repeaters",
                                ":repeaterId",
                                "network"
                              ],
                              "variable": [
                                {
                                  "key": "repeaterId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"name\": \"FORBIDDEN\",\n \"message\": \"nostrud\",\n \"status\": 403,\n \"errors\": [\n  {\n   \"name\": \"tempor magna amet sed\",\n   \"message\": \"in Ut\"\n  },\n  {\n   \"name\": \"culpa Excepteur\",\n   \"message\": \"deserunt\"\n  }\n ],\n \"stack\": [\n  \"anim nisi velit\",\n  \"Ut laborum\"\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Update urls for network test",
                      "request": {
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization",
                              "type": "string"
                            },
                            {
                              "key": "value",
                              "value": true,
                              "type": "boolean"
                            },
                            {
                              "key": "in",
                              "value": "header",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"urls\": [\n        \"<url>\"\n    ]\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId/network",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "repeaters",
                            ":repeaterId",
                            "network"
                          ],
                          "variable": [
                            {
                              "key": "repeaterId",
                              "value": "<string>",
                              "description": "(Required) The requested repeater ID"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: apikey",
                                "key": "Authorization",
                                "value": "<API Key>"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"urls\": [\n        \"<url>\"\n    ]\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId/network",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "repeaters",
                                ":repeaterId",
                                "network"
                              ],
                              "variable": [
                                {
                                  "key": "repeaterId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                        },
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: apikey",
                                "key": "Authorization",
                                "value": "<API Key>"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"urls\": [\n        \"<url>\"\n    ]\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId/network",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "repeaters",
                                ":repeaterId",
                                "network"
                              ],
                              "variable": [
                                {
                                  "key": "repeaterId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"repeaterId\": \"aute eu\",\n \"urls\": \"occaecat eiusmod incididunt irure\",\n \"state\": \"error\",\n \"output\": \"dolore ut sed ex\",\n \"errorMessage\": \"labo\",\n \"runAt\": \"2012-01-27T08:26:16.193Z\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Update urls for network test and run test",
                      "request": {
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization",
                              "type": "string"
                            },
                            {
                              "key": "value",
                              "value": true,
                              "type": "boolean"
                            },
                            {
                              "key": "in",
                              "value": "header",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"urls\": [\n        \"<url>\"\n    ]\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId/network/test",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "repeaters",
                            ":repeaterId",
                            "network",
                            "test"
                          ],
                          "variable": [
                            {
                              "key": "repeaterId",
                              "value": "<string>",
                              "description": "(Required) The requested repeater ID"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: apikey",
                                "key": "Authorization",
                                "value": "<API Key>"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"urls\": [\n        \"<url>\"\n    ]\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId/network/test",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "repeaters",
                                ":repeaterId",
                                "network",
                                "test"
                              ],
                              "variable": [
                                {
                                  "key": "repeaterId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                        },
                        {
                          "name": "Forbidden",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: apikey",
                                "key": "Authorization",
                                "value": "<API Key>"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"urls\": [\n        \"<url>\"\n    ]\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId/network/test",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "repeaters",
                                ":repeaterId",
                                "network",
                                "test"
                              ],
                              "variable": [
                                {
                                  "key": "repeaterId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"name\": \"FORBIDDEN\",\n \"message\": \"nostrud\",\n \"status\": 403,\n \"errors\": [\n  {\n   \"name\": \"tempor magna amet sed\",\n   \"message\": \"in Ut\"\n  },\n  {\n   \"name\": \"culpa Excepteur\",\n   \"message\": \"deserunt\"\n  }\n ],\n \"stack\": [\n  \"anim nisi velit\",\n  \"Ut laborum\"\n ]\n}"
                        },
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: apikey",
                                "key": "Authorization",
                                "value": "<API Key>"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"urls\": [\n        \"<url>\"\n    ]\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId/network/test",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "repeaters",
                                ":repeaterId",
                                "network",
                                "test"
                              ],
                              "variable": [
                                {
                                  "key": "repeaterId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"repeaterId\": \"aute eu\",\n \"urls\": \"occaecat eiusmod incididunt irure\",\n \"state\": \"error\",\n \"output\": \"dolore ut sed ex\",\n \"errorMessage\": \"labo\",\n \"runAt\": \"2012-01-27T08:26:16.193Z\"\n}"
                        },
                        {
                          "name": "Conflict",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: apikey",
                                "key": "Authorization",
                                "value": "<API Key>"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"urls\": [\n        \"<url>\"\n    ]\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId/network/test",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "repeaters",
                                ":repeaterId",
                                "network",
                                "test"
                              ],
                              "variable": [
                                {
                                  "key": "repeaterId"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"name\": \"CONFLICT\",\n \"message\": \"irure elit pariatur velit mollit\",\n \"status\": 409,\n \"errors\": [\n  {\n   \"name\": \"anim Duis et elit sit\",\n   \"message\": \"in non aliqua nulla\"\n  },\n  {\n   \"name\": \"eiusmod ex ut \",\n   \"message\": \"id aute deserunt\"\n  }\n ],\n \"stack\": [\n  \"aliqua occaecat ea\",\n  \"dolor laborum ut\"\n ]\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Get a single repeater",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "repeaters", ":repeaterId"],
                      "variable": [
                        {
                          "key": "repeaterId",
                          "value": "<string>",
                          "description": "(Required) The requested repeater ID"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Not Found",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "repeaters", ":repeaterId"],
                          "variable": [
                            {
                              "key": "repeaterId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                    },
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "repeaters", ":repeaterId"],
                          "variable": [
                            {
                              "key": "repeaterId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"id\": \"amet occaecat non Lore\",\n \"active\": false,\n \"name\": \"consectetur \",\n \"description\": \"et nisi Lorem ea\",\n \"lastSyncAt\": \"2018-10-27T04:52:13.007Z\",\n \"lastUsedVersion\": \"4.1.1\",\n \"localScriptsUsed\": false,\n \"status\": \"disconnected\",\n \"updatedAt\": \"1986-07-30T15:47:18.250Z\",\n \"createdAt\": \"1961-04-21T13:08:32.414Z\",\n \"scripts\": [\n  {\n   \"id\": \"commo\",\n   \"name\": \"non adipisicing dolor\",\n   \"description\": \"laboris eu enim\",\n   \"updatedAt\": \"2013-01-31T22:49:06.485Z\",\n   \"createdAt\": \"1967-06-01T08:48:25.782Z\",\n   \"host\": \"aliquip nostrud veniam\"\n  },\n  {\n   \"id\": \"ad labo\",\n   \"name\": \"incididun\",\n   \"description\": \"Ut occaecat\",\n   \"updatedAt\": \"1998-05-30T07:35:26.146Z\",\n   \"createdAt\": \"1952-02-03T02:17:08.903Z\",\n   \"host\": \"dolore consequat ad dolor nisi\"\n  }\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "Update a repeater",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"scripts\": [\n        {\n            \"scriptId\": \"<string>\",\n            \"host\": \"<string>\"\n        },\n        {\n            \"scriptId\": \"<string>\",\n            \"host\": \"<string>\"\n        }\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "repeaters", ":repeaterId"],
                      "variable": [
                        {
                          "key": "repeaterId",
                          "value": "<string>",
                          "description": "(Required) The updated repeater ID"
                        }
                      ]
                    },
                    "description": "Updates title or description of an existing repeater."
                  },
                  "response": [
                    {
                      "name": "Not Found",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"scripts\": [\n        {\n            \"scriptId\": \"<string>\",\n            \"host\": \"<string>\"\n        },\n        {\n            \"scriptId\": \"<string>\",\n            \"host\": \"<string>\"\n        }\n    ]\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "repeaters", ":repeaterId"],
                          "variable": [
                            {
                              "key": "repeaterId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                    },
                    {
                      "name": "Repeater has been updated.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"scripts\": [\n        {\n            \"scriptId\": \"<string>\",\n            \"host\": \"<string>\"\n        },\n        {\n            \"scriptId\": \"<string>\",\n            \"host\": \"<string>\"\n        }\n    ]\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "repeaters", ":repeaterId"],
                          "variable": [
                            {
                              "key": "repeaterId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Repeater Is Busy",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"scripts\": [\n        {\n            \"scriptId\": \"<string>\",\n            \"host\": \"<string>\"\n        },\n        {\n            \"scriptId\": \"<string>\",\n            \"host\": \"<string>\"\n        }\n    ]\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "repeaters", ":repeaterId"],
                          "variable": [
                            {
                              "key": "repeaterId"
                            }
                          ]
                        }
                      },
                      "status": "Conflict",
                      "code": 409,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"CONFLICT\",\n \"message\": \"irure elit pariatur velit mollit\",\n \"status\": 409,\n \"errors\": [\n  {\n   \"name\": \"anim Duis et elit sit\",\n   \"message\": \"in non aliqua nulla\"\n  },\n  {\n   \"name\": \"eiusmod ex ut \",\n   \"message\": \"id aute deserunt\"\n  }\n ],\n \"stack\": [\n  \"aliqua occaecat ea\",\n  \"dolor laborum ut\"\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "Remove a repeater",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "repeaters", ":repeaterId"],
                      "variable": [
                        {
                          "key": "repeaterId",
                          "value": "<string>",
                          "description": "(Required) The removed repeater ID"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Not Found",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "repeaters", ":repeaterId"],
                          "variable": [
                            {
                              "key": "repeaterId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                    },
                    {
                      "name": "Repeater Is Busy",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "repeaters", ":repeaterId"],
                          "variable": [
                            {
                              "key": "repeaterId"
                            }
                          ]
                        }
                      },
                      "status": "Conflict",
                      "code": 409,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"CONFLICT\",\n \"message\": \"irure elit pariatur velit mollit\",\n \"status\": 409,\n \"errors\": [\n  {\n   \"name\": \"anim Duis et elit sit\",\n   \"message\": \"in non aliqua nulla\"\n  },\n  {\n   \"name\": \"eiusmod ex ut \",\n   \"message\": \"id aute deserunt\"\n  }\n ],\n \"stack\": [\n  \"aliqua occaecat ea\",\n  \"dolor laborum ut\"\n ]\n}"
                    },
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/repeaters/:repeaterId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "repeaters", ":repeaterId"],
                          "variable": [
                            {
                              "key": "repeaterId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "Get available repeaters",
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "Authorization",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": true,
                      "type": "boolean"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/repeaters",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "repeaters"]
                },
                "description": "Returns a list of all the repeaters available     to the currently logged-in user."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/repeaters",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "repeaters"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"id\": \"con\",\n  \"active\": false,\n  \"name\": \"reprehenderit\",\n  \"description\": \"ullamco exercitation nisi consectetur\",\n  \"lastSyncAt\": \"1996-06-14T11:12:04.985Z\",\n  \"lastUsedVersion\": \"4.1.1\",\n  \"localScriptsUsed\": false,\n  \"status\": \"disconnected\",\n  \"updatedAt\": \"1964-04-15T00:35:00.832Z\",\n  \"createdAt\": \"1971-10-24T18:11:41.659Z\",\n  \"scripts\": [\n   {\n    \"id\": \"nisi in \",\n    \"name\": \"officia est elit\",\n    \"description\": \"eu reprehenderit occaecat enim quis\",\n    \"updatedAt\": \"2009-01-21T03:03:01.824Z\",\n    \"createdAt\": \"1979-10-11T18:36:30.933Z\",\n    \"host\": \"veniam adipisicing nostrud qui\"\n   },\n   {\n    \"id\": \"fugiat\",\n    \"name\": \"adipisicing\",\n    \"description\": \"aute dolore\",\n    \"updatedAt\": \"1965-02-26T06:45:49.711Z\",\n    \"createdAt\": \"1985-02-02T21:34:19.521Z\",\n    \"host\": \"tempor\"\n   }\n  ]\n },\n {\n  \"id\": \"pari\",\n  \"active\": true,\n  \"name\": \"fugiat pariatur dolore\",\n  \"description\": \"veniam\",\n  \"lastSyncAt\": \"1979-03-13T14:05:30.926Z\",\n  \"lastUsedVersion\": \"4.1.1\",\n  \"localScriptsUsed\": false,\n  \"status\": \"disconnected\",\n  \"updatedAt\": \"1944-12-17T09:37:46.867Z\",\n  \"createdAt\": \"1970-11-25T20:10:47.245Z\",\n  \"scripts\": [\n   {\n    \"id\": \"irure\",\n    \"name\": \"dolor\",\n    \"description\": \"incididunt in deserunt dolore\",\n    \"updatedAt\": \"1944-10-09T11:34:39.454Z\",\n    \"createdAt\": \"1975-01-09T15:35:58.668Z\",\n    \"host\": \"velit amet aliqua\"\n   },\n   {\n    \"id\": \"dol\",\n    \"name\": \"et dolore\",\n    \"description\": \"sit do\",\n    \"updatedAt\": \"1990-02-16T11:53:23.463Z\",\n    \"createdAt\": \"2007-12-08T18:59:19.854Z\",\n    \"host\": \"Lorem sed\"\n   }\n  ]\n }\n]"
                }
              ]
            },
            {
              "name": "Add a new repeater",
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "Authorization",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": true,
                      "type": "boolean"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"scripts\": [\n        {\n            \"scriptId\": \"<string>\",\n            \"host\": \"<string>\"\n        },\n        {\n            \"scriptId\": \"<string>\",\n            \"host\": \"<string>\"\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/repeaters",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "repeaters"]
                },
                "description": "Registers a new repeater and returns its ID."
              },
              "response": [
                {
                  "name": "Repeater With This Name Already Exists",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"scripts\": [\n        {\n            \"scriptId\": \"<string>\",\n            \"host\": \"<string>\"\n        },\n        {\n            \"scriptId\": \"<string>\",\n            \"host\": \"<string>\"\n        }\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/repeaters",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "repeaters"]
                    }
                  },
                  "status": "Conflict",
                  "code": 409,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"CONFLICT\",\n \"message\": \"irure elit pariatur velit mollit\",\n \"status\": 409,\n \"errors\": [\n  {\n   \"name\": \"anim Duis et elit sit\",\n   \"message\": \"in non aliqua nulla\"\n  },\n  {\n   \"name\": \"eiusmod ex ut \",\n   \"message\": \"id aute deserunt\"\n  }\n ],\n \"stack\": [\n  \"aliqua occaecat ea\",\n  \"dolor laborum ut\"\n ]\n}"
                },
                {
                  "name": "Created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"scripts\": [\n        {\n            \"scriptId\": \"<string>\",\n            \"host\": \"<string>\"\n        },\n        {\n            \"scriptId\": \"<string>\",\n            \"host\": \"<string>\"\n        }\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/repeaters",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "repeaters"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"id\": \"amet occaecat non Lore\",\n \"active\": false,\n \"name\": \"consectetur \",\n \"description\": \"et nisi Lorem ea\",\n \"lastSyncAt\": \"2018-10-27T04:52:13.007Z\",\n \"lastUsedVersion\": \"4.1.1\",\n \"localScriptsUsed\": false,\n \"status\": \"disconnected\",\n \"updatedAt\": \"1986-07-30T15:47:18.250Z\",\n \"createdAt\": \"1961-04-21T13:08:32.414Z\",\n \"scripts\": [\n  {\n   \"id\": \"commo\",\n   \"name\": \"non adipisicing dolor\",\n   \"description\": \"laboris eu enim\",\n   \"updatedAt\": \"2013-01-31T22:49:06.485Z\",\n   \"createdAt\": \"1967-06-01T08:48:25.782Z\",\n   \"host\": \"aliquip nostrud veniam\"\n  },\n  {\n   \"id\": \"ad labo\",\n   \"name\": \"incididun\",\n   \"description\": \"Ut occaecat\",\n   \"updatedAt\": \"1998-05-30T07:35:26.146Z\",\n   \"createdAt\": \"1952-02-03T02:17:08.903Z\",\n   \"host\": \"dolore consequat ad dolor nisi\"\n  }\n ]\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "scans",
          "item": [
            {
              "name": "templates",
              "item": [
                {
                  "name": "{template Id}",
                  "item": [
                    {
                      "name": "settings",
                      "item": [
                        {
                          "name": "Get a template sharing settings",
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "<Bearer Token>",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/scans/templates/:templateId/settings",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "scans",
                                "templates",
                                ":templateId",
                                "settings"
                              ],
                              "variable": [
                                {
                                  "key": "templateId",
                                  "value": "<string>",
                                  "description": "(Required) The requested scan template ID"
                                }
                              ]
                            }
                          },
                          "response": [
                            {
                              "name": "Success",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/scans/templates/:templateId/settings",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "scans",
                                    "templates",
                                    ":templateId",
                                    "settings"
                                  ],
                                  "variable": [
                                    {
                                      "key": "templateId"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n \"permissions\": [\n  {\n   \"assignmentId\": \"ut culpa m\",\n   \"mode\": \"template:edit\",\n   \"assignmentType\": \"user\"\n  },\n  {\n   \"assignmentId\": \"ut velit in minim\",\n   \"mode\": \"template:view\",\n   \"assignmentType\": \"user\"\n  }\n ],\n \"accessibility\": \"private\"\n}"
                            }
                          ]
                        },
                        {
                          "name": "Update a template sharing settings",
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "<Bearer Token>",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"permissions\": [\n        {\n            \"assignmentId\": \"et aute\",\n            \"mode\": \"template:edit\",\n            \"assignmentType\": \"group\"\n        },\n        {\n            \"assignmentId\": \"sit cillum minim\",\n            \"mode\": \"template:view\",\n            \"assignmentType\": \"user\"\n        }\n    ],\n    \"accessibility\": \"private\"\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/scans/templates/:templateId/settings",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "scans",
                                "templates",
                                ":templateId",
                                "settings"
                              ],
                              "variable": [
                                {
                                  "key": "templateId",
                                  "value": "<string>",
                                  "description": "(Required) The updated scan template ID"
                                }
                              ]
                            }
                          },
                          "response": [
                            {
                              "name": "Success",
                              "originalRequest": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "description": "Added as a part of security scheme: bearer",
                                    "key": "Authorization",
                                    "value": "Bearer <token>"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"permissions\": [\n        {\n            \"assignmentId\": \"occaecat cillum labore\",\n            \"mode\": \"template:view\",\n            \"assignmentType\": \"group\"\n        },\n        {\n            \"assignmentId\": \"laborum amet \",\n            \"mode\": \"template:view\",\n            \"assignmentType\": \"user\"\n        }\n    ],\n    \"accessibility\": \"private\"\n}"
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/scans/templates/:templateId/settings",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "scans",
                                    "templates",
                                    ":templateId",
                                    "settings"
                                  ],
                                  "variable": [
                                    {
                                      "key": "templateId"
                                    }
                                  ]
                                }
                              },
                              "status": "No Content",
                              "code": 204,
                              "_postman_previewlanguage": "text",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "text/plain"
                                }
                              ],
                              "cookie": [],
                              "body": ""
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Get a single template",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "<Bearer Token>",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/templates/:templateId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "scans",
                            "templates",
                            ":templateId"
                          ],
                          "variable": [
                            {
                              "key": "templateId",
                              "value": "<string>",
                              "description": "(Required) The requested scan template ID"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/scans/templates/:templateId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "scans",
                                "templates",
                                ":templateId"
                              ],
                              "variable": [
                                {
                                  "key": "templateId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"name\": \"nulla do adipisicing ipsum\",\n \"accessibility\": \"private\",\n \"permissions\": [\n  {\n   \"assignmentId\": \"dolore\",\n   \"mode\": \"template:edit\",\n   \"assignmentType\": \"group\"\n  },\n  {\n   \"assignmentId\": \"id\",\n   \"mode\": \"template:edit\",\n   \"assignmentType\": \"group\"\n  }\n ],\n \"id\": \"cupidatat aute\",\n \"description\": \"nostrud cupidatat minim enim\",\n \"owner\": {\n  \"id\": \"minim ull\",\n  \"firstName\": \"occaecat aliquip offici\",\n  \"lastName\": \"pariatur sit\"\n },\n \"tests\": [\n  \"nosql\"\n ],\n \"repositories\": [\n  {\n   \"id\": \"NeuraLegion/nexploit-cli\",\n   \"service\": \"github\",\n   \"name\": \"nexploit-cli\",\n   \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n  },\n  {\n   \"id\": \"NeuraLegion/nexploit-cli\",\n   \"service\": \"github\",\n   \"name\": \"nexploit-cli\",\n   \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n  }\n ],\n \"discoveryTypes\": [\n  \"oas\",\n  \"archive\"\n ],\n \"poolSize\": 88684249.32983321,\n \"crawlerUrls\": [\n  \"http://Rsm.xeibY-uqHhmfFYx7hXR-s3.CcEz1pOppLUrCp+a8S6Ps7.Be7s8X7wMK5wI+y-Hu68Yozg1dni\",\n  \"https://JbKALt.anR+9QbHyzDQ6BLrgsZbU\"\n ],\n \"extraHosts\": {},\n \"attackParamLocations\": [\n  \"artifical-fragment\",\n  \"artifical-query\"\n ],\n \"headers\": [\n  {\n   \"name\": \"Authorization\",\n   \"value\": \"Bearer token\",\n   \"mergeStrategy\": \"replace\"\n  },\n  {\n   \"name\": \"Authorization\",\n   \"value\": \"Bearer token\",\n   \"mergeStrategy\": \"replace\"\n  }\n ],\n \"fileId\": \"anim enim consectetur\",\n \"hostsFilter\": [\n  \"hABnfFEwEpOE.wt\",\n  \"iaQWbSqsLKpiZHPqZA.efy\"\n ],\n \"repeaters\": [\n  \"veniam incididunt pariatur laboris\",\n  \"v\"\n ],\n \"smart\": false,\n \"skipStaticParams\": true,\n \"exclusions\": {\n  \"urls\": [\n   \"irure dolore\",\n   \"sunt do officia aliqua\"\n  ],\n  \"params\": [\n   \"reprehenderit magna irure Lorem\",\n   \"sed ex incididunt ipsu\"\n  ]\n },\n \"createdAt\": \"1995-04-06T05:48:34.195Z\",\n \"updatedAt\": \"1959-09-08T23:57:05.250Z\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Update a template",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "<Bearer Token>",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"<string>\",\n    \"tests\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"repositories\": [\n        {\n            \"id\": \"<string>\",\n            \"service\": \"<string>\",\n            \"name\": \"<string>\",\n            \"uri\": \"<uri>\"\n        },\n        {\n            \"id\": \"<string>\",\n            \"service\": \"<string>\",\n            \"name\": \"<string>\",\n            \"uri\": \"<uri>\"\n        }\n    ],\n    \"discoveryTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"poolSize\": \"<number>\",\n    \"crawlerUrls\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"attackParamLocations\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"extraHosts\": \"<object>\",\n    \"headers\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\",\n            \"mergeStrategy\": \"replace\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\",\n            \"mergeStrategy\": \"replace\"\n        }\n    ],\n    \"fileId\": \"<string>\",\n    \"hostsFilter\": [\n        \"<hostname>\",\n        \"<hostname>\"\n    ],\n    \"repeaters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"smart\": \"<boolean>\",\n    \"skipStaticParams\": \"<boolean>\",\n    \"ignore\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"projectId\": \"<string>\",\n    \"exclusions\": {\n        \"urls\": [\n            \"<string>\"\n        ],\n        \"params\": [\n            \"<string>\"\n        ]\n    },\n    \"slowEpTimeout\": \"<number>\",\n    \"payloadExtractor\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"correlationIdXPath\": \"<string>\",\n    \"description\": \"<string>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/templates/:templateId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "scans",
                            "templates",
                            ":templateId"
                          ],
                          "variable": [
                            {
                              "key": "templateId",
                              "value": "<string>",
                              "description": "(Required) The updated scan template ID"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "In case of success, returns the modified template object.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"name\": \"<string>\",\n    \"tests\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"repositories\": [\n        {\n            \"id\": \"NeuraLegion/nexploit-cli\",\n            \"service\": \"github\",\n            \"name\": \"nexploit-cli\",\n            \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n        },\n        {\n            \"id\": \"NeuraLegion/nexploit-cli\",\n            \"service\": \"github\",\n            \"name\": \"nexploit-cli\",\n            \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n        }\n    ],\n    \"discoveryTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"poolSize\": \"<number>\",\n    \"crawlerUrls\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"attackParamLocations\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"extraHosts\": \"<object>\",\n    \"headers\": [\n        {\n            \"name\": \"Authorization\",\n            \"value\": \"Bearer token\",\n            \"mergeStrategy\": \"replace\"\n        },\n        {\n            \"name\": \"Authorization\",\n            \"value\": \"Bearer token\",\n            \"mergeStrategy\": \"replace\"\n        }\n    ],\n    \"fileId\": \"<string>\",\n    \"hostsFilter\": [\n        \"<hostname>\",\n        \"<hostname>\"\n    ],\n    \"repeaters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"smart\": \"<boolean>\",\n    \"skipStaticParams\": \"<boolean>\",\n    \"ignore\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"projectId\": \"<string>\",\n    \"exclusions\": {\n        \"urls\": [\n            \"<string>\"\n        ],\n        \"params\": [\n            \"<string>\"\n        ]\n    },\n    \"slowEpTimeout\": \"<number>\",\n    \"payloadExtractor\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"correlationIdXPath\": \"<string>\",\n    \"description\": \"<string>\"\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/scans/templates/:templateId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "scans",
                                "templates",
                                ":templateId"
                              ],
                              "variable": [
                                {
                                  "key": "templateId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"name\": \"nulla do adipisicing ipsum\",\n \"accessibility\": \"private\",\n \"permissions\": [\n  {\n   \"assignmentId\": \"dolore\",\n   \"mode\": \"template:edit\",\n   \"assignmentType\": \"group\"\n  },\n  {\n   \"assignmentId\": \"id\",\n   \"mode\": \"template:edit\",\n   \"assignmentType\": \"group\"\n  }\n ],\n \"id\": \"cupidatat aute\",\n \"description\": \"nostrud cupidatat minim enim\",\n \"owner\": {\n  \"id\": \"minim ull\",\n  \"firstName\": \"occaecat aliquip offici\",\n  \"lastName\": \"pariatur sit\"\n },\n \"tests\": [\n  \"nosql\"\n ],\n \"repositories\": [\n  {\n   \"id\": \"NeuraLegion/nexploit-cli\",\n   \"service\": \"github\",\n   \"name\": \"nexploit-cli\",\n   \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n  },\n  {\n   \"id\": \"NeuraLegion/nexploit-cli\",\n   \"service\": \"github\",\n   \"name\": \"nexploit-cli\",\n   \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n  }\n ],\n \"discoveryTypes\": [\n  \"oas\",\n  \"archive\"\n ],\n \"poolSize\": 88684249.32983321,\n \"crawlerUrls\": [\n  \"http://Rsm.xeibY-uqHhmfFYx7hXR-s3.CcEz1pOppLUrCp+a8S6Ps7.Be7s8X7wMK5wI+y-Hu68Yozg1dni\",\n  \"https://JbKALt.anR+9QbHyzDQ6BLrgsZbU\"\n ],\n \"extraHosts\": {},\n \"attackParamLocations\": [\n  \"artifical-fragment\",\n  \"artifical-query\"\n ],\n \"headers\": [\n  {\n   \"name\": \"Authorization\",\n   \"value\": \"Bearer token\",\n   \"mergeStrategy\": \"replace\"\n  },\n  {\n   \"name\": \"Authorization\",\n   \"value\": \"Bearer token\",\n   \"mergeStrategy\": \"replace\"\n  }\n ],\n \"fileId\": \"anim enim consectetur\",\n \"hostsFilter\": [\n  \"hABnfFEwEpOE.wt\",\n  \"iaQWbSqsLKpiZHPqZA.efy\"\n ],\n \"repeaters\": [\n  \"veniam incididunt pariatur laboris\",\n  \"v\"\n ],\n \"smart\": false,\n \"skipStaticParams\": true,\n \"exclusions\": {\n  \"urls\": [\n   \"irure dolore\",\n   \"sunt do officia aliqua\"\n  ],\n  \"params\": [\n   \"reprehenderit magna irure Lorem\",\n   \"sed ex incididunt ipsu\"\n  ]\n },\n \"createdAt\": \"1995-04-06T05:48:34.195Z\",\n \"updatedAt\": \"1959-09-08T23:57:05.250Z\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Delete a template",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "<Bearer Token>",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/templates/:templateId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "scans",
                            "templates",
                            ":templateId"
                          ],
                          "variable": [
                            {
                              "key": "templateId",
                              "value": "<string>",
                              "description": "(Required) The deleted scan template ID"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/scans/templates/:templateId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "scans",
                                "templates",
                                ":templateId"
                              ],
                              "variable": [
                                {
                                  "key": "templateId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Get all templates",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans/templates",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans", "templates"]
                    },
                    "description": "Returns a list of all scan templates       available to the currently logged-in user."
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/templates",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", "templates"]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n {\n  \"name\": \"occaecat laborum ut dolore aliquip\",\n  \"accessibility\": \"private\",\n  \"permissions\": [\n   {\n    \"assignmentId\": \"dolore consectetur\",\n    \"mode\": \"template:edit\",\n    \"assignmentType\": \"user\"\n   },\n   {\n    \"assignmentId\": \"dolore\",\n    \"mode\": \"template:view\",\n    \"assignmentType\": \"user\"\n   }\n  ],\n  \"id\": \"officia Duis reprehenderit dolore consectetur\",\n  \"description\": \"\",\n  \"owner\": {\n   \"id\": \"e\",\n   \"firstName\": \"ad \",\n   \"lastName\": \"dolor incididunt velit\"\n  },\n  \"tests\": [\n   \"hrs\"\n  ],\n  \"repositories\": [\n   {\n    \"id\": \"NeuraLegion/nexploit-cli\",\n    \"service\": \"github\",\n    \"name\": \"nexploit-cli\",\n    \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n   },\n   {\n    \"id\": \"NeuraLegion/nexploit-cli\",\n    \"service\": \"github\",\n    \"name\": \"nexploit-cli\",\n    \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n   }\n  ],\n  \"discoveryTypes\": [\n   \"oas\",\n   \"archive\"\n  ],\n  \"poolSize\": 91037488.56963933,\n  \"crawlerUrls\": [\n   \"https://XwDAbJXpsje.gnois+9tJQLUlNbnbnwspVsF0R5fVG5QdPIgWgT\",\n   \"http://XxvAeUiJNiqHYugEGNgMkHnKgB.iuguh\"\n  ],\n  \"extraHosts\": {},\n  \"attackParamLocations\": [\n   \"header\",\n   \"path\"\n  ],\n  \"headers\": [\n   {\n    \"name\": \"Authorization\",\n    \"value\": \"Bearer token\",\n    \"mergeStrategy\": \"replace\"\n   },\n   {\n    \"name\": \"Authorization\",\n    \"value\": \"Bearer token\",\n    \"mergeStrategy\": \"replace\"\n   }\n  ],\n  \"fileId\": \"et \",\n  \"hostsFilter\": [\n   \"uoMuUBFvWZQCfdLKLiMR.wbzv\",\n   \"E.rm\"\n  ],\n  \"repeaters\": [\n   \"magna\",\n   \"minim laborum et culpa\"\n  ],\n  \"smart\": false,\n  \"skipStaticParams\": true,\n  \"exclusions\": {\n   \"urls\": [\n    \"in in dolore non\",\n    \"irure minim\"\n   ],\n   \"params\": [\n    \"quis id aliquip aliqua\",\n    \"in incididunt laborum sint\"\n   ]\n  },\n  \"createdAt\": \"1953-12-22T01:05:24.668Z\",\n  \"updatedAt\": \"1969-05-10T07:41:43.332Z\"\n },\n {\n  \"name\": \"dolore\",\n  \"accessibility\": \"private\",\n  \"permissions\": [\n   {\n    \"assignmentId\": \"Excepteur\",\n    \"mode\": \"template:view\",\n    \"assignmentType\": \"user\"\n   },\n   {\n    \"assignmentId\": \"amet incididunt voluptate \",\n    \"mode\": \"template:edit\",\n    \"assignmentType\": \"user\"\n   }\n  ],\n  \"id\": \"incididunt ipsum nostrud ex\",\n  \"description\": \"Excepteur dolore voluptate\",\n  \"owner\": {\n   \"id\": \"minim cu\",\n   \"firstName\": \"aute volup\",\n   \"lastName\": \"in in\"\n  },\n  \"tests\": [\n   \"header_security\"\n  ],\n  \"repositories\": [\n   {\n    \"id\": \"NeuraLegion/nexploit-cli\",\n    \"service\": \"github\",\n    \"name\": \"nexploit-cli\",\n    \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n   },\n   {\n    \"id\": \"NeuraLegion/nexploit-cli\",\n    \"service\": \"github\",\n    \"name\": \"nexploit-cli\",\n    \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n   }\n  ],\n  \"discoveryTypes\": [\n   \"archive\",\n   \"oas\"\n  ],\n  \"poolSize\": -84146885.12097009,\n  \"crawlerUrls\": [\n   \"https://PkDZZrAGgYka.lkkxG3rc,Q122tb9ZXQY0xZCOLrMN5jiRL+T6WhK\",\n   \"https://sQIzpCzbVYfCPwb.akyayuButZOqh5wTIXmqVFjm3cGu2ikRIib-UUd9XAfCQXquqO6xpoFWKEWW\"\n  ],\n  \"extraHosts\": {},\n  \"attackParamLocations\": [\n   \"artifical-fragment\",\n   \"header\"\n  ],\n  \"headers\": [\n   {\n    \"name\": \"Authorization\",\n    \"value\": \"Bearer token\",\n    \"mergeStrategy\": \"replace\"\n   },\n   {\n    \"name\": \"Authorization\",\n    \"value\": \"Bearer token\",\n    \"mergeStrategy\": \"replace\"\n   }\n  ],\n  \"fileId\": \"deserunt\",\n  \"hostsFilter\": [\n   \"qvTBW.qh\",\n   \"dZcVnwxectOUfQctopsKXejLuvdtLoSL.xzbu\"\n  ],\n  \"repeaters\": [\n   \"dolore aliqua sunt anim\",\n   \"dolor aute sed eiusmod ea\"\n  ],\n  \"smart\": false,\n  \"skipStaticParams\": true,\n  \"exclusions\": {\n   \"urls\": [\n    \"sed commodo\",\n    \"qui\"\n   ],\n   \"params\": [\n    \"ipsum pariatur Ut\",\n    \"fugiat consectetur i\"\n   ]\n  },\n  \"createdAt\": \"2020-01-30T12:44:29.385Z\",\n  \"updatedAt\": \"2005-05-18T11:34:05.787Z\"\n }\n]"
                    }
                  ]
                },
                {
                  "name": "Create a new template",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"<string>\",\n    \"tests\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"repositories\": [\n        {\n            \"id\": \"<string>\",\n            \"service\": \"<string>\",\n            \"name\": \"<string>\",\n            \"uri\": \"<uri>\"\n        },\n        {\n            \"id\": \"<string>\",\n            \"service\": \"<string>\",\n            \"name\": \"<string>\",\n            \"uri\": \"<uri>\"\n        }\n    ],\n    \"discoveryTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"poolSize\": \"<number>\",\n    \"crawlerUrls\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"attackParamLocations\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"extraHosts\": \"<object>\",\n    \"headers\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\",\n            \"mergeStrategy\": \"replace\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\",\n            \"mergeStrategy\": \"replace\"\n        }\n    ],\n    \"fileId\": \"<string>\",\n    \"hostsFilter\": [\n        \"<hostname>\",\n        \"<hostname>\"\n    ],\n    \"repeaters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"smart\": \"<boolean>\",\n    \"skipStaticParams\": \"<boolean>\",\n    \"ignore\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"projectId\": \"<string>\",\n    \"exclusions\": {\n        \"urls\": [\n            \"<string>\"\n        ],\n        \"params\": [\n            \"<string>\"\n        ]\n    },\n    \"slowEpTimeout\": \"<number>\",\n    \"payloadExtractor\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"correlationIdXPath\": \"<string>\",\n    \"description\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans/templates",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans", "templates"]
                    },
                    "description": "Creates a new scan template, making the       currently logged-in user its owner."
                  },
                  "response": [
                    {
                      "name": "Created",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"<string>\",\n    \"tests\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"repositories\": [\n        {\n            \"id\": \"NeuraLegion/nexploit-cli\",\n            \"service\": \"github\",\n            \"name\": \"nexploit-cli\",\n            \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n        },\n        {\n            \"id\": \"NeuraLegion/nexploit-cli\",\n            \"service\": \"github\",\n            \"name\": \"nexploit-cli\",\n            \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n        }\n    ],\n    \"discoveryTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"poolSize\": \"<number>\",\n    \"crawlerUrls\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"attackParamLocations\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"extraHosts\": \"<object>\",\n    \"headers\": [\n        {\n            \"name\": \"Authorization\",\n            \"value\": \"Bearer token\",\n            \"mergeStrategy\": \"replace\"\n        },\n        {\n            \"name\": \"Authorization\",\n            \"value\": \"Bearer token\",\n            \"mergeStrategy\": \"replace\"\n        }\n    ],\n    \"fileId\": \"<string>\",\n    \"hostsFilter\": [\n        \"<hostname>\",\n        \"<hostname>\"\n    ],\n    \"repeaters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"smart\": \"<boolean>\",\n    \"skipStaticParams\": \"<boolean>\",\n    \"ignore\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"projectId\": \"<string>\",\n    \"exclusions\": {\n        \"urls\": [\n            \"<string>\"\n        ],\n        \"params\": [\n            \"<string>\"\n        ]\n    },\n    \"slowEpTimeout\": \"<number>\",\n    \"payloadExtractor\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"correlationIdXPath\": \"<string>\",\n    \"description\": \"<string>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/templates",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", "templates"]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"nulla do adipisicing ipsum\",\n \"accessibility\": \"private\",\n \"permissions\": [\n  {\n   \"assignmentId\": \"dolore\",\n   \"mode\": \"template:edit\",\n   \"assignmentType\": \"group\"\n  },\n  {\n   \"assignmentId\": \"id\",\n   \"mode\": \"template:edit\",\n   \"assignmentType\": \"group\"\n  }\n ],\n \"id\": \"cupidatat aute\",\n \"description\": \"nostrud cupidatat minim enim\",\n \"owner\": {\n  \"id\": \"minim ull\",\n  \"firstName\": \"occaecat aliquip offici\",\n  \"lastName\": \"pariatur sit\"\n },\n \"tests\": [\n  \"nosql\"\n ],\n \"repositories\": [\n  {\n   \"id\": \"NeuraLegion/nexploit-cli\",\n   \"service\": \"github\",\n   \"name\": \"nexploit-cli\",\n   \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n  },\n  {\n   \"id\": \"NeuraLegion/nexploit-cli\",\n   \"service\": \"github\",\n   \"name\": \"nexploit-cli\",\n   \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n  }\n ],\n \"discoveryTypes\": [\n  \"oas\",\n  \"archive\"\n ],\n \"poolSize\": 88684249.32983321,\n \"crawlerUrls\": [\n  \"http://Rsm.xeibY-uqHhmfFYx7hXR-s3.CcEz1pOppLUrCp+a8S6Ps7.Be7s8X7wMK5wI+y-Hu68Yozg1dni\",\n  \"https://JbKALt.anR+9QbHyzDQ6BLrgsZbU\"\n ],\n \"extraHosts\": {},\n \"attackParamLocations\": [\n  \"artifical-fragment\",\n  \"artifical-query\"\n ],\n \"headers\": [\n  {\n   \"name\": \"Authorization\",\n   \"value\": \"Bearer token\",\n   \"mergeStrategy\": \"replace\"\n  },\n  {\n   \"name\": \"Authorization\",\n   \"value\": \"Bearer token\",\n   \"mergeStrategy\": \"replace\"\n  }\n ],\n \"fileId\": \"anim enim consectetur\",\n \"hostsFilter\": [\n  \"hABnfFEwEpOE.wt\",\n  \"iaQWbSqsLKpiZHPqZA.efy\"\n ],\n \"repeaters\": [\n  \"veniam incididunt pariatur laboris\",\n  \"v\"\n ],\n \"smart\": false,\n \"skipStaticParams\": true,\n \"exclusions\": {\n  \"urls\": [\n   \"irure dolore\",\n   \"sunt do officia aliqua\"\n  ],\n  \"params\": [\n   \"reprehenderit magna irure Lorem\",\n   \"sed ex incididunt ipsu\"\n  ]\n },\n \"createdAt\": \"1995-04-06T05:48:34.195Z\",\n \"updatedAt\": \"1959-09-08T23:57:05.250Z\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "{scan Id}",
              "item": [
                {
                  "name": "issues",
                  "item": [
                    {
                      "name": "{issue Id}",
                      "item": [
                        {
                          "name": "Get an issue",
                          "request": {
                            "auth": {
                              "type": "apikey",
                              "apikey": [
                                {
                                  "key": "key",
                                  "value": "Authorization",
                                  "type": "string"
                                },
                                {
                                  "key": "value",
                                  "value": true,
                                  "type": "boolean"
                                },
                                {
                                  "key": "in",
                                  "value": "header",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/scans/:scanId/issues/:issueId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "scans",
                                ":scanId",
                                "issues",
                                ":issueId"
                              ],
                              "variable": [
                                {
                                  "key": "scanId",
                                  "value": "<string>",
                                  "description": "(Required) The related scan ID"
                                },
                                {
                                  "key": "issueId",
                                  "value": "<string>",
                                  "description": "(Required) The issue ID"
                                }
                              ]
                            }
                          },
                          "response": [
                            {
                              "name": "Issue not found",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "description": "Added as a part of security scheme: apikey",
                                    "key": "Authorization",
                                    "value": "<API Key>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/scans/:scanId/issues/:issueId",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "scans",
                                    ":scanId",
                                    "issues",
                                    ":issueId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "scanId"
                                    },
                                    {
                                      "key": "issueId"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                            },
                            {
                              "name": "Success",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "description": "Added as a part of security scheme: apikey",
                                    "key": "Authorization",
                                    "value": "<API Key>"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/scans/:scanId/issues/:issueId",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "scans",
                                    ":scanId",
                                    "issues",
                                    ":issueId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "scanId"
                                    },
                                    {
                                      "key": "issueId"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n \"id\": \"laborum laboris\",\n \"scanId\": \"qui proident aliqua\",\n \"order\": 0,\n \"solved\": false,\n \"details\": \"pariatur\",\n \"name\": \"ut sunt do cupidatat\",\n \"severity\": \"High\",\n \"protocol\": \"http\",\n \"remedy\": \"magna \",\n \"exposure\": \"ad esse\",\n \"cvss\": \"ve\",\n \"time\": \"magna do\",\n \"screenshots\": [\n  {\n   \"title\": \"dolor et in\",\n   \"url\": \"sint ad commodo dolore\",\n   \"thumbnail\": \"minim mollit id culpa\"\n  },\n  {\n   \"title\": \"est sit in dolor\",\n   \"url\": \"pariatur sunt\",\n   \"thumbnail\": \"consectetur\"\n  }\n ],\n \"originalRequest\": {\n  \"method\": \"OPTIONS\",\n  \"url\": \"enim et\",\n  \"headers\": \"sint dolor sit esse\",\n  \"body\": \"reprehenderit voluptate non dolor culpa\",\n  \"protocol\": \"HTTP/1.1\"\n },\n \"request\": {\n  \"method\": \"TRACE\",\n  \"url\": \"in culpa\",\n  \"headers\": \"veniam inci\",\n  \"body\": \"ipsum ex\",\n  \"protocol\": \"HTTP/1.1\"\n },\n \"response\": {\n  \"headers\": \"laboris Ut ea sit\",\n  \"body\": \"esse laboris\",\n  \"status\": -32333779.146484703,\n  \"protocol\": \"HTTP/1.1\"\n },\n \"assignees\": [\n  \"qui id\",\n  \"veniam laborum\"\n ],\n \"resources\": [\n  \"dolore\",\n  \"veniam laborum\"\n ],\n \"comments\": [\n  {\n   \"headline\": \"dolor velit Ut\",\n   \"text\": \"deserunt consectetur mini\",\n   \"links\": [\n    \"aliquip sint\",\n    \"dolor fugiat pariatur\"\n   ]\n  },\n  {\n   \"headline\": \"fugiat\",\n   \"text\": \"reprehenderit id\",\n   \"links\": [\n    \"non velit eu\",\n    \"quis sint ipsum\"\n   ]\n  }\n ]\n}"
                            }
                          ]
                        },
                        {
                          "name": "Execute an issue script",
                          "request": {
                            "auth": {
                              "type": "apikey",
                              "apikey": [
                                {
                                  "key": "key",
                                  "value": "Authorization",
                                  "type": "string"
                                },
                                {
                                  "key": "value",
                                  "value": true,
                                  "type": "boolean"
                                },
                                {
                                  "key": "in",
                                  "value": "header",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"request\": {\n        \"method\": \"<string>\",\n        \"url\": \"<url>\",\n        \"headers\": \"<object>\",\n        \"body\": \"<string>\"\n    }\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/scans/:scanId/issues/:issueId/execute",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "scans",
                                ":scanId",
                                "issues",
                                ":issueId",
                                "execute"
                              ],
                              "variable": [
                                {
                                  "key": "scanId",
                                  "value": "<string>",
                                  "description": "(Required) The related scan ID"
                                },
                                {
                                  "key": "issueId",
                                  "value": "<string>",
                                  "description": "(Required) The issue ID"
                                }
                              ]
                            },
                            "description": "Executes a specific issue script to replay the vulnerability scenario."
                          },
                          "response": [
                            {
                              "name": "Issue not found",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "description": "Added as a part of security scheme: apikey",
                                    "key": "Authorization",
                                    "value": "<API Key>"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"request\": {\n        \"method\": \"<string>\",\n        \"url\": \"<url>\",\n        \"headers\": \"<object>\",\n        \"body\": \"<string>\"\n    }\n}"
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/scans/:scanId/issues/:issueId/execute",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "scans",
                                    ":scanId",
                                    "issues",
                                    ":issueId",
                                    "execute"
                                  ],
                                  "variable": [
                                    {
                                      "key": "scanId"
                                    },
                                    {
                                      "key": "issueId"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                            },
                            {
                              "name": "Success",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "description": "Added as a part of security scheme: apikey",
                                    "key": "Authorization",
                                    "value": "<API Key>"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"request\": {\n        \"method\": \"<string>\",\n        \"url\": \"<url>\",\n        \"headers\": \"<object>\",\n        \"body\": \"<string>\"\n    }\n}"
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/scans/:scanId/issues/:issueId/execute",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "scans",
                                    ":scanId",
                                    "issues",
                                    ":issueId",
                                    "execute"
                                  ],
                                  "variable": [
                                    {
                                      "key": "scanId"
                                    },
                                    {
                                      "key": "issueId"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n \"headers\": \"dolor reprehenderit laboris quis\",\n \"body\": \"amet pariatur adipisicing qui\",\n \"status\": 44012898.46827671,\n \"protocol\": \"HTTP/1.1\"\n}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Get all scan issues",
                      "request": {
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization",
                              "type": "string"
                            },
                            {
                              "key": "value",
                              "value": true,
                              "type": "boolean"
                            },
                            {
                              "key": "in",
                              "value": "header",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId/issues",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId", "issues"],
                          "variable": [
                            {
                              "key": "scanId",
                              "value": "<string>",
                              "description": "(Required) The scan ID"
                            }
                          ]
                        },
                        "description": "Returns all the issues that were discovered during a scan,       by the scan ID. Requires the logged-in user to have access to the scan."
                      },
                      "response": [
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: apikey",
                                "key": "Authorization",
                                "value": "<API Key>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/scans/:scanId/issues",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "scans",
                                ":scanId",
                                "issues"
                              ],
                              "variable": [
                                {
                                  "key": "scanId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "[\n {\n  \"id\": \"est veniam in\",\n  \"scanId\": \"proident ei\",\n  \"order\": 0,\n  \"solved\": false,\n  \"details\": \"cupidatat nostrud ipsum do\",\n  \"name\": \"nisi cupidatat labore\",\n  \"severity\": \"Low\",\n  \"protocol\": \"http\",\n  \"remedy\": \"minim\",\n  \"exposure\": \"commodo\",\n  \"cvss\": \"laborum culpa nulla\",\n  \"time\": \"non eu\",\n  \"screenshots\": [\n   {\n    \"title\": \"in proident\",\n    \"url\": \"in sit\",\n    \"thumbnail\": \"qui veniam dolore\"\n   },\n   {\n    \"title\": \"proident Lorem incididunt\",\n    \"url\": \"occaecat laboris Ut\",\n    \"thumbnail\": \"do proident irure\"\n   }\n  ],\n  \"originalRequest\": {\n   \"method\": \"TRACE\",\n   \"url\": \"culpa voluptate\",\n   \"headers\": \"aliqua sint quis\",\n   \"body\": \"ipsum\",\n   \"protocol\": \"HTTP/1.1\"\n  },\n  \"request\": {\n   \"method\": \"DELETE\",\n   \"url\": \"ut nisi\",\n   \"headers\": \"sit mollit voluptate Ut\",\n   \"body\": \"exercitation\",\n   \"protocol\": \"HTTP/1.1\"\n  },\n  \"response\": {\n   \"headers\": \"laboris ut exercitation\",\n   \"body\": \"eiusmod pro\",\n   \"status\": 97304438.43870237,\n   \"protocol\": \"HTTP/1.1\"\n  },\n  \"assignees\": [\n   \"magna occaecat laboris\",\n   \"aliquip tempor et culpa sunt\"\n  ],\n  \"resources\": [\n   \"Duis commodo\",\n   \"esse enim commodo\"\n  ],\n  \"comments\": [\n   {\n    \"headline\": \"minim commodo sit irure\",\n    \"text\": \"consectetur non Duis\",\n    \"links\": [\n     \"in nulla labore ipsum adipisicin\",\n     \"aute\"\n    ]\n   },\n   {\n    \"headline\": \"tempor enim\",\n    \"text\": \"ut id proident consectetur\",\n    \"links\": [\n     \"pariatur ullamco occaecat Duis\",\n     \"m\"\n    ]\n   }\n  ]\n },\n {\n  \"id\": \"non e\",\n  \"scanId\": \"\",\n  \"order\": 0,\n  \"solved\": false,\n  \"details\": \"aliqua non ex fugiat\",\n  \"name\": \"deserunt nostrud eiusmod aliqua\",\n  \"severity\": \"High\",\n  \"protocol\": \"websocket\",\n  \"remedy\": \"in in\",\n  \"exposure\": \"labore ullamco cupidatat\",\n  \"cvss\": \"aliquip cillum\",\n  \"time\": \"sint dolore aute\",\n  \"screenshots\": [\n   {\n    \"title\": \"in exercitation\",\n    \"url\": \"sit in sint\",\n    \"thumbnail\": \"commodo laboris\"\n   },\n   {\n    \"title\": \"incididunt tempor\",\n    \"url\": \"non\",\n    \"thumbnail\": \"reprehenderit ea do sed occaecat\"\n   }\n  ],\n  \"originalRequest\": {\n   \"method\": \"OPTIONS\",\n   \"url\": \"culpa aliqua veniam ut\",\n   \"headers\": \"irure commodo tempor Lorem\",\n   \"body\": \"aute cillum\",\n   \"protocol\": \"HTTP/1.1\"\n  },\n  \"request\": {\n   \"method\": \"PATCH\",\n   \"url\": \"sint\",\n   \"headers\": \"labore ea qui in\",\n   \"body\": \"voluptate est sit labore\",\n   \"protocol\": \"HTTP/1.1\"\n  },\n  \"response\": {\n   \"headers\": \"labore exercitation irure\",\n   \"body\": \"mollit\",\n   \"status\": 71814784.94291556,\n   \"protocol\": \"HTTP/1.1\"\n  },\n  \"assignees\": [\n   \"consequ\",\n   \"aute qui\"\n  ],\n  \"resources\": [\n   \"sint dolor\",\n   \"irure mollit aute occaecat elit\"\n  ],\n  \"comments\": [\n   {\n    \"headline\": \"nostrud aute id\",\n    \"text\": \"in id eiusmod\",\n    \"links\": [\n     \"magna \",\n     \"fu\"\n    ]\n   },\n   {\n    \"headline\": \"reprehenderit aliqua magna occaecat\",\n    \"text\": \"do\",\n    \"links\": [\n     \"in anim\",\n     \"minim anim\"\n    ]\n   }\n  ]\n }\n]"
                        }
                      ]
                    },
                    {
                      "name": "Copy an issue",
                      "request": {
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization",
                              "type": "string"
                            },
                            {
                              "key": "value",
                              "value": true,
                              "type": "boolean"
                            },
                            {
                              "key": "in",
                              "value": "header",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"originalIssueId\": \"<string>\",\n    \"request\": {\n        \"method\": \"<string>\",\n        \"url\": \"<url>\",\n        \"headers\": \"<object>\",\n        \"body\": \"<string>\"\n    },\n    \"response\": {\n        \"headers\": \"<object>\",\n        \"status\": \"<number>\",\n        \"body\": \"<string>\"\n    }\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId/issues",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId", "issues"],
                          "variable": [
                            {
                              "key": "scanId",
                              "value": "<string>",
                              "description": "(Required) The related scan ID"
                            }
                          ]
                        },
                        "description": "Saves a copy of the original issue as a new issue with a specific script."
                      },
                      "response": [
                        {
                          "name": "Successfully copied the issue.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: apikey",
                                "key": "Authorization",
                                "value": "<API Key>"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"originalIssueId\": \"<string>\",\n    \"request\": {\n        \"method\": \"<string>\",\n        \"url\": \"<url>\",\n        \"headers\": \"<object>\",\n        \"body\": \"<string>\"\n    },\n    \"response\": {\n        \"headers\": \"<object>\",\n        \"status\": \"<number>\",\n        \"body\": \"<string>\"\n    }\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/scans/:scanId/issues",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "scans",
                                ":scanId",
                                "issues"
                              ],
                              "variable": [
                                {
                                  "key": "scanId"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"id\": \"commodo\"\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "logs",
                  "item": [
                    {
                      "name": "Get scan logs",
                      "request": {
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization",
                              "type": "string"
                            },
                            {
                              "key": "value",
                              "value": true,
                              "type": "boolean"
                            },
                            {
                              "key": "in",
                              "value": "header",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId/logs?limit=5&next=<string>&logLevel=<string>&query=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId", "logs"],
                          "query": [
                            {
                              "key": "limit",
                              "value": "5",
                              "description": "Number of logs returned in query."
                            },
                            {
                              "key": "next",
                              "value": "<string>",
                              "description": "Id after which to fetch records."
                            },
                            {
                              "key": "logLevel",
                              "value": "<string>"
                            },
                            {
                              "key": "query",
                              "value": "<string>",
                              "description": "Words to search for in string."
                            }
                          ],
                          "variable": [
                            {
                              "key": "scanId",
                              "value": "<string>",
                              "description": "(Required) "
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: apikey",
                                "key": "Authorization",
                                "value": "<API Key>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/scans/:scanId/logs?limit=5&next=700000&logLevel=warning&logLevel=info&query=host.com -failed",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "v1", "scans", ":scanId", "logs"],
                              "query": [
                                {
                                  "key": "limit",
                                  "value": "5"
                                },
                                {
                                  "key": "next",
                                  "value": "700000"
                                },
                                {
                                  "key": "logLevel",
                                  "value": "warning"
                                },
                                {
                                  "key": "logLevel",
                                  "value": "info"
                                },
                                {
                                  "key": "query",
                                  "value": "host.com -failed"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "scanId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "[\n {\n  \"id\": \"fugiat nisi\",\n  \"message\": \"[2020-05-18T22:19:17.019892000Z] Verbose -- Compiling status to send to backend\",\n  \"level\": \"info\",\n  \"extra\": {}\n },\n {\n  \"id\": \"anim nulla n\",\n  \"message\": \"[2020-05-18T22:19:17.019892000Z] Verbose -- Compiling status to send to backend\",\n  \"level\": \"info\",\n  \"extra\": {}\n }\n]"
                        },
                        {
                          "name": "Scan not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: apikey",
                                "key": "Authorization",
                                "value": "<API Key>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/scans/:scanId/logs?limit=5&next=700000&logLevel=warning&logLevel=info&query=host.com -failed",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "v1", "scans", ":scanId", "logs"],
                              "query": [
                                {
                                  "key": "limit",
                                  "value": "5"
                                },
                                {
                                  "key": "next",
                                  "value": "700000"
                                },
                                {
                                  "key": "logLevel",
                                  "value": "warning"
                                },
                                {
                                  "key": "logLevel",
                                  "value": "info"
                                },
                                {
                                  "key": "query",
                                  "value": "host.com -failed"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "scanId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Download scan logs",
                      "request": {
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization",
                              "type": "string"
                            },
                            {
                              "key": "value",
                              "value": true,
                              "type": "boolean"
                            },
                            {
                              "key": "in",
                              "value": "header",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId/logs/archive",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "scans",
                            ":scanId",
                            "logs",
                            "archive"
                          ],
                          "variable": [
                            {
                              "key": "scanId",
                              "value": "<string>",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "description": "Downloads a file with all logs related to a scan."
                      },
                      "response": [
                        {
                          "name": "Scan not found.",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: apikey",
                                "key": "Authorization",
                                "value": "<API Key>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/scans/:scanId/logs/archive",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "scans",
                                ":scanId",
                                "logs",
                                "archive"
                              ],
                              "variable": [
                                {
                                  "key": "scanId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                        },
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: apikey",
                                "key": "Authorization",
                                "value": "<API Key>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/scans/:scanId/logs/archive",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "scans",
                                ":scanId",
                                "logs",
                                "archive"
                              ],
                              "variable": [
                                {
                                  "key": "scanId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/gzip"
                            }
                          ],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Get a single scan",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans/:scanId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans", ":scanId"],
                      "variable": [
                        {
                          "key": "scanId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"id\": \"dolor paria\",\n \"organizationId\": \"aliqua dolo\",\n \"name\": \"proident mollit\",\n \"discoveryTypes\": [\n  \"oas\",\n  \"crawler\"\n ],\n \"startedById\": \"eiusmod fugiat\",\n \"module\": \"dast\",\n \"entryPoints\": 0,\n \"totalParams\": 0,\n \"projectId\": \"consectetur n\",\n \"repeater\": false,\n \"status\": \"stopped\",\n \"elapsed\": 33666629.70720559,\n \"discovering\": true,\n \"issuesLength\": 0,\n \"targets\": [\n  \"lDkFTAChyLgzwzhuXfJsYpHxeWXAA.ft\",\n  \"dAoKitzKacpmhBAmQctamzIdZofd.em\"\n ],\n \"requests\": 0,\n \"relationId\": \"dolore do ut\",\n \"components\": [\n  {\n   \"value\": 0,\n   \"name\": \"ex cillum dolore\",\n   \"total\": -75106986.65837175\n  },\n  {\n   \"value\": 0,\n   \"name\": \"nulla D\",\n   \"total\": -51538842.77055192\n  }\n ],\n \"issuesBySeverity\": [\n  {\n   \"type\": \"Low\",\n   \"number\": -90751219.49684127,\n   \"issuesByStatus\": [\n    {\n     \"status\": \"resolved\",\n     \"number\": -1885653.2539461404\n    },\n    {\n     \"status\": \"ignored\",\n     \"number\": 22184025.637850985\n    }\n   ]\n  },\n  {\n   \"type\": \"Medium\",\n   \"number\": 69050456.5012447,\n   \"issuesByStatus\": [\n    {\n     \"status\": \"ignored\",\n     \"number\": 2268917.03654401\n    },\n    {\n     \"status\": \"new\",\n     \"number\": 92087727.25800878\n    }\n   ]\n  }\n ],\n \"schedule\": {\n  \"type\": \"<string>\",\n  \"repeatInterval\": \"<number>\",\n  \"repeatIntervalUnit\": \"<string>\",\n  \"repeatWeekdays\": [\n   \"<number>\"\n  ],\n  \"nextRunAt\": \"<dateTime>\",\n  \"endAt\": \"<dateTime>\",\n  \"runNow\": false,\n  \"skipConcurrent\": true\n },\n \"startTime\": \"2002-12-20T17:50:43.048Z\",\n \"createdAt\": \"1943-01-28T22:55:37.307Z\",\n \"requestStatuses\": {},\n \"techStack\": [\n  {\n   \"host\": \"Lorem eiusmod dolor in\",\n   \"tech\": \"labore proident ullamco Duis\",\n   \"version\": \"reprehenderit\"\n  },\n  {\n   \"host\": \"dolore do cupidatat\",\n   \"tech\": \"irure cillum aliquip adipisicing\",\n   \"version\": \"sunt\"\n  }\n ],\n \"wafs\": [\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  },\n  {\n   \"host\": \"example.com\",\n   \"name\": \"CloudFlare\",\n   \"manufacturer\": \"Cerber Tech\",\n   \"website\": \"https://www.wpcerber.com\"\n  }\n ],\n \"trafficMetrics\": [\n  {\n   \"host\": \"example.com\",\n   \"sent\": 97179322.64498687,\n   \"received\": 9544505.12433751\n  },\n  {\n   \"host\": \"example.com\",\n   \"sent\": -90655808.22865771,\n   \"received\": 39885942.44732714\n  }\n ],\n \"responseTime\": [\n  {\n   \"host\": \"example.com\",\n   \"value\": -71897918.74275903\n  },\n  {\n   \"host\": \"example.com\",\n   \"value\": 16999563.62358442\n  }\n ],\n \"smart\": false,\n \"skipStaticParams\": false,\n \"tests\": [\n  \"retire_js\",\n  \"ssti\"\n ]\n}"
                    },
                    {
                      "name": "Scan not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "Update a scan",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"<string>\",\n    \"tests\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"repositories\": [\n        {\n            \"id\": \"<string>\",\n            \"service\": \"<string>\",\n            \"name\": \"<string>\",\n            \"uri\": \"<uri>\"\n        },\n        {\n            \"id\": \"<string>\",\n            \"service\": \"<string>\",\n            \"name\": \"<string>\",\n            \"uri\": \"<uri>\"\n        }\n    ],\n    \"discoveryTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"poolSize\": \"<number>\",\n    \"crawlerUrls\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"attackParamLocations\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"extraHosts\": \"<object>\",\n    \"headers\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\",\n            \"mergeStrategy\": \"replace\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\",\n            \"mergeStrategy\": \"replace\"\n        }\n    ],\n    \"fileId\": \"<string>\",\n    \"hostsFilter\": [\n        \"<hostname>\",\n        \"<hostname>\"\n    ],\n    \"repeaters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"smart\": \"<boolean>\",\n    \"skipStaticParams\": \"<boolean>\",\n    \"ignore\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"projectId\": \"<string>\",\n    \"exclusions\": {\n        \"urls\": [\n            \"<string>\"\n        ],\n        \"params\": [\n            \"<string>\"\n        ]\n    },\n    \"slowEpTimeout\": \"<number>\",\n    \"payloadExtractor\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"correlationIdXPath\": \"<string>\",\n    \"authObjectId\": \"<string>\",\n    \"schedule\": {\n        \"type\": \"<string>\",\n        \"repeatInterval\": \"<number>\",\n        \"repeatIntervalUnit\": \"<string>\",\n        \"repeatWeekdays\": [\n            \"<number>\"\n        ],\n        \"nextRunAt\": \"<dateTime>\",\n        \"endAt\": \"<dateTime>\",\n        \"runNow\": false,\n        \"skipConcurrent\": true\n    },\n    \"module\": \"<string>\",\n    \"build\": {\n        \"service\": \"<string>\",\n        \"buildNumber\": \"<number>\",\n        \"user\": \"<string>\",\n        \"project\": \"<string>\",\n        \"vcs\": \"<string>\"\n    },\n    \"templateId\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans/:scanId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans", ":scanId"],
                      "variable": [
                        {
                          "key": "scanId",
                          "value": "<string>",
                          "description": "(Required) The updated scan ID"
                        }
                      ]
                    },
                    "description": "Updates a specific scan."
                  },
                  "response": [
                    {
                      "name": "Scan does not exist.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"<string>\",\n    \"tests\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"repositories\": [\n        {\n            \"id\": \"NeuraLegion/nexploit-cli\",\n            \"service\": \"github\",\n            \"name\": \"nexploit-cli\",\n            \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n        },\n        {\n            \"id\": \"NeuraLegion/nexploit-cli\",\n            \"service\": \"github\",\n            \"name\": \"nexploit-cli\",\n            \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n        }\n    ],\n    \"discoveryTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"poolSize\": \"<number>\",\n    \"crawlerUrls\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"attackParamLocations\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"extraHosts\": \"<object>\",\n    \"headers\": [\n        {\n            \"name\": \"Authorization\",\n            \"value\": \"Bearer token\",\n            \"mergeStrategy\": \"replace\"\n        },\n        {\n            \"name\": \"Authorization\",\n            \"value\": \"Bearer token\",\n            \"mergeStrategy\": \"replace\"\n        }\n    ],\n    \"fileId\": \"<string>\",\n    \"hostsFilter\": [\n        \"<hostname>\",\n        \"<hostname>\"\n    ],\n    \"repeaters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"smart\": \"<boolean>\",\n    \"skipStaticParams\": \"<boolean>\",\n    \"ignore\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"projectId\": \"<string>\",\n    \"exclusions\": {\n        \"urls\": [\n            \"<string>\"\n        ],\n        \"params\": [\n            \"<string>\"\n        ]\n    },\n    \"slowEpTimeout\": \"<number>\",\n    \"payloadExtractor\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"correlationIdXPath\": \"<string>\",\n    \"authObjectId\": \"<string>\",\n    \"schedule\": {\n        \"type\": \"<string>\",\n        \"repeatInterval\": \"<number>\",\n        \"repeatIntervalUnit\": \"<string>\",\n        \"repeatWeekdays\": [\n            \"<number>\"\n        ],\n        \"nextRunAt\": \"<dateTime>\",\n        \"endAt\": \"<dateTime>\",\n        \"runNow\": false,\n        \"skipConcurrent\": true\n    },\n    \"module\": \"<string>\",\n    \"build\": {\n        \"service\": \"<string>\",\n        \"buildNumber\": \"<number>\",\n        \"user\": \"<string>\",\n        \"project\": \"<string>\",\n        \"vcs\": \"<string>\"\n    },\n    \"templateId\": \"<string>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                    },
                    {
                      "name": "Successfully updated the scan.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"<string>\",\n    \"tests\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"repositories\": [\n        {\n            \"id\": \"NeuraLegion/nexploit-cli\",\n            \"service\": \"github\",\n            \"name\": \"nexploit-cli\",\n            \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n        },\n        {\n            \"id\": \"NeuraLegion/nexploit-cli\",\n            \"service\": \"github\",\n            \"name\": \"nexploit-cli\",\n            \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n        }\n    ],\n    \"discoveryTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"poolSize\": \"<number>\",\n    \"crawlerUrls\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"attackParamLocations\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"extraHosts\": \"<object>\",\n    \"headers\": [\n        {\n            \"name\": \"Authorization\",\n            \"value\": \"Bearer token\",\n            \"mergeStrategy\": \"replace\"\n        },\n        {\n            \"name\": \"Authorization\",\n            \"value\": \"Bearer token\",\n            \"mergeStrategy\": \"replace\"\n        }\n    ],\n    \"fileId\": \"<string>\",\n    \"hostsFilter\": [\n        \"<hostname>\",\n        \"<hostname>\"\n    ],\n    \"repeaters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"smart\": \"<boolean>\",\n    \"skipStaticParams\": \"<boolean>\",\n    \"ignore\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"projectId\": \"<string>\",\n    \"exclusions\": {\n        \"urls\": [\n            \"<string>\"\n        ],\n        \"params\": [\n            \"<string>\"\n        ]\n    },\n    \"slowEpTimeout\": \"<number>\",\n    \"payloadExtractor\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"correlationIdXPath\": \"<string>\",\n    \"authObjectId\": \"<string>\",\n    \"schedule\": {\n        \"type\": \"<string>\",\n        \"repeatInterval\": \"<number>\",\n        \"repeatIntervalUnit\": \"<string>\",\n        \"repeatWeekdays\": [\n            \"<number>\"\n        ],\n        \"nextRunAt\": \"<dateTime>\",\n        \"endAt\": \"<dateTime>\",\n        \"runNow\": false,\n        \"skipConcurrent\": true\n    },\n    \"module\": \"<string>\",\n    \"build\": {\n        \"service\": \"<string>\",\n        \"buildNumber\": \"<number>\",\n        \"user\": \"<string>\",\n        \"project\": \"<string>\",\n        \"vcs\": \"<string>\"\n    },\n    \"templateId\": \"<string>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Delete a single scan",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans/:scanId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans", ":scanId"],
                      "variable": [
                        {
                          "key": "scanId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Successfully deleted the scan.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Scan not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                    },
                    {
                      "name": "Cannot delete unrecognized scan.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"BAD_REQUEST\",\n \"message\": \"ullamco laborum\",\n \"status\": 400,\n \"errors\": [\n  {\n   \"name\": \"qui\",\n   \"message\": \"amet veniam\"\n  },\n  {\n   \"name\": \"enim commodo\",\n   \"message\": \"dolor do laborum aute tempor\"\n  }\n ],\n \"stack\": [\n  \"commodo est\",\n  \"velit dolor cillum aliqua\"\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "Get scan checks",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans/:scanId/checks",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans", ":scanId", "checks"],
                      "variable": [
                        {
                          "key": "scanId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId/checks",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId", "checks"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n {\n  \"name\": \"officia labore \",\n  \"severity\": \"Low\",\n  \"passed\": false,\n  \"progress\": 0,\n  \"type\": \"dast\"\n },\n {\n  \"name\": \"do ea in occaecat\",\n  \"severity\": \"Medium\",\n  \"passed\": false,\n  \"progress\": 0,\n  \"type\": \"fuzzer\"\n }\n]"
                    }
                  ]
                },
                {
                  "name": "Get a scan sitemap",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans/:scanId/sitemap",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans", ":scanId", "sitemap"],
                      "variable": [
                        {
                          "key": "scanId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId/sitemap",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId", "sitemap"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n {\n  \"name\": \"mollit ipsum incididunt cupidatat\",\n  \"method\": \"OPTIONS\",\n  \"params\": [\n   {\n    \"type\": \"eiusmod ea commodo occaecat\",\n    \"children\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ApiCallParamDto detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ApiCallParamDto detected>\"\n     }\n    ],\n    \"name\": \"anim occaecat\"\n   },\n   {\n    \"type\": \"culpa adipisicing\",\n    \"children\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ApiCallParamDto detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ApiCallParamDto detected>\"\n     }\n    ],\n    \"name\": \"in deserunt dolor\"\n   }\n  ],\n  \"children\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/SitemapNodeView detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/SitemapNodeView detected>\"\n   }\n  ]\n },\n {\n  \"name\": \"est dolor ut nostrud\",\n  \"method\": \"GET\",\n  \"params\": [\n   {\n    \"type\": \"sed\",\n    \"children\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ApiCallParamDto detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ApiCallParamDto detected>\"\n     }\n    ],\n    \"name\": \"Ut dolore in culpa\"\n   },\n   {\n    \"type\": \"irure ut\",\n    \"children\": [\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ApiCallParamDto detected>\"\n     },\n     {\n      \"value\": \"<Circular reference to #/components/schemas/ApiCallParamDto detected>\"\n     }\n    ],\n    \"name\": \"mollit amet\"\n   }\n  ],\n  \"children\": [\n   {\n    \"value\": \"<Circular reference to #/components/schemas/SitemapNodeView detected>\"\n   },\n   {\n    \"value\": \"<Circular reference to #/components/schemas/SitemapNodeView detected>\"\n   }\n  ]\n }\n]"
                    },
                    {
                      "name": "Scan not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId/sitemap",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId", "sitemap"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "Get a scan settings",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans/:scanId/config",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans", ":scanId", "config"],
                      "variable": [
                        {
                          "key": "scanId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Scan not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId/config",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId", "config"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                    },
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId/config",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId", "config"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"labore nostrud ex culpa proi\",\n \"authObjectId\": \"proident sed\",\n \"headers\": [\n  {\n   \"name\": \"Authorization\",\n   \"value\": \"Bearer token\",\n   \"mergeStrategy\": \"replace\"\n  },\n  {\n   \"name\": \"Authorization\",\n   \"value\": \"Bearer token\",\n   \"mergeStrategy\": \"replace\"\n  }\n ],\n \"extraHosts\": \"labore incididunt deserunt tempor\",\n \"repeaters\": [\n  \"culpa occaecat\",\n  \"ea\"\n ],\n \"repositories\": [\n  {\n   \"id\": \"NeuraLegion/nexploit-cli\",\n   \"service\": \"github\",\n   \"name\": \"nexploit-cli\",\n   \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n  },\n  {\n   \"id\": \"NeuraLegion/nexploit-cli\",\n   \"service\": \"github\",\n   \"name\": \"nexploit-cli\",\n   \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n  }\n ],\n \"schedule\": {\n  \"type\": \"<string>\",\n  \"repeatInterval\": \"<number>\",\n  \"repeatIntervalUnit\": \"<string>\",\n  \"repeatWeekdays\": [\n   \"<number>\"\n  ],\n  \"nextRunAt\": \"<dateTime>\",\n  \"endAt\": \"<dateTime>\",\n  \"runNow\": false,\n  \"skipConcurrent\": true\n },\n \"poolSize\": -78277798.67830259,\n \"fileId\": \"commodo\",\n \"hostsFilter\": [\n  \"l.qxp\",\n  \"TDJFUTWIFPDVmlXv.md\"\n ],\n \"crawlerUrls\": [\n  \"http://mXSveFkvHnakZDcymBsURZtCGGyLELU.nxfnXs2la0IetstbSwROYbL0iuE07WkbrjwhBjLe.,Yg\",\n  \"https://eGQngwwsScgUfaanmDvKC.imMEPfR+1+jX0H.zQf.dkVKg4fheEBy83PnRb30.wa+InNiskjd9vLUvGQk3\"\n ],\n \"module\": \"fuzzer\",\n \"discoveryTypes\": [\n  \"archive\",\n  \"oas\"\n ],\n \"tests\": [\n  \"email_injection\",\n  \"exposed_couch_db_apis\"\n ],\n \"attackParamLocations\": [\n  \"artifical-query\",\n  \"query\"\n ],\n \"smart\": true,\n \"skipStaticParams\": false,\n \"deleteAfterScan\": false,\n \"fileName\": \"velit nostrud\",\n \"openApiUrl\": \"magna eiusmod eu aute\",\n \"projectId\": \"quis reprehenderit id nulla\",\n \"templateId\": \"in\",\n \"exclusions\": {\n  \"urls\": [\n   \"occaecat sint deserunt\",\n   \"labore enim anim\"\n  ],\n  \"params\": [\n   \"Ut nisi aliquip sunt\",\n   \"exercitation reprehenderit ex veniam\"\n  ]\n },\n \"payloadExtractor\": [\n  \"nulla co\",\n  \"dolore nisi\"\n ],\n \"correlationIdXPath\": \"magna Duis eu\",\n \"slowEpTimeout\": 20893691.81315352\n}"
                    }
                  ]
                },
                {
                  "name": "Run a scan immediately",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans/:scanId/run",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans", ":scanId", "run"],
                      "variable": [
                        {
                          "key": "scanId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "description": "Requests to immediately run a scan."
                  },
                  "response": [
                    {
                      "name": "Success.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId/run",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId", "run"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Failed to run scan. Max memory reached.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId/run",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId", "run"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"INTERNAL_SERVER_ERROR\",\n \"message\": \"Lorem commodo consequat\",\n \"status\": 500,\n \"errors\": [\n  {\n   \"name\": \"nul\",\n   \"message\": \"velit aute voluptate consectetur\"\n  },\n  {\n   \"name\": \"laboris Excepteur magna\",\n   \"message\": \"tempor ex in eiusmod\"\n  }\n ],\n \"stack\": [\n  \"incididunt ipsum\",\n  \"tempor dolore nulla\"\n ]\n}"
                    },
                    {
                      "name": "Failed to run scan.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId/run",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId", "run"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"BAD_REQUEST\",\n \"message\": \"ullamco laborum\",\n \"status\": 400,\n \"errors\": [\n  {\n   \"name\": \"qui\",\n   \"message\": \"amet veniam\"\n  },\n  {\n   \"name\": \"enim commodo\",\n   \"message\": \"dolor do laborum aute tempor\"\n  }\n ],\n \"stack\": [\n  \"commodo est\",\n  \"velit dolor cillum aliqua\"\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "Download engine logs",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans/:scanId/engine-logs",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans", ":scanId", "engine-logs"],
                      "variable": [
                        {
                          "key": "scanId",
                          "value": "<string>",
                          "description": "(Required) The scan ID."
                        }
                      ]
                    },
                    "description": "Download a archive with all engine logs related to a scan."
                  },
                  "response": [
                    {
                      "name": "Scan not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId/engine-logs",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "scans",
                            ":scanId",
                            "engine-logs"
                          ],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/gzip"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Stop a single scan",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans/:scanId/stop",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans", ":scanId", "stop"],
                      "variable": [
                        {
                          "key": "scanId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Scan not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId/stop",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId", "stop"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                    },
                    {
                      "name": "Successfully stopped the scan.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId/stop",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId", "stop"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Cannot stop unrecognized scan.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId/stop",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId", "stop"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"BAD_REQUEST\",\n \"message\": \"ullamco laborum\",\n \"status\": 400,\n \"errors\": [\n  {\n   \"name\": \"qui\",\n   \"message\": \"amet veniam\"\n  },\n  {\n   \"name\": \"enim commodo\",\n   \"message\": \"dolor do laborum aute tempor\"\n  }\n ],\n \"stack\": [\n  \"commodo est\",\n  \"velit dolor cillum aliqua\"\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "Restart a scan",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"config\": {\n        \"name\": \"<string>\",\n        \"tests\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"repositories\": [\n            {\n                \"id\": \"<string>\",\n                \"service\": \"<string>\",\n                \"name\": \"<string>\",\n                \"uri\": \"<uri>\"\n            },\n            {\n                \"id\": \"<string>\",\n                \"service\": \"<string>\",\n                \"name\": \"<string>\",\n                \"uri\": \"<uri>\"\n            }\n        ],\n        \"discoveryTypes\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"poolSize\": \"<number>\",\n        \"crawlerUrls\": [\n            \"<uri>\",\n            \"<uri>\"\n        ],\n        \"attackParamLocations\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"extraHosts\": \"<object>\",\n        \"headers\": [\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\",\n                \"mergeStrategy\": \"replace\"\n            },\n            {\n                \"name\": \"<string>\",\n                \"value\": \"<string>\",\n                \"mergeStrategy\": \"replace\"\n            }\n        ],\n        \"fileId\": \"<string>\",\n        \"hostsFilter\": [\n            \"<hostname>\",\n            \"<hostname>\"\n        ],\n        \"repeaters\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"smart\": \"<boolean>\",\n        \"skipStaticParams\": \"<boolean>\",\n        \"ignore\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"projectId\": \"<string>\",\n        \"exclusions\": {\n            \"urls\": [\n                \"<string>\"\n            ],\n            \"params\": [\n                \"<string>\"\n            ]\n        },\n        \"slowEpTimeout\": \"<number>\",\n        \"payloadExtractor\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"correlationIdXPath\": \"<string>\",\n        \"authObjectId\": \"<string>\",\n        \"schedule\": {\n            \"type\": \"<string>\",\n            \"repeatInterval\": \"<number>\",\n            \"repeatIntervalUnit\": \"<string>\",\n            \"repeatWeekdays\": [\n                \"<number>\"\n            ],\n            \"nextRunAt\": \"<dateTime>\",\n            \"endAt\": \"<dateTime>\",\n            \"runNow\": false,\n            \"skipConcurrent\": true\n        },\n        \"module\": \"<string>\",\n        \"build\": {\n            \"service\": \"<string>\",\n            \"buildNumber\": \"<number>\",\n            \"user\": \"<string>\",\n            \"project\": \"<string>\",\n            \"vcs\": \"<string>\"\n        },\n        \"templateId\": \"<string>\"\n    }\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans/:scanId/retest",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans", ":scanId", "retest"],
                      "variable": [
                        {
                          "key": "scanId",
                          "value": "<string>",
                          "description": "(Required) The original scan ID"
                        }
                      ]
                    },
                    "description": "Requests to start a new scan either using       the same configuration or providing a new one."
                  },
                  "response": [
                    {
                      "name": "Scan does not exist.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"config\": {\n        \"name\": \"<string>\",\n        \"tests\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"repositories\": [\n            {\n                \"id\": \"NeuraLegion/nexploit-cli\",\n                \"service\": \"github\",\n                \"name\": \"nexploit-cli\",\n                \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n            },\n            {\n                \"id\": \"NeuraLegion/nexploit-cli\",\n                \"service\": \"github\",\n                \"name\": \"nexploit-cli\",\n                \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n            }\n        ],\n        \"discoveryTypes\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"poolSize\": \"<number>\",\n        \"crawlerUrls\": [\n            \"<uri>\",\n            \"<uri>\"\n        ],\n        \"attackParamLocations\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"extraHosts\": \"<object>\",\n        \"headers\": [\n            {\n                \"name\": \"Authorization\",\n                \"value\": \"Bearer token\",\n                \"mergeStrategy\": \"replace\"\n            },\n            {\n                \"name\": \"Authorization\",\n                \"value\": \"Bearer token\",\n                \"mergeStrategy\": \"replace\"\n            }\n        ],\n        \"fileId\": \"<string>\",\n        \"hostsFilter\": [\n            \"<hostname>\",\n            \"<hostname>\"\n        ],\n        \"repeaters\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"smart\": \"<boolean>\",\n        \"skipStaticParams\": \"<boolean>\",\n        \"ignore\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"projectId\": \"<string>\",\n        \"exclusions\": {\n            \"urls\": [\n                \"<string>\"\n            ],\n            \"params\": [\n                \"<string>\"\n            ]\n        },\n        \"slowEpTimeout\": \"<number>\",\n        \"payloadExtractor\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"correlationIdXPath\": \"<string>\",\n        \"authObjectId\": \"<string>\",\n        \"schedule\": {\n            \"type\": \"<string>\",\n            \"repeatInterval\": \"<number>\",\n            \"repeatIntervalUnit\": \"<string>\",\n            \"repeatWeekdays\": [\n                \"<number>\"\n            ],\n            \"nextRunAt\": \"<dateTime>\",\n            \"endAt\": \"<dateTime>\",\n            \"runNow\": false,\n            \"skipConcurrent\": true\n        },\n        \"module\": \"<string>\",\n        \"build\": {\n            \"service\": \"<string>\",\n            \"buildNumber\": \"<number>\",\n            \"user\": \"<string>\",\n            \"project\": \"<string>\",\n            \"vcs\": \"<string>\"\n        },\n        \"templateId\": \"<string>\"\n    }\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId/retest",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId", "retest"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                    },
                    {
                      "name": "Success.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"config\": {\n        \"name\": \"<string>\",\n        \"tests\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"repositories\": [\n            {\n                \"id\": \"NeuraLegion/nexploit-cli\",\n                \"service\": \"github\",\n                \"name\": \"nexploit-cli\",\n                \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n            },\n            {\n                \"id\": \"NeuraLegion/nexploit-cli\",\n                \"service\": \"github\",\n                \"name\": \"nexploit-cli\",\n                \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n            }\n        ],\n        \"discoveryTypes\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"poolSize\": \"<number>\",\n        \"crawlerUrls\": [\n            \"<uri>\",\n            \"<uri>\"\n        ],\n        \"attackParamLocations\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"extraHosts\": \"<object>\",\n        \"headers\": [\n            {\n                \"name\": \"Authorization\",\n                \"value\": \"Bearer token\",\n                \"mergeStrategy\": \"replace\"\n            },\n            {\n                \"name\": \"Authorization\",\n                \"value\": \"Bearer token\",\n                \"mergeStrategy\": \"replace\"\n            }\n        ],\n        \"fileId\": \"<string>\",\n        \"hostsFilter\": [\n            \"<hostname>\",\n            \"<hostname>\"\n        ],\n        \"repeaters\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"smart\": \"<boolean>\",\n        \"skipStaticParams\": \"<boolean>\",\n        \"ignore\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"projectId\": \"<string>\",\n        \"exclusions\": {\n            \"urls\": [\n                \"<string>\"\n            ],\n            \"params\": [\n                \"<string>\"\n            ]\n        },\n        \"slowEpTimeout\": \"<number>\",\n        \"payloadExtractor\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"correlationIdXPath\": \"<string>\",\n        \"authObjectId\": \"<string>\",\n        \"schedule\": {\n            \"type\": \"<string>\",\n            \"repeatInterval\": \"<number>\",\n            \"repeatIntervalUnit\": \"<string>\",\n            \"repeatWeekdays\": [\n                \"<number>\"\n            ],\n            \"nextRunAt\": \"<dateTime>\",\n            \"endAt\": \"<dateTime>\",\n            \"runNow\": false,\n            \"skipConcurrent\": true\n        },\n        \"module\": \"<string>\",\n        \"build\": {\n            \"service\": \"<string>\",\n            \"buildNumber\": \"<number>\",\n            \"user\": \"<string>\",\n            \"project\": \"<string>\",\n            \"vcs\": \"<string>\"\n        },\n        \"templateId\": \"<string>\"\n    }\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId/retest",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId", "retest"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "*/*"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Failed to run scan. Memory limit reached.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"config\": {\n        \"name\": \"<string>\",\n        \"tests\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"repositories\": [\n            {\n                \"id\": \"NeuraLegion/nexploit-cli\",\n                \"service\": \"github\",\n                \"name\": \"nexploit-cli\",\n                \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n            },\n            {\n                \"id\": \"NeuraLegion/nexploit-cli\",\n                \"service\": \"github\",\n                \"name\": \"nexploit-cli\",\n                \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n            }\n        ],\n        \"discoveryTypes\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"poolSize\": \"<number>\",\n        \"crawlerUrls\": [\n            \"<uri>\",\n            \"<uri>\"\n        ],\n        \"attackParamLocations\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"extraHosts\": \"<object>\",\n        \"headers\": [\n            {\n                \"name\": \"Authorization\",\n                \"value\": \"Bearer token\",\n                \"mergeStrategy\": \"replace\"\n            },\n            {\n                \"name\": \"Authorization\",\n                \"value\": \"Bearer token\",\n                \"mergeStrategy\": \"replace\"\n            }\n        ],\n        \"fileId\": \"<string>\",\n        \"hostsFilter\": [\n            \"<hostname>\",\n            \"<hostname>\"\n        ],\n        \"repeaters\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"smart\": \"<boolean>\",\n        \"skipStaticParams\": \"<boolean>\",\n        \"ignore\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"projectId\": \"<string>\",\n        \"exclusions\": {\n            \"urls\": [\n                \"<string>\"\n            ],\n            \"params\": [\n                \"<string>\"\n            ]\n        },\n        \"slowEpTimeout\": \"<number>\",\n        \"payloadExtractor\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"correlationIdXPath\": \"<string>\",\n        \"authObjectId\": \"<string>\",\n        \"schedule\": {\n            \"type\": \"<string>\",\n            \"repeatInterval\": \"<number>\",\n            \"repeatIntervalUnit\": \"<string>\",\n            \"repeatWeekdays\": [\n                \"<number>\"\n            ],\n            \"nextRunAt\": \"<dateTime>\",\n            \"endAt\": \"<dateTime>\",\n            \"runNow\": false,\n            \"skipConcurrent\": true\n        },\n        \"module\": \"<string>\",\n        \"build\": {\n            \"service\": \"<string>\",\n            \"buildNumber\": \"<number>\",\n            \"user\": \"<string>\",\n            \"project\": \"<string>\",\n            \"vcs\": \"<string>\"\n        },\n        \"templateId\": \"<string>\"\n    }\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId/retest",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId", "retest"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"INTERNAL_SERVER_ERROR\",\n \"message\": \"Lorem commodo consequat\",\n \"status\": 500,\n \"errors\": [\n  {\n   \"name\": \"nul\",\n   \"message\": \"velit aute voluptate consectetur\"\n  },\n  {\n   \"name\": \"laboris Excepteur magna\",\n   \"message\": \"tempor ex in eiusmod\"\n  }\n ],\n \"stack\": [\n  \"incididunt ipsum\",\n  \"tempor dolore nulla\"\n ]\n}"
                    },
                    {
                      "name": "Failed to run scan.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"config\": {\n        \"name\": \"<string>\",\n        \"tests\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"repositories\": [\n            {\n                \"id\": \"NeuraLegion/nexploit-cli\",\n                \"service\": \"github\",\n                \"name\": \"nexploit-cli\",\n                \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n            },\n            {\n                \"id\": \"NeuraLegion/nexploit-cli\",\n                \"service\": \"github\",\n                \"name\": \"nexploit-cli\",\n                \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n            }\n        ],\n        \"discoveryTypes\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"poolSize\": \"<number>\",\n        \"crawlerUrls\": [\n            \"<uri>\",\n            \"<uri>\"\n        ],\n        \"attackParamLocations\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"extraHosts\": \"<object>\",\n        \"headers\": [\n            {\n                \"name\": \"Authorization\",\n                \"value\": \"Bearer token\",\n                \"mergeStrategy\": \"replace\"\n            },\n            {\n                \"name\": \"Authorization\",\n                \"value\": \"Bearer token\",\n                \"mergeStrategy\": \"replace\"\n            }\n        ],\n        \"fileId\": \"<string>\",\n        \"hostsFilter\": [\n            \"<hostname>\",\n            \"<hostname>\"\n        ],\n        \"repeaters\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"smart\": \"<boolean>\",\n        \"skipStaticParams\": \"<boolean>\",\n        \"ignore\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"projectId\": \"<string>\",\n        \"exclusions\": {\n            \"urls\": [\n                \"<string>\"\n            ],\n            \"params\": [\n                \"<string>\"\n            ]\n        },\n        \"slowEpTimeout\": \"<number>\",\n        \"payloadExtractor\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"correlationIdXPath\": \"<string>\",\n        \"authObjectId\": \"<string>\",\n        \"schedule\": {\n            \"type\": \"<string>\",\n            \"repeatInterval\": \"<number>\",\n            \"repeatIntervalUnit\": \"<string>\",\n            \"repeatWeekdays\": [\n                \"<number>\"\n            ],\n            \"nextRunAt\": \"<dateTime>\",\n            \"endAt\": \"<dateTime>\",\n            \"runNow\": false,\n            \"skipConcurrent\": true\n        },\n        \"module\": \"<string>\",\n        \"build\": {\n            \"service\": \"<string>\",\n            \"buildNumber\": \"<number>\",\n            \"user\": \"<string>\",\n            \"project\": \"<string>\",\n            \"vcs\": \"<string>\"\n        },\n        \"templateId\": \"<string>\"\n    }\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scans/:scanId/retest",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scans", ":scanId", "retest"],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"BAD_REQUEST\",\n \"message\": \"ullamco laborum\",\n \"status\": 400,\n \"errors\": [\n  {\n   \"name\": \"qui\",\n   \"message\": \"amet veniam\"\n  },\n  {\n   \"name\": \"enim commodo\",\n   \"message\": \"dolor do laborum aute tempor\"\n  }\n ],\n \"stack\": [\n  \"commodo est\",\n  \"velit dolor cillum aliqua\"\n ]\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Run a new scan",
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "Authorization",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": true,
                      "type": "boolean"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"tests\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"repositories\": [\n        {\n            \"id\": \"<string>\",\n            \"service\": \"<string>\",\n            \"name\": \"<string>\",\n            \"uri\": \"<uri>\"\n        },\n        {\n            \"id\": \"<string>\",\n            \"service\": \"<string>\",\n            \"name\": \"<string>\",\n            \"uri\": \"<uri>\"\n        }\n    ],\n    \"discoveryTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"poolSize\": \"<number>\",\n    \"crawlerUrls\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"attackParamLocations\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"extraHosts\": \"<object>\",\n    \"headers\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\",\n            \"mergeStrategy\": \"replace\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\",\n            \"mergeStrategy\": \"replace\"\n        }\n    ],\n    \"fileId\": \"<string>\",\n    \"hostsFilter\": [\n        \"<hostname>\",\n        \"<hostname>\"\n    ],\n    \"repeaters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"smart\": \"<boolean>\",\n    \"skipStaticParams\": \"<boolean>\",\n    \"ignore\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"projectId\": \"<string>\",\n    \"exclusions\": {\n        \"urls\": [\n            \"<string>\"\n        ],\n        \"params\": [\n            \"<string>\"\n        ]\n    },\n    \"slowEpTimeout\": \"<number>\",\n    \"payloadExtractor\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"correlationIdXPath\": \"<string>\",\n    \"authObjectId\": \"<string>\",\n    \"schedule\": {\n        \"type\": \"<string>\",\n        \"repeatInterval\": \"<number>\",\n        \"repeatIntervalUnit\": \"<string>\",\n        \"repeatWeekdays\": [\n            \"<number>\"\n        ],\n        \"nextRunAt\": \"<dateTime>\",\n        \"endAt\": \"<dateTime>\",\n        \"runNow\": false,\n        \"skipConcurrent\": true\n    },\n    \"module\": \"<string>\",\n    \"build\": {\n        \"service\": \"<string>\",\n        \"buildNumber\": \"<number>\",\n        \"user\": \"<string>\",\n        \"project\": \"<string>\",\n        \"vcs\": \"<string>\"\n    },\n    \"templateId\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/scans",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "scans"]
                },
                "description": "Requests to start a new scan with the provided configuration."
              },
              "response": [
                {
                  "name": "Failed to run the scan. Memory limit reached.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"<string>\",\n    \"tests\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"repositories\": [\n        {\n            \"id\": \"NeuraLegion/nexploit-cli\",\n            \"service\": \"github\",\n            \"name\": \"nexploit-cli\",\n            \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n        },\n        {\n            \"id\": \"NeuraLegion/nexploit-cli\",\n            \"service\": \"github\",\n            \"name\": \"nexploit-cli\",\n            \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n        }\n    ],\n    \"discoveryTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"poolSize\": \"<number>\",\n    \"crawlerUrls\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"attackParamLocations\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"extraHosts\": \"<object>\",\n    \"headers\": [\n        {\n            \"name\": \"Authorization\",\n            \"value\": \"Bearer token\",\n            \"mergeStrategy\": \"replace\"\n        },\n        {\n            \"name\": \"Authorization\",\n            \"value\": \"Bearer token\",\n            \"mergeStrategy\": \"replace\"\n        }\n    ],\n    \"fileId\": \"<string>\",\n    \"hostsFilter\": [\n        \"<hostname>\",\n        \"<hostname>\"\n    ],\n    \"repeaters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"smart\": \"<boolean>\",\n    \"skipStaticParams\": \"<boolean>\",\n    \"ignore\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"projectId\": \"<string>\",\n    \"exclusions\": {\n        \"urls\": [\n            \"<string>\"\n        ],\n        \"params\": [\n            \"<string>\"\n        ]\n    },\n    \"slowEpTimeout\": \"<number>\",\n    \"payloadExtractor\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"correlationIdXPath\": \"<string>\",\n    \"authObjectId\": \"<string>\",\n    \"schedule\": {\n        \"type\": \"<string>\",\n        \"repeatInterval\": \"<number>\",\n        \"repeatIntervalUnit\": \"<string>\",\n        \"repeatWeekdays\": [\n            \"<number>\"\n        ],\n        \"nextRunAt\": \"<dateTime>\",\n        \"endAt\": \"<dateTime>\",\n        \"runNow\": false,\n        \"skipConcurrent\": true\n    },\n    \"module\": \"<string>\",\n    \"build\": {\n        \"service\": \"<string>\",\n        \"buildNumber\": \"<number>\",\n        \"user\": \"<string>\",\n        \"project\": \"<string>\",\n        \"vcs\": \"<string>\"\n    },\n    \"templateId\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans"]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"INTERNAL_SERVER_ERROR\",\n \"message\": \"consequat labore veniam officia\",\n \"status\": 500,\n \"errors\": [\n  {\n   \"name\": \"ad deserunt consequat aute\",\n   \"message\": \"mollit laborum nulla\"\n  },\n  {\n   \"name\": \"veniam Duis nulla ex\",\n   \"message\": \"adipisicing\"\n  }\n ],\n \"stack\": [\n  \"magna culpa sunt\",\n  \"nulla do amet enim\"\n ]\n}"
                },
                {
                  "name": "Successfully run the scan.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"<string>\",\n    \"tests\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"repositories\": [\n        {\n            \"id\": \"NeuraLegion/nexploit-cli\",\n            \"service\": \"github\",\n            \"name\": \"nexploit-cli\",\n            \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n        },\n        {\n            \"id\": \"NeuraLegion/nexploit-cli\",\n            \"service\": \"github\",\n            \"name\": \"nexploit-cli\",\n            \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n        }\n    ],\n    \"discoveryTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"poolSize\": \"<number>\",\n    \"crawlerUrls\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"attackParamLocations\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"extraHosts\": \"<object>\",\n    \"headers\": [\n        {\n            \"name\": \"Authorization\",\n            \"value\": \"Bearer token\",\n            \"mergeStrategy\": \"replace\"\n        },\n        {\n            \"name\": \"Authorization\",\n            \"value\": \"Bearer token\",\n            \"mergeStrategy\": \"replace\"\n        }\n    ],\n    \"fileId\": \"<string>\",\n    \"hostsFilter\": [\n        \"<hostname>\",\n        \"<hostname>\"\n    ],\n    \"repeaters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"smart\": \"<boolean>\",\n    \"skipStaticParams\": \"<boolean>\",\n    \"ignore\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"projectId\": \"<string>\",\n    \"exclusions\": {\n        \"urls\": [\n            \"<string>\"\n        ],\n        \"params\": [\n            \"<string>\"\n        ]\n    },\n    \"slowEpTimeout\": \"<number>\",\n    \"payloadExtractor\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"correlationIdXPath\": \"<string>\",\n    \"authObjectId\": \"<string>\",\n    \"schedule\": {\n        \"type\": \"<string>\",\n        \"repeatInterval\": \"<number>\",\n        \"repeatIntervalUnit\": \"<string>\",\n        \"repeatWeekdays\": [\n            \"<number>\"\n        ],\n        \"nextRunAt\": \"<dateTime>\",\n        \"endAt\": \"<dateTime>\",\n        \"runNow\": false,\n        \"skipConcurrent\": true\n    },\n    \"module\": \"<string>\",\n    \"build\": {\n        \"service\": \"<string>\",\n        \"buildNumber\": \"<number>\",\n        \"user\": \"<string>\",\n        \"project\": \"<string>\",\n        \"vcs\": \"<string>\"\n    },\n    \"templateId\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "*/*"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Failed to run the scan.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"<string>\",\n    \"tests\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"repositories\": [\n        {\n            \"id\": \"NeuraLegion/nexploit-cli\",\n            \"service\": \"github\",\n            \"name\": \"nexploit-cli\",\n            \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n        },\n        {\n            \"id\": \"NeuraLegion/nexploit-cli\",\n            \"service\": \"github\",\n            \"name\": \"nexploit-cli\",\n            \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n        }\n    ],\n    \"discoveryTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"poolSize\": \"<number>\",\n    \"crawlerUrls\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"attackParamLocations\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"extraHosts\": \"<object>\",\n    \"headers\": [\n        {\n            \"name\": \"Authorization\",\n            \"value\": \"Bearer token\",\n            \"mergeStrategy\": \"replace\"\n        },\n        {\n            \"name\": \"Authorization\",\n            \"value\": \"Bearer token\",\n            \"mergeStrategy\": \"replace\"\n        }\n    ],\n    \"fileId\": \"<string>\",\n    \"hostsFilter\": [\n        \"<hostname>\",\n        \"<hostname>\"\n    ],\n    \"repeaters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"smart\": \"<boolean>\",\n    \"skipStaticParams\": \"<boolean>\",\n    \"ignore\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"projectId\": \"<string>\",\n    \"exclusions\": {\n        \"urls\": [\n            \"<string>\"\n        ],\n        \"params\": [\n            \"<string>\"\n        ]\n    },\n    \"slowEpTimeout\": \"<number>\",\n    \"payloadExtractor\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"correlationIdXPath\": \"<string>\",\n    \"authObjectId\": \"<string>\",\n    \"schedule\": {\n        \"type\": \"<string>\",\n        \"repeatInterval\": \"<number>\",\n        \"repeatIntervalUnit\": \"<string>\",\n        \"repeatWeekdays\": [\n            \"<number>\"\n        ],\n        \"nextRunAt\": \"<dateTime>\",\n        \"endAt\": \"<dateTime>\",\n        \"runNow\": false,\n        \"skipConcurrent\": true\n    },\n    \"module\": \"<string>\",\n    \"build\": {\n        \"service\": \"<string>\",\n        \"buildNumber\": \"<number>\",\n        \"user\": \"<string>\",\n        \"project\": \"<string>\",\n        \"vcs\": \"<string>\"\n    },\n    \"templateId\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"BAD_REQUEST\",\n \"message\": \"ullamco laborum\",\n \"status\": 400,\n \"errors\": [\n  {\n   \"name\": \"qui\",\n   \"message\": \"amet veniam\"\n  },\n  {\n   \"name\": \"enim commodo\",\n   \"message\": \"dolor do laborum aute tempor\"\n  }\n ],\n \"stack\": [\n  \"commodo est\",\n  \"velit dolor cillum aliqua\"\n ]\n}"
                }
              ]
            },
            {
              "name": "Get all available scans",
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "Authorization",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": true,
                      "type": "boolean"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/scans",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "scans"]
                },
                "description": "Returns a list of all the scans the logged-in user has access to."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"id\": \"ullamco est ame\",\n  \"organizationId\": \"qui pariatur mi\",\n  \"name\": \"in ut consequat laborum\",\n  \"discoveryTypes\": [\n   \"oas\",\n   \"archive\"\n  ],\n  \"startedById\": \"\",\n  \"module\": \"dast\",\n  \"entryPoints\": 0,\n  \"totalParams\": 0,\n  \"projectId\": \"ea cillum aliquip\",\n  \"repeater\": false,\n  \"status\": \"queued\",\n  \"elapsed\": -34905685.83661413,\n  \"discovering\": true,\n  \"issuesLength\": 0,\n  \"targets\": [\n   \"Icxizpvj.hxmr\",\n   \"Lq.cpax\"\n  ],\n  \"requests\": 0,\n  \"relationId\": \"magna ullam\",\n  \"components\": [\n   {\n    \"value\": 0,\n    \"name\": \"Excepteur\",\n    \"total\": 53997379.17926112\n   },\n   {\n    \"value\": 0,\n    \"name\": \"reprehenderit ad\",\n    \"total\": 25092482.02851367\n   }\n  ],\n  \"issuesBySeverity\": [\n   {\n    \"type\": \"High\",\n    \"number\": -49632238.22662956,\n    \"issuesByStatus\": [\n     {\n      \"status\": \"ignored\",\n      \"number\": 36975074.37792224\n     },\n     {\n      \"status\": \"ignored\",\n      \"number\": -7628255.948542327\n     }\n    ]\n   },\n   {\n    \"type\": \"Low\",\n    \"number\": -16336304.557102948,\n    \"issuesByStatus\": [\n     {\n      \"status\": \"new\",\n      \"number\": -7631507.651297569\n     },\n     {\n      \"status\": \"ignored\",\n      \"number\": -50279887.02028563\n     }\n    ]\n   }\n  ],\n  \"schedule\": {\n   \"type\": \"<string>\",\n   \"repeatInterval\": \"<number>\",\n   \"repeatIntervalUnit\": \"<string>\",\n   \"repeatWeekdays\": [\n    \"<number>\"\n   ],\n   \"nextRunAt\": \"<dateTime>\",\n   \"endAt\": \"<dateTime>\",\n   \"runNow\": false,\n   \"skipConcurrent\": true\n  },\n  \"startTime\": \"2021-04-05T02:13:37.161Z\",\n  \"createdAt\": \"2005-11-07T04:38:36.712Z\",\n  \"requestStatuses\": {},\n  \"techStack\": [\n   {\n    \"host\": \"do sed\",\n    \"tech\": \"sint aliquip officia\",\n    \"version\": \"sed ad in\"\n   },\n   {\n    \"host\": \"ut e\",\n    \"tech\": \"id cillum do laborum\",\n    \"version\": \"deserunt ut enim\"\n   }\n  ],\n  \"wafs\": [\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   }\n  ],\n  \"trafficMetrics\": [\n   {\n    \"host\": \"example.com\",\n    \"sent\": -19107643.690810144,\n    \"received\": -6302216.385319293\n   },\n   {\n    \"host\": \"example.com\",\n    \"sent\": -28841615.236423165,\n    \"received\": 39049473.32254824\n   }\n  ],\n  \"responseTime\": [\n   {\n    \"host\": \"example.com\",\n    \"value\": -12450276.394618064\n   },\n   {\n    \"host\": \"example.com\",\n    \"value\": -92186152.80817524\n   }\n  ],\n  \"smart\": false,\n  \"skipStaticParams\": false,\n  \"tests\": [\n   \"cookie_security\",\n   \"hrs\"\n  ]\n },\n {\n  \"id\": \"est L\",\n  \"organizationId\": \"mollit\",\n  \"name\": \"ut dolor\",\n  \"discoveryTypes\": [\n   \"crawler\",\n   \"oas\"\n  ],\n  \"startedById\": \"officia Ut ea\",\n  \"module\": \"dast\",\n  \"entryPoints\": 0,\n  \"totalParams\": 0,\n  \"projectId\": \"et culpa amet\",\n  \"repeater\": false,\n  \"status\": \"pending\",\n  \"elapsed\": 44521512.37215102,\n  \"discovering\": false,\n  \"issuesLength\": 0,\n  \"targets\": [\n   \"xLboWZHtelqCcROOUCqgGVBVInm.ro\",\n   \"bZkxWzwhOSRZCYy.sktl\"\n  ],\n  \"requests\": 0,\n  \"relationId\": \"ipsum dolor et anim\",\n  \"components\": [\n   {\n    \"value\": 0,\n    \"name\": \"veniam deserunt\",\n    \"total\": 32667178.65327929\n   },\n   {\n    \"value\": 0,\n    \"name\": \"irure velit\",\n    \"total\": 64432864.38280785\n   }\n  ],\n  \"issuesBySeverity\": [\n   {\n    \"type\": \"Low\",\n    \"number\": 15304916.722903222,\n    \"issuesByStatus\": [\n     {\n      \"status\": \"ignored\",\n      \"number\": 16536506.080889523\n     },\n     {\n      \"status\": \"ignored\",\n      \"number\": -75675717.75074558\n     }\n    ]\n   },\n   {\n    \"type\": \"Medium\",\n    \"number\": 32834764.333358154,\n    \"issuesByStatus\": [\n     {\n      \"status\": \"ignored\",\n      \"number\": 26031047.409695193\n     },\n     {\n      \"status\": \"resolved\",\n      \"number\": 89712432.29942769\n     }\n    ]\n   }\n  ],\n  \"schedule\": {\n   \"type\": \"<string>\",\n   \"repeatInterval\": \"<number>\",\n   \"repeatIntervalUnit\": \"<string>\",\n   \"repeatWeekdays\": [\n    \"<number>\"\n   ],\n   \"nextRunAt\": \"<dateTime>\",\n   \"endAt\": \"<dateTime>\",\n   \"runNow\": false,\n   \"skipConcurrent\": true\n  },\n  \"startTime\": \"2015-05-19T17:59:33.077Z\",\n  \"createdAt\": \"2016-05-02T02:10:31.394Z\",\n  \"requestStatuses\": {},\n  \"techStack\": [\n   {\n    \"host\": \"adipisicing laborum in mollit\",\n    \"tech\": \"consectetur pariatur\",\n    \"version\": \"aute do mollit\"\n   },\n   {\n    \"host\": \"dolore\",\n    \"tech\": \"anim Ut\",\n    \"version\": \"dolor enim\"\n   }\n  ],\n  \"wafs\": [\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   },\n   {\n    \"host\": \"example.com\",\n    \"name\": \"CloudFlare\",\n    \"manufacturer\": \"Cerber Tech\",\n    \"website\": \"https://www.wpcerber.com\"\n   }\n  ],\n  \"trafficMetrics\": [\n   {\n    \"host\": \"example.com\",\n    \"sent\": -90964933.38617902,\n    \"received\": 91149666.46371311\n   },\n   {\n    \"host\": \"example.com\",\n    \"sent\": 99133561.52815402,\n    \"received\": -84356488.75264765\n   }\n  ],\n  \"responseTime\": [\n   {\n    \"host\": \"example.com\",\n    \"value\": 33042082.46901861\n   },\n   {\n    \"host\": \"example.com\",\n    \"value\": 4488172.5631968975\n   }\n  ],\n  \"smart\": false,\n  \"skipStaticParams\": false,\n  \"tests\": [\n   \"backup_locations\",\n   \"retire_js\"\n  ]\n }\n]"
                }
              ]
            },
            {
              "name": "Get the summary",
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "Authorization",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": true,
                      "type": "boolean"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/scans/summary",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "scans", "summary"]
                },
                "description": "Returns the summary of the engines used the team or organization."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans/summary",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans", "summary"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"stats\": {\n  \"totalRunningScans\": 0,\n  \"totalScheduledScans\": 0,\n  \"totalQueuedScans\": 0\n }\n}"
                }
              ]
            },
            {
              "name": "Stop multiple scans",
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "Authorization",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": true,
                      "type": "boolean"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"scanIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/scans/stop",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "scans", "stop"]
                }
              },
              "response": [
                {
                  "name": "Scan(s) not found.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"scanIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans/stop",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans", "stop"]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                },
                {
                  "name": "Cannot stop unrecognized scan.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"scanIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans/stop",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans", "stop"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"BAD_REQUEST\",\n \"message\": \"ullamco laborum\",\n \"status\": 400,\n \"errors\": [\n  {\n   \"name\": \"qui\",\n   \"message\": \"amet veniam\"\n  },\n  {\n   \"name\": \"enim commodo\",\n   \"message\": \"dolor do laborum aute tempor\"\n  }\n ],\n \"stack\": [\n  \"commodo est\",\n  \"velit dolor cillum aliqua\"\n ]\n}"
                },
                {
                  "name": "Success.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"scanIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans/stop",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans", "stop"]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Delete multiple scans",
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "Authorization",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": true,
                      "type": "boolean"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"scanIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/scans/delete",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "scans", "delete"]
                }
              },
              "response": [
                {
                  "name": "Cannot delete unrecognized scan.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"scanIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans/delete",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans", "delete"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"BAD_REQUEST\",\n \"message\": \"ullamco laborum\",\n \"status\": 400,\n \"errors\": [\n  {\n   \"name\": \"qui\",\n   \"message\": \"amet veniam\"\n  },\n  {\n   \"name\": \"enim commodo\",\n   \"message\": \"dolor do laborum aute tempor\"\n  }\n ],\n \"stack\": [\n  \"commodo est\",\n  \"velit dolor cillum aliqua\"\n ]\n}"
                },
                {
                  "name": "Scan does not exist.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"scanIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans/delete",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans", "delete"]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                },
                {
                  "name": "Success.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"scanIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scans/delete",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scans", "delete"]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "webhooks/scans/{scan Id}",
          "item": [
            {
              "name": "sitemap",
              "item": [
                {
                  "name": "Create/update a sitemap.",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"url\": \"<uri>\",\n        \"method\": \"<string>\",\n        \"params\": \"<object>\"\n    },\n    {\n        \"url\": \"<uri>\",\n        \"method\": \"<string>\",\n        \"params\": \"<object>\"\n    }\n]"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/webhooks/scans/:scanId/sitemap",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "api",
                        "v1",
                        "webhooks",
                        "scans",
                        ":scanId",
                        "sitemap"
                      ],
                      "variable": [
                        {
                          "key": "scanId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n    {\n        \"url\": \"<uri>\",\n        \"method\": \"<string>\",\n        \"params\": \"<object>\"\n    },\n    {\n        \"url\": \"<uri>\",\n        \"method\": \"<string>\",\n        \"params\": \"<object>\"\n    }\n]"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/webhooks/scans/:scanId/sitemap",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "webhooks",
                            "scans",
                            ":scanId",
                            "sitemap"
                          ],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Create/update a sitemap.",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"url\": \"<uri>\",\n        \"method\": \"<string>\",\n        \"params\": \"<object>\"\n    },\n    {\n        \"url\": \"<uri>\",\n        \"method\": \"<string>\",\n        \"params\": \"<object>\"\n    }\n]"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/webhooks/scans/:scanId/sitemap",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "api",
                        "v1",
                        "webhooks",
                        "scans",
                        ":scanId",
                        "sitemap"
                      ],
                      "variable": [
                        {
                          "key": "scanId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n    {\n        \"url\": \"<uri>\",\n        \"method\": \"<string>\",\n        \"params\": \"<object>\"\n    },\n    {\n        \"url\": \"<uri>\",\n        \"method\": \"<string>\",\n        \"params\": \"<object>\"\n    }\n]"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/webhooks/scans/:scanId/sitemap",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "webhooks",
                            "scans",
                            ":scanId",
                            "sitemap"
                          ],
                          "variable": [
                            {
                              "key": "scanId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "Push runtime params.",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"elapsed\": \"<string>\",\n    \"status\": \"<string>\",\n    \"discovering\": false,\n    \"entry_points\": 0,\n    \"total_params\": 0,\n    \"requests\": 0,\n    \"component_status\": \"<object>\",\n    \"wafs\": \"<object>\",\n    \"request_statuses\": \"<object>\",\n    \"tech_stack\": [\n        {\n            \"host\": \"<string>\",\n            \"tech\": [\n                {\n                    \"name\": \"<string>\",\n                    \"version\": \"<string>\"\n                },\n                {\n                    \"name\": \"<string>\",\n                    \"version\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"host\": \"<string>\",\n            \"tech\": [\n                {\n                    \"name\": \"<string>\",\n                    \"version\": \"<string>\"\n                },\n                {\n                    \"name\": \"<string>\",\n                    \"version\": \"<string>\"\n                }\n            ]\n        }\n    ],\n    \"response_time\": \"<object>\",\n    \"traffic_metrics\": \"<object>\",\n    \"status_description\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/webhooks/scans/:scanId",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "webhooks", "scans", ":scanId"],
                  "variable": [
                    {
                      "key": "scanId",
                      "value": "<string>",
                      "description": "(Required) "
                    }
                  ]
                },
                "description": "Update the scan runtime params."
              },
              "response": [
                {
                  "name": "Success.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"elapsed\": \"7.23:59:59.999\",\n    \"status\": \"<string>\",\n    \"discovering\": false,\n    \"entry_points\": 0,\n    \"total_params\": 0,\n    \"requests\": 0,\n    \"component_status\": \"<object>\",\n    \"wafs\": \"<object>\",\n    \"request_statuses\": \"<object>\",\n    \"tech_stack\": [\n        {\n            \"host\": \"<string>\",\n            \"tech\": [\n                {\n                    \"name\": \"<string>\",\n                    \"version\": \"<string>\"\n                },\n                {\n                    \"name\": \"<string>\",\n                    \"version\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"host\": \"<string>\",\n            \"tech\": [\n                {\n                    \"name\": \"<string>\",\n                    \"version\": \"<string>\"\n                },\n                {\n                    \"name\": \"<string>\",\n                    \"version\": \"<string>\"\n                }\n            ]\n        }\n    ],\n    \"response_time\": \"<object>\",\n    \"traffic_metrics\": \"<object>\",\n    \"status_description\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/webhooks/scans/:scanId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "webhooks", "scans", ":scanId"],
                      "variable": [
                        {
                          "key": "scanId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Create issue",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"issue\": {\n        \"issue\": \"<number>\",\n        \"uuid\": \"<uuid>\",\n        \"metadata\": \"<object>\",\n        \"protocol\": \"<string>\",\n        \"payload\": {\n            \"body\": \"<string>\",\n            \"headers\": \"<object>\",\n            \"method\": \"<string>\",\n            \"url\": \"<url>\"\n        },\n        \"original_payload\": {\n            \"body\": \"<string>\",\n            \"headers\": \"<object>\",\n            \"method\": \"<string>\",\n            \"url\": \"<url>\"\n        },\n        \"response\": {\n            \"headers\": \"<object>\",\n            \"body\": \"<string>\",\n            \"status\": \"<number>\"\n        },\n        \"time\": \"<string>\",\n        \"screenshots\": [\n            {\n                \"screenshot\": \"<string>\",\n                \"title\": \"<string>\"\n            },\n            {\n                \"screenshot\": \"<string>\",\n                \"title\": \"<string>\"\n            }\n        ],\n        \"screenshot\": \"<string>\",\n        \"comments\": [\n            {\n                \"headline\": \"in pariatur ex ullamco\",\n                \"text\": \"Excepteur Duis\",\n                \"links\": [\n                    \"occaecat dolor ipsum dolore\",\n                    \"ex pariatur proident\"\n                ]\n            },\n            {\n                \"headline\": \"pariatur\",\n                \"text\": \"laboris\",\n                \"links\": [\n                    \"proident do occaecat incididunt enim\",\n                    \"sed est irure\"\n                ]\n            }\n        ]\n    }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/webhooks/scans/:scanId/issues",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "v1",
                    "webhooks",
                    "scans",
                    ":scanId",
                    "issues"
                  ],
                  "variable": [
                    {
                      "key": "scanId",
                      "value": "<string>",
                      "description": "(Required) "
                    }
                  ]
                },
                "description": "Create a new scan issue."
              },
              "response": [
                {
                  "name": "Issue created.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"issue\": {\n        \"issue\": \"<number>\",\n        \"uuid\": \"<uuid>\",\n        \"metadata\": \"<object>\",\n        \"protocol\": \"<string>\",\n        \"payload\": {\n            \"body\": \"<string>\",\n            \"headers\": \"<object>\",\n            \"method\": \"<string>\",\n            \"url\": \"<url>\"\n        },\n        \"original_payload\": {\n            \"body\": \"<string>\",\n            \"headers\": \"<object>\",\n            \"method\": \"<string>\",\n            \"url\": \"<url>\"\n        },\n        \"response\": {\n            \"headers\": \"<object>\",\n            \"body\": \"<string>\",\n            \"status\": \"<number>\"\n        },\n        \"time\": \"<string>\",\n        \"screenshots\": [\n            {\n                \"screenshot\": \"<string>\",\n                \"title\": \"<string>\"\n            },\n            {\n                \"screenshot\": \"<string>\",\n                \"title\": \"<string>\"\n            }\n        ],\n        \"screenshot\": \"<string>\",\n        \"comments\": [\n            {\n                \"headline\": \"in culpa Excepteur nisi\",\n                \"text\": \"anim ea ut\",\n                \"links\": [\n                    \"do veniam mollit aute\",\n                    \"sed minim pariatur esse\"\n                ]\n            },\n            {\n                \"headline\": \"non in\",\n                \"text\": \"sit\",\n                \"links\": [\n                    \"dolore cillum\",\n                    \"sed Lorem\"\n                ]\n            }\n        ]\n    }\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/webhooks/scans/:scanId/issues",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "api",
                        "v1",
                        "webhooks",
                        "scans",
                        ":scanId",
                        "issues"
                      ],
                      "variable": [
                        {
                          "key": "scanId"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "*/*"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Add logs to scan task",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"message\": \"<string>\",\n    \"timestamp\": \"<dateTime>\",\n    \"level\": \"info\",\n    \"extra\": \"<object>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/webhooks/scans/:scanId/events",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "v1",
                    "webhooks",
                    "scans",
                    ":scanId",
                    "events"
                  ],
                  "variable": [
                    {
                      "key": "scanId",
                      "value": "<string>",
                      "description": "(Required) "
                    }
                  ]
                },
                "description": "Add new engine logs"
              },
              "response": [
                {
                  "name": "Success.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"message\": \"<string>\",\n    \"timestamp\": \"<dateTime>\",\n    \"level\": \"info\",\n    \"extra\": \"<object>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/webhooks/scans/:scanId/events",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "api",
                        "v1",
                        "webhooks",
                        "scans",
                        ":scanId",
                        "events"
                      ],
                      "variable": [
                        {
                          "key": "scanId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Read scan config",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/webhooks/scans/:scanId/config",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "api",
                    "v1",
                    "webhooks",
                    "scans",
                    ":scanId",
                    "config"
                  ],
                  "variable": [
                    {
                      "key": "scanId",
                      "value": "<string>",
                      "description": "(Required) "
                    }
                  ]
                },
                "description": "Engine uses this method to read config for start scan"
              },
              "response": [
                {
                  "name": "Scan not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/webhooks/scans/:scanId/config",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "api",
                        "v1",
                        "webhooks",
                        "scans",
                        ":scanId",
                        "config"
                      ],
                      "variable": [
                        {
                          "key": "scanId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                },
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/webhooks/scans/:scanId/config",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "api",
                        "v1",
                        "webhooks",
                        "scans",
                        ":scanId",
                        "config"
                      ],
                      "variable": [
                        {
                          "key": "scanId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"agents_uuids\": [\n  \"Lorem in fugiat\",\n  \"veniam sint laboris reprehenderit est\"\n ],\n \"archive_url\": \"https://yNtvcRrgeocXIDqzVTaDKIKtZy.vyRTf-uwLV3I-VDotehqiB19oAdGmCjs9PkdmF.GlVWWHvCRpV-jJ\",\n \"attack_param_locations\": [\n  \"header\",\n  \"artifical-query\"\n ],\n \"auth_object\": {},\n \"correlation_id_xpath\": \"commodo tempor velit \",\n \"crawler\": true,\n \"exclusions\": {},\n \"extra_hosts\": {},\n \"hosts_filter\": [\n  \"Lorem mollit\",\n  \"sit minim eu deserunt\"\n ],\n \"payload_extractor\": [\n  \"veniam commodo aliquip\",\n  \"occaecat aute\"\n ],\n \"pool_size\": -9993081.064522922,\n \"push_addr\": \"https://PnyApx.uyaAvYGDJHKTL6VcqZesmUPwvC-V\",\n \"scan_modules\": \"core\",\n \"scan_name\": \"dolor voluptate do in\",\n \"scan_uuid\": \"ea ad enim ni\",\n \"skip_static_params\": false,\n \"smart_scan\": true,\n \"targets\": [\n  \"qui minim\",\n  \"dolor exercitation adipisicing officia\"\n ],\n \"tests_to_run\": [\n  \"html_injection\",\n  \"cookie_security\"\n ]\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "orgs",
          "item": [
            {
              "name": "{organization Id}",
              "item": [
                {
                  "name": "memberships",
                  "item": [
                    {
                      "name": "{member Id}",
                      "item": [
                        {
                          "name": "memberships Update Org Member",
                          "request": {
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"active\": \"<boolean>\",\n    \"email\": \"<email>\",\n    \"roleId\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"groups\": [\n        \"<string>\"\n    ]\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/memberships/:memberId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "orgs",
                                ":organizationId",
                                "memberships",
                                ":memberId"
                              ],
                              "variable": [
                                {
                                  "key": "organizationId",
                                  "value": "<string>",
                                  "description": "(Required) "
                                },
                                {
                                  "key": "memberId",
                                  "value": "<string>",
                                  "description": "(Required) "
                                }
                              ]
                            }
                          },
                          "response": [
                            {
                              "name": "Successful operation.",
                              "originalRequest": {
                                "method": "PATCH",
                                "header": [],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"active\": \"<boolean>\",\n    \"email\": \"<email>\",\n    \"roleId\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"groups\": [\n        \"<string>\"\n    ]\n}"
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/memberships/:memberId",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "orgs",
                                    ":organizationId",
                                    "memberships",
                                    ":memberId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "organizationId"
                                    },
                                    {
                                      "key": "memberId"
                                    }
                                  ]
                                }
                              },
                              "status": "No Content",
                              "code": 204,
                              "_postman_previewlanguage": "text",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "text/plain"
                                }
                              ],
                              "cookie": [],
                              "body": ""
                            }
                          ]
                        },
                        {
                          "name": "memberships Remove Org Member",
                          "request": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/memberships/:memberId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "orgs",
                                ":organizationId",
                                "memberships",
                                ":memberId"
                              ],
                              "variable": [
                                {
                                  "key": "organizationId",
                                  "value": "<string>",
                                  "description": "(Required) "
                                },
                                {
                                  "key": "memberId",
                                  "value": "<string>",
                                  "description": "(Required) "
                                }
                              ]
                            }
                          },
                          "response": [
                            {
                              "name": "Successful operation.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [],
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/memberships/:memberId",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "orgs",
                                    ":organizationId",
                                    "memberships",
                                    ":memberId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "organizationId"
                                    },
                                    {
                                      "key": "memberId"
                                    }
                                  ]
                                }
                              },
                              "status": "No Content",
                              "code": 204,
                              "_postman_previewlanguage": "text",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "text/plain"
                                }
                              ],
                              "cookie": [],
                              "body": ""
                            }
                          ]
                        },
                        {
                          "name": "memberships Get Org Member",
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/memberships/:memberId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "orgs",
                                ":organizationId",
                                "memberships",
                                ":memberId"
                              ],
                              "variable": [
                                {
                                  "key": "organizationId",
                                  "value": "<string>",
                                  "description": "(Required) "
                                },
                                {
                                  "key": "memberId",
                                  "value": "<string>",
                                  "description": "(Required) "
                                }
                              ]
                            }
                          },
                          "response": [
                            {
                              "name": "Success",
                              "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/memberships/:memberId",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "orgs",
                                    ":organizationId",
                                    "memberships",
                                    ":memberId"
                                  ],
                                  "variable": [
                                    {
                                      "key": "organizationId"
                                    },
                                    {
                                      "key": "memberId"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n \"id\": \"cupidatat\",\n \"email\": \"D1LrvhApJ1a@xDeb.cnbe\",\n \"firstName\": \"proident pariatur fugiat est\",\n \"lastName\": \"ea sunt consectetur aliquip\",\n \"userId\": \"velit ei\",\n \"organizationId\": \"ut sunt\",\n \"consents\": {\n  \"thirdParty\": \"<boolean>\",\n  \"smartScanOff\": \"<boolean>\",\n  \"extraTargetParamLocations\": \"<boolean>\",\n  \"businessLogicTests\": \"<boolean>\"\n },\n \"inviteStatus\": \"requested_to_be_invited\",\n \"roleId\": \"exercit\",\n \"multiFactorEnabled\": false,\n \"active\": false,\n \"sso\": false\n}"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "memberships Add Org Member",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "<Bearer Token>",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"email\": \"<email>\",\n    \"roleId\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"groups\": [\n        \"<string>\"\n    ]\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/memberships",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "orgs",
                            ":organizationId",
                            "memberships"
                          ],
                          "variable": [
                            {
                              "key": "organizationId",
                              "value": "<string>",
                              "description": "(Required) "
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Successful operation.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"email\": \"<email>\",\n    \"roleId\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"groups\": [\n        \"<string>\"\n    ]\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/memberships",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "orgs",
                                ":organizationId",
                                "memberships"
                              ],
                              "variable": [
                                {
                                  "key": "organizationId"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "*/*"
                            }
                          ],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "memberships Get Org Members",
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/memberships",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "orgs",
                            ":organizationId",
                            "memberships"
                          ],
                          "variable": [
                            {
                              "key": "organizationId",
                              "value": "<string>",
                              "description": "(Required) "
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/memberships",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "orgs",
                                ":organizationId",
                                "memberships"
                              ],
                              "variable": [
                                {
                                  "key": "organizationId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "[\n {\n  \"id\": \"n\",\n  \"email\": \"p51@NqZSdeTOPFwEfUZpSqTSxWyirvHDw.tc\",\n  \"firstName\": \"nisi dolor cupidatat\",\n  \"lastName\": \"dolor cupidatat culpa consequat mollit\",\n  \"userId\": \"Dui\",\n  \"organizationId\": \"ad dolore es\",\n  \"consents\": {\n   \"thirdParty\": \"<boolean>\",\n   \"smartScanOff\": \"<boolean>\",\n   \"extraTargetParamLocations\": \"<boolean>\",\n   \"businessLogicTests\": \"<boolean>\"\n  },\n  \"inviteStatus\": \"approved\",\n  \"roleId\": \"labore nulla ess\",\n  \"multiFactorEnabled\": false,\n  \"active\": false,\n  \"sso\": false\n },\n {\n  \"id\": \"non dolore reprehend\",\n  \"email\": \"24j6m7pbC@MRHqDaBgpxXbreajwtyrKeowIjUwmbNgU.xtqa\",\n  \"firstName\": \"dolor veniam elit\",\n  \"lastName\": \"com\",\n  \"userId\": \"laboris repre\",\n  \"organizationId\": \"id mi\",\n  \"consents\": {\n   \"thirdParty\": \"<boolean>\",\n   \"smartScanOff\": \"<boolean>\",\n   \"extraTargetParamLocations\": \"<boolean>\",\n   \"businessLogicTests\": \"<boolean>\"\n  },\n  \"inviteStatus\": \"approved\",\n  \"roleId\": \"magn\",\n  \"multiFactorEnabled\": false,\n  \"active\": false,\n  \"sso\": false\n }\n]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "targets",
                  "item": [
                    {
                      "name": "Verify targets",
                      "request": {
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization",
                              "type": "string"
                            },
                            {
                              "key": "value",
                              "value": true,
                              "type": "boolean"
                            },
                            {
                              "key": "in",
                              "value": "header",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"targets\": [\n        \"<string>\"\n    ],\n    \"repeaterId\": \"<string>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/targets",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "orgs",
                            ":organizationId",
                            "targets"
                          ],
                          "variable": [
                            {
                              "key": "organizationId",
                              "value": "<string>",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "description": "Verifies and returns a status of passed target URLs."
                      },
                      "response": [
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: apikey",
                                "key": "Authorization",
                                "value": "<API Key>"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"targets\": [\n        \"<string>\"\n    ],\n    \"repeaterId\": \"<string>\"\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/targets",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "orgs",
                                ":organizationId",
                                "targets"
                              ],
                              "variable": [
                                {
                                  "key": "organizationId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "[\n {\n  \"url\": \"nulla et \",\n  \"allowed\": false,\n  \"status\": \"unauthorized\"\n },\n {\n  \"url\": \"quis sed labore voluptate qui\",\n  \"allowed\": false,\n  \"status\": \"unauthorized\"\n }\n]"
                        }
                      ]
                    },
                    {
                      "name": "targets Set Targets",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "<Bearer Token>",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"authorizedTargets\": [\n        \"<string>\"\n    ]\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/targets",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "orgs",
                            ":organizationId",
                            "targets"
                          ],
                          "variable": [
                            {
                              "key": "organizationId",
                              "value": "<string>",
                              "description": "(Required) "
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Successful operation.",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"authorizedTargets\": [\n        \"<string>\"\n    ]\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/targets",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "orgs",
                                ":organizationId",
                                "targets"
                              ],
                              "variable": [
                                {
                                  "key": "organizationId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"authorizedTargets\": [\n  \"<string>\"\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "targets Set Targets From File",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "<Bearer Token>",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"file\": \"<binary>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/targets/upload",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "orgs",
                            ":organizationId",
                            "targets",
                            "upload"
                          ],
                          "variable": [
                            {
                              "key": "organizationId",
                              "value": "<string>",
                              "description": "(Required) "
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "<File too long | Too many parts | Too many files | Field name too long | Field value too long | Too many fields | Unexpected field>  [fieldName] Example: File too long file1",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"file\": \"<binary>\"\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/targets/upload",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "orgs",
                                ":organizationId",
                                "targets",
                                "upload"
                              ],
                              "variable": [
                                {
                                  "key": "organizationId"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"name\": \"BAD_REQUEST\",\n \"message\": \"ullamco laborum\",\n \"status\": 400,\n \"errors\": [\n  {\n   \"name\": \"qui\",\n   \"message\": \"amet veniam\"\n  },\n  {\n   \"name\": \"enim commodo\",\n   \"message\": \"dolor do laborum aute tempor\"\n  }\n ],\n \"stack\": [\n  \"commodo est\",\n  \"velit dolor cillum aliqua\"\n ]\n}"
                        },
                        {
                          "name": "Successful operation.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"file\": \"<binary>\"\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/targets/upload",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "orgs",
                                ":organizationId",
                                "targets",
                                "upload"
                              ],
                              "variable": [
                                {
                                  "key": "organizationId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"authorizedTargets\": [\n  \"<string>\"\n ]\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "quotas",
                  "item": [
                    {
                      "name": "{type}",
                      "item": [
                        {
                          "name": "Reset quota",
                          "request": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/quotas/:type",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "orgs",
                                ":organizationId",
                                "quotas",
                                ":type"
                              ],
                              "variable": [
                                {
                                  "key": "organizationId",
                                  "value": "<string>",
                                  "description": "(Required) "
                                },
                                {
                                  "key": "type",
                                  "value": "<object>",
                                  "description": "(Required) "
                                }
                              ]
                            }
                          },
                          "response": [
                            {
                              "name": "Quota successfully deleted.",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [],
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/quotas/:type",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "orgs",
                                    ":organizationId",
                                    "quotas",
                                    ":type"
                                  ],
                                  "variable": [
                                    {
                                      "key": "organizationId"
                                    },
                                    {
                                      "key": "type"
                                    }
                                  ]
                                }
                              },
                              "status": "No Content",
                              "code": 204,
                              "_postman_previewlanguage": "text",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "text/plain"
                                }
                              ],
                              "cookie": [],
                              "body": ""
                            }
                          ]
                        },
                        {
                          "name": "Override quota",
                          "request": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"limit\": \"<number>\",\n    \"type\": \"<string>\"\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/quotas/:type",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "orgs",
                                ":organizationId",
                                "quotas",
                                ":type"
                              ],
                              "variable": [
                                {
                                  "key": "organizationId",
                                  "value": "<string>",
                                  "description": "(Required) "
                                },
                                {
                                  "key": "type",
                                  "value": "<object>",
                                  "description": "(Required) "
                                }
                              ]
                            }
                          },
                          "response": [
                            {
                              "name": "Quota successful updated.",
                              "originalRequest": {
                                "method": "PUT",
                                "header": [],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"limit\": \"<number>\",\n    \"type\": \"<string>\"\n}"
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/quotas/:type",
                                  "host": ["{{baseUrl}}"],
                                  "path": [
                                    "api",
                                    "v1",
                                    "orgs",
                                    ":organizationId",
                                    "quotas",
                                    ":type"
                                  ],
                                  "variable": [
                                    {
                                      "key": "organizationId"
                                    },
                                    {
                                      "key": "type"
                                    }
                                  ]
                                }
                              },
                              "status": "No Content",
                              "code": 204,
                              "_postman_previewlanguage": "text",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "text/plain"
                                }
                              ],
                              "cookie": [],
                              "body": ""
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Get all tags",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "<Bearer Token>",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/quotas",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "orgs",
                            ":organizationId",
                            "quotas"
                          ],
                          "variable": [
                            {
                              "key": "organizationId",
                              "value": "<string>",
                              "description": "(Required) "
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/quotas",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "orgs",
                                ":organizationId",
                                "quotas"
                              ],
                              "variable": [
                                {
                                  "key": "organizationId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "[\n {\n  \"limit\": -92410747.61996257,\n  \"type\": \"file_storage\"\n },\n {\n  \"limit\": 14842123.541492075,\n  \"type\": \"users\"\n }\n]"
                        }
                      ]
                    },
                    {
                      "name": "Add new quota",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"limit\": \"<number>\",\n    \"type\": \"<string>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/quotas",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "orgs",
                            ":organizationId",
                            "quotas"
                          ],
                          "variable": [
                            {
                              "key": "organizationId",
                              "value": "<string>",
                              "description": "(Required) "
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Quota successfully created.",
                          "originalRequest": {
                            "method": "POST",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"limit\": \"<number>\",\n    \"type\": \"<string>\"\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/quotas",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "orgs",
                                ":organizationId",
                                "quotas"
                              ],
                              "variable": [
                                {
                                  "key": "organizationId"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"limit\": \"<number>\",\n \"type\": \"<string>\"\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "organizations Remove Organization",
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/orgs/:organizationId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "orgs", ":organizationId"],
                      "variable": [
                        {
                          "key": "organizationId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Successful operation.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/orgs/:organizationId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "orgs", ":organizationId"],
                          "variable": [
                            {
                              "key": "organizationId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "organizations Update Organization",
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"email\": \"<email>\",\n    \"active\": \"<boolean>\",\n    \"mfaEnabled\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"supportLead\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/orgs/:organizationId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "orgs", ":organizationId"],
                      "variable": [
                        {
                          "key": "organizationId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Successful operation.",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"email\": \"<email>\",\n    \"active\": \"<boolean>\",\n    \"mfaEnabled\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"supportLead\": \"<string>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/orgs/:organizationId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "orgs", ":organizationId"],
                          "variable": [
                            {
                              "key": "organizationId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "organizations Get Organization",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/orgs/:organizationId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "orgs", ":organizationId"],
                      "variable": [
                        {
                          "key": "organizationId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Successful operation.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/orgs/:organizationId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "orgs", ":organizationId"],
                          "variable": [
                            {
                              "key": "organizationId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"id\": \"proide\",\n \"name\": \"proident dolor aliqua dolore\",\n \"permissions\": {\n  \"businessLogic\": true,\n  \"dast\": false,\n  \"orgApiKeys\": false,\n  \"rbac\": true,\n  \"repeaters\": false,\n  \"sdlc\": false,\n  \"sso\": true,\n  \"zeroDay\": true,\n  \"onlyAuthorizedHosts\": true,\n  \"reportCustomization\": true,\n  \"reports\": true\n },\n \"createdBy\": \"cupidatat amet ut incididunt\",\n \"supportLead\": \"enim deserunt proident quis\",\n \"tagIds\": [\n  \"U\",\n  \"cillum ad consectetur aliquip\"\n ],\n \"quotas\": [\n  {\n   \"limit\": 77266453.87804264,\n   \"type\": \"users\"\n  },\n  {\n   \"limit\": 38317326.416514814,\n   \"type\": \"ticketing_integrations\"\n  }\n ],\n \"environmentKey\": \"eu sed dolor sunt\",\n \"authorizedTargets\": [\n  \"eu\",\n  \"Duis\"\n ],\n \"active\": true,\n \"mfaEnabled\": false,\n \"updatedAt\": \"1985-10-28T07:20:01.710Z\",\n \"createdAt\": \"1948-10-17T13:09:54.968Z\"\n}"
                    }
                  ]
                },
                {
                  "name": "organizations Set Permissions",
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"businessLogic\": \"<boolean>\",\n    \"dast\": \"<boolean>\",\n    \"orgApiKeys\": \"<boolean>\",\n    \"rbac\": \"<boolean>\",\n    \"repeaters\": \"<boolean>\",\n    \"sdlc\": \"<boolean>\",\n    \"sso\": \"<boolean>\",\n    \"zeroDay\": \"<boolean>\",\n    \"onlyAuthorizedHosts\": \"<boolean>\",\n    \"reportCustomization\": \"<boolean>\",\n    \"reports\": \"<boolean>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/permissions",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "api",
                        "v1",
                        "orgs",
                        ":organizationId",
                        "permissions"
                      ],
                      "variable": [
                        {
                          "key": "organizationId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Successful operation.",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"businessLogic\": \"<boolean>\",\n    \"dast\": \"<boolean>\",\n    \"orgApiKeys\": \"<boolean>\",\n    \"rbac\": \"<boolean>\",\n    \"repeaters\": \"<boolean>\",\n    \"sdlc\": \"<boolean>\",\n    \"sso\": \"<boolean>\",\n    \"zeroDay\": \"<boolean>\",\n    \"onlyAuthorizedHosts\": \"<boolean>\",\n    \"reportCustomization\": \"<boolean>\",\n    \"reports\": \"<boolean>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/permissions",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "orgs",
                            ":organizationId",
                            "permissions"
                          ],
                          "variable": [
                            {
                              "key": "organizationId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "organizations Set Tags",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"tags\": [\n        \"<string>\"\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/tags",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "orgs", ":organizationId", "tags"],
                      "variable": [
                        {
                          "key": "organizationId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Successful operation.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"tags\": [\n        \"<string>\"\n    ]\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/orgs/:organizationId/tags",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "orgs",
                            ":organizationId",
                            "tags"
                          ],
                          "variable": [
                            {
                              "key": "organizationId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "{org Id}/roles",
              "item": [
                {
                  "name": "{role Id}",
                  "item": [
                    {
                      "name": "Get role by ID",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "<Bearer Token>",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/orgs/:orgId/roles/:roleId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "orgs",
                            ":orgId",
                            "roles",
                            ":roleId"
                          ],
                          "variable": [
                            {
                              "key": "orgId",
                              "value": "<string>",
                              "description": "(Required) "
                            },
                            {
                              "key": "roleId",
                              "value": "<string>",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "description": "Returns a list of all the roles."
                      },
                      "response": [
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/orgs/:orgId/roles/:roleId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "orgs",
                                ":orgId",
                                "roles",
                                ":roleId"
                              ],
                              "variable": [
                                {
                                  "key": "orgId"
                                },
                                {
                                  "key": "roleId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"id\": \"eu exerci\",\n \"name\": \"laborum esse occaecat\",\n \"description\": \"consequat ut\",\n \"predefined\": false,\n \"scopes\": [\n  \"products\",\n  \"org:read\"\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Edit a role details",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "<Bearer Token>",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"scopes\": [\n        \"<string>\"\n    ]\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/orgs/:orgId/roles/:roleId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "orgs",
                            ":orgId",
                            "roles",
                            ":roleId"
                          ],
                          "variable": [
                            {
                              "key": "orgId",
                              "value": "<string>",
                              "description": "(Required) "
                            },
                            {
                              "key": "roleId",
                              "value": "<string>",
                              "description": "(Required) "
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"scopes\": [\n        \"<string>\"\n    ]\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/orgs/:orgId/roles/:roleId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "orgs",
                                ":orgId",
                                "roles",
                                ":roleId"
                              ],
                              "variable": [
                                {
                                  "key": "orgId"
                                },
                                {
                                  "key": "roleId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"id\": \"eu exerci\",\n \"name\": \"laborum esse occaecat\",\n \"description\": \"consequat ut\",\n \"predefined\": false,\n \"scopes\": [\n  \"products\",\n  \"org:read\"\n ]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Remove a role",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "<Bearer Token>",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/orgs/:orgId/roles/:roleId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "orgs",
                            ":orgId",
                            "roles",
                            ":roleId"
                          ],
                          "variable": [
                            {
                              "key": "orgId",
                              "value": "<string>",
                              "description": "(Required) "
                            },
                            {
                              "key": "roleId",
                              "value": "<string>",
                              "description": "(Required) The removed role ID"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/orgs/:orgId/roles/:roleId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "orgs",
                                ":orgId",
                                "roles",
                                ":roleId"
                              ],
                              "variable": [
                                {
                                  "key": "orgId"
                                },
                                {
                                  "key": "roleId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                        },
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/orgs/:orgId/roles/:roleId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "orgs",
                                ":orgId",
                                "roles",
                                ":roleId"
                              ],
                              "variable": [
                                {
                                  "key": "orgId"
                                },
                                {
                                  "key": "roleId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Get available roles",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/orgs/:orgId/roles",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "orgs", ":orgId", "roles"],
                      "variable": [
                        {
                          "key": "orgId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "description": "Returns a list of all the roles."
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/orgs/:orgId/roles",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "orgs", ":orgId", "roles"],
                          "variable": [
                            {
                              "key": "orgId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n {\n  \"id\": \"par\",\n  \"name\": \"voluptate dolore in aliqua laborum\",\n  \"description\": \"elit nisi\",\n  \"predefined\": true,\n  \"scopes\": [\n   \"integration.repos:read\",\n   \"auth-objects:test\"\n  ]\n },\n {\n  \"id\": \"do ut \",\n  \"name\": \"nostrud cupidatat Excepteur sit\",\n  \"description\": \"quis officia sed\",\n  \"predefined\": true,\n  \"scopes\": [\n   \"payment-methods\",\n   \"groups:admin\"\n  ]\n }\n]"
                    }
                  ]
                },
                {
                  "name": "Create a new role",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"scopes\": [\n        \"<string>\"\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/orgs/:orgId/roles",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "orgs", ":orgId", "roles"],
                      "variable": [
                        {
                          "key": "orgId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Created",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"scopes\": [\n        \"<string>\"\n    ]\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/orgs/:orgId/roles",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "orgs", ":orgId", "roles"],
                          "variable": [
                            {
                              "key": "orgId"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"id\": \"eu exerci\",\n \"name\": \"laborum esse occaecat\",\n \"description\": \"consequat ut\",\n \"predefined\": false,\n \"scopes\": [\n  \"products\",\n  \"org:read\"\n ]\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "organizations Add Organization",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"<email>\",\n    \"active\": \"<boolean>\",\n    \"mfaEnabled\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"supportLead\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/orgs",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "orgs"]
                }
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"email\": \"<email>\",\n    \"active\": \"<boolean>\",\n    \"mfaEnabled\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"supportLead\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/orgs",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "orgs"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "*/*"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "organizations Get Organizations",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/orgs",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "orgs"]
                }
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/orgs",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "orgs"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"id\": \"Excepte\",\n  \"name\": \"enim\",\n  \"permissions\": {\n   \"businessLogic\": true,\n   \"dast\": false,\n   \"orgApiKeys\": true,\n   \"rbac\": false,\n   \"repeaters\": false,\n   \"sdlc\": false,\n   \"sso\": false,\n   \"zeroDay\": false,\n   \"onlyAuthorizedHosts\": true,\n   \"reportCustomization\": false,\n   \"reports\": true\n  },\n  \"createdBy\": \"mag\",\n  \"supportLead\": \"ut\",\n  \"tagIds\": [\n   \"exercitation Ut aliqua\",\n   \"officia dolor exercitat\"\n  ],\n  \"quotas\": [\n   {\n    \"limit\": 80794222.52390125,\n    \"type\": \"scan_hours\"\n   },\n   {\n    \"limit\": 38196362.12345725,\n    \"type\": \"users\"\n   }\n  ],\n  \"environmentKey\": \"Ut nulla\",\n  \"authorizedTargets\": [\n   \"in ex\",\n   \"enim elit\"\n  ],\n  \"active\": true,\n  \"mfaEnabled\": false,\n  \"updatedAt\": \"2007-10-02T08:06:07.782Z\",\n  \"createdAt\": \"1979-05-17T12:28:53.835Z\"\n },\n {\n  \"id\": \"in\",\n  \"name\": \"irure commodo do Duis ea\",\n  \"permissions\": {\n   \"businessLogic\": true,\n   \"dast\": false,\n   \"orgApiKeys\": true,\n   \"rbac\": false,\n   \"repeaters\": true,\n   \"sdlc\": false,\n   \"sso\": true,\n   \"zeroDay\": true,\n   \"onlyAuthorizedHosts\": false,\n   \"reportCustomization\": false,\n   \"reports\": true\n  },\n  \"createdBy\": \"et incididunt\",\n  \"supportLead\": \"voluptate aliqua sunt\",\n  \"tagIds\": [\n   \"dolore quis magna nisi\",\n   \"ipsum\"\n  ],\n  \"quotas\": [\n   {\n    \"limit\": 66123114.1010254,\n    \"type\": \"users\"\n   },\n   {\n    \"limit\": -68624158.30863506,\n    \"type\": \"engines\"\n   }\n  ],\n  \"environmentKey\": \"reprehenderit\",\n  \"authorizedTargets\": [\n   \"cul\",\n   \"enim in ut consectetur\"\n  ],\n  \"active\": true,\n  \"mfaEnabled\": false,\n  \"updatedAt\": \"1975-05-01T06:51:18.639Z\",\n  \"createdAt\": \"2010-03-23T11:49:55.060Z\"\n }\n]"
                }
              ]
            }
          ]
        },
        {
          "name": "tags",
          "item": [
            {
              "name": "{tag Id}",
              "item": [
                {
                  "name": "Delete tag",
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/tags/:tagId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "tags", ":tagId"],
                      "variable": [
                        {
                          "key": "tagId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Tag successfully deleted.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/tags/:tagId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "tags", ":tagId"],
                          "variable": [
                            {
                              "key": "tagId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Update tag",
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/tags/:tagId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "tags", ":tagId"],
                      "variable": [
                        {
                          "key": "tagId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Tag successful updated.",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/tags/:tagId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "tags", ":tagId"],
                          "variable": [
                            {
                              "key": "tagId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "Get all tags",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/tags",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "tags"]
                }
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/tags",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "tags"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"id\": \"in aute nostru\",\n  \"name\": \"officia sint enim dolore\",\n  \"predefined\": true,\n  \"description\": \"sed et in\",\n  \"updatedAt\": \"1964-08-20T08:29:41.307Z\",\n  \"createdAt\": \"1962-01-10T07:23:46.798Z\"\n },\n {\n  \"id\": \"anim Ut eiusmo\",\n  \"name\": \"magna incididunt\",\n  \"predefined\": true,\n  \"description\": \"eu nostrud\",\n  \"updatedAt\": \"1991-08-25T05:28:52.334Z\",\n  \"createdAt\": \"1971-04-04T03:36:26.398Z\"\n }\n]"
                }
              ]
            },
            {
              "name": "Save new Tag",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/tags",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "tags"]
                }
              },
              "response": [
                {
                  "name": "Tag successfully created.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/tags",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "tags"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"id\": \"dolor ullamco null\",\n \"name\": \"voluptat\",\n \"predefined\": false,\n \"description\": \"sed dolore\",\n \"updatedAt\": \"2014-05-30T15:20:13.561Z\",\n \"createdAt\": \"2005-12-04T14:50:10.088Z\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "member/notifications",
          "item": [
            {
              "name": "member Notifications Get Notification Settings",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/member/notifications",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "member", "notifications"]
                }
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/member/notifications",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "member", "notifications"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"onError\": false,\n \"onIssueFound\": true,\n \"onScanStatusChanged\": false\n}"
                }
              ]
            },
            {
              "name": "member Notifications Update Notification Settings",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"onError\": \"<boolean>\",\n    \"onIssueFound\": \"<boolean>\",\n    \"onScanStatusChanged\": \"<boolean>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/member/notifications",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "member", "notifications"]
                }
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"onError\": \"<boolean>\",\n    \"onIssueFound\": \"<boolean>\",\n    \"onScanStatusChanged\": \"<boolean>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/member/notifications",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "member", "notifications"]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "issues/types",
          "item": [
            {
              "name": "{issue}",
              "item": [
                {
                  "name": "issue Types Update",
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"externalId\": \"<number>\",\n    \"severity\": \"<string>\",\n    \"remedy\": \"<string>\",\n    \"details\": \"<string>\",\n    \"name\": \"<string>\",\n    \"source\": [\n        \"<string>\"\n    ],\n    \"id\": \"<number>\",\n    \"reference\": [\n        \"<url>\",\n        \"<url>\"\n    ],\n    \"exposure\": \"<string>\",\n    \"cvss\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/issues/types/:issue",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "issues", "types", ":issue"],
                      "variable": [
                        {
                          "key": "issue",
                          "value": "<number>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Successful operation.",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"externalId\": \"<number>\",\n    \"severity\": \"<string>\",\n    \"remedy\": \"<string>\",\n    \"details\": \"<string>\",\n    \"name\": \"<string>\",\n    \"source\": [\n        \"<string>\"\n    ],\n    \"id\": \"<number>\",\n    \"reference\": [\n        \"<url>\",\n        \"<url>\"\n    ],\n    \"exposure\": \"<string>\",\n    \"cvss\": \"<string>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/issues/types/:issue",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "issues", "types", ":issue"],
                          "variable": [
                            {
                              "key": "issue"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "issue Types Get By Number",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/issues/types/:issue",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "issues", "types", ":issue"],
                      "variable": [
                        {
                          "key": "issue",
                          "value": "<number>",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "description": "Get issue types by number"
                  },
                  "response": [
                    {
                      "name": "Successful operation.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/issues/types/:issue",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "issues", "types", ":issue"],
                          "variable": [
                            {
                              "key": "issue"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"id\": -33314788.94554416,\n \"externalId\": -51105866.43179933,\n \"severity\": \"Medium\",\n \"remedy\": \"sed laboris\",\n \"details\": \"qui\",\n \"name\": \"cillum anim in Excepteur elit\",\n \"reference\": [\n  \"dolor et cup\",\n  \"qui ipsum consectetur dolor\"\n ],\n \"exposure\": \"tempor mi\",\n \"source\": [\n  \"dast\",\n  \"dast\"\n ],\n \"cvss\": \"qui sunt Duis pariatur\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Creates a new issue type in database",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"externalId\": \"<number>\",\n    \"severity\": \"<string>\",\n    \"remedy\": \"<string>\",\n    \"details\": \"<string>\",\n    \"name\": \"<string>\",\n    \"source\": [\n        \"<string>\"\n    ],\n    \"id\": \"<number>\",\n    \"reference\": [\n        \"<url>\",\n        \"<url>\"\n    ],\n    \"exposure\": \"<string>\",\n    \"cvss\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/issues/types",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "issues", "types"]
                },
                "description": "Create a new issue type record"
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"externalId\": \"<number>\",\n    \"severity\": \"<string>\",\n    \"remedy\": \"<string>\",\n    \"details\": \"<string>\",\n    \"name\": \"<string>\",\n    \"source\": [\n        \"<string>\"\n    ],\n    \"id\": \"<number>\",\n    \"reference\": [\n        \"<url>\",\n        \"<url>\"\n    ],\n    \"exposure\": \"<string>\",\n    \"cvss\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/issues/types",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "issues", "types"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "*/*"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "issue Types Bulk Update",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"severity\": \"<string>\",\n    \"issueTypeIds\": [\n        \"<number>\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/issues/types",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "issues", "types"]
                }
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"severity\": \"<string>\",\n    \"issueTypeIds\": [\n        \"<number>\"\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/issues/types",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "issues", "types"]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "issue Types Get All",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/issues/types",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "issues", "types"]
                },
                "description": "Get all issue types"
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/issues/types",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "issues", "types"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"id\": -7125015.305299208,\n  \"externalId\": 75937232.78258762,\n  \"severity\": \"High\",\n  \"remedy\": \"qui enim minim dolore\",\n  \"details\": \"esse veniam culpa laboris\",\n  \"name\": \"deserunt Excepteur\",\n  \"reference\": [\n   \"veniam reprehenderit tempor\",\n   \"dolore ex et in\"\n  ],\n  \"exposure\": \"ipsum qui consectetur ea dolor\",\n  \"source\": [\n   \"dast\",\n   \"fuzzer\"\n  ],\n  \"cvss\": \"in nulla\"\n },\n {\n  \"id\": -88716239.8760764,\n  \"externalId\": 59721492.42607063,\n  \"severity\": \"Low\",\n  \"remedy\": \"culpa dolor Lorem consequat laboris\",\n  \"details\": \"elit dolor\",\n  \"name\": \"eu do\",\n  \"reference\": [\n   \"ullamco\",\n   \"ex\"\n  ],\n  \"exposure\": \"culpa\",\n  \"source\": [\n   \"dast\",\n   \"fuzzer\"\n  ],\n  \"cvss\": \"incididunt eu dolore cupidatat\"\n }\n]"
                }
              ]
            },
            {
              "name": "Imports/updates issue types in database from a file",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"file\": \"<binary>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/issues/types/import",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "issues", "types", "import"]
                },
                "description": "Import issue types from file (csv or json)"
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"file\": \"<binary>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/issues/types/import",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "issues", "types", "import"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "*/*"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "<File too long | Too many parts | Too many files | Field name too long | Field value too long | Too many fields | Unexpected field>  [fieldName] Example: File too long file1",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"file\": \"<binary>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/issues/types/import",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "issues", "types", "import"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"BAD_REQUEST\",\n \"message\": \"ullamco laborum\",\n \"status\": 400,\n \"errors\": [\n  {\n   \"name\": \"qui\",\n   \"message\": \"amet veniam\"\n  },\n  {\n   \"name\": \"enim commodo\",\n   \"message\": \"dolor do laborum aute tempor\"\n  }\n ],\n \"stack\": [\n  \"commodo est\",\n  \"velit dolor cillum aliqua\"\n ]\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "report-options",
          "item": [
            {
              "name": "cover",
              "item": [
                {
                  "name": "report Settings Upload Cover",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "image/*"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"file\": \"<binary>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/report-options/cover",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "report-options", "cover"]
                    },
                    "description": "Import cover image"
                  },
                  "response": [
                    {
                      "name": "<File too long | Too many parts | Too many files | Field name too long | Field value too long | Too many fields | Unexpected field>  [fieldName] Example: File too long file1",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"file\": \"<binary>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/report-options/cover",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "report-options", "cover"]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"BAD_REQUEST\",\n \"message\": \"ullamco laborum\",\n \"status\": 400,\n \"errors\": [\n  {\n   \"name\": \"qui\",\n   \"message\": \"amet veniam\"\n  },\n  {\n   \"name\": \"enim commodo\",\n   \"message\": \"dolor do laborum aute tempor\"\n  }\n ],\n \"stack\": [\n  \"commodo est\",\n  \"velit dolor cillum aliqua\"\n ]\n}"
                    },
                    {
                      "name": "Path of the uploaded file.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"file\": \"<binary>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/report-options/cover",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "report-options", "cover"]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"index_random.png\"\n}"
                    }
                  ]
                },
                {
                  "name": "report Settings Get Cover Image",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/report-options/cover",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "report-options", "cover"]
                    },
                    "description": "Get cover image"
                  },
                  "response": [
                    {
                      "name": "Successful operation.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/report-options/cover",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "report-options", "cover"]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"signedUrl\": \"https://nexploit-static.s3.amazonaws.com/index_0f1de034e0284c60157e9fbc223c408d.png\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "page",
              "item": [
                {
                  "name": "report Settings Upload Logo",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "image/*"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"file\": \"<binary>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/report-options/page",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "report-options", "page"]
                    },
                    "description": "Import page logo image"
                  },
                  "response": [
                    {
                      "name": "Path of the uploaded file.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"file\": \"<binary>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/report-options/page",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "report-options", "page"]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"index_random.png\"\n}"
                    },
                    {
                      "name": "<File too long | Too many parts | Too many files | Field name too long | Field value too long | Too many fields | Unexpected field>  [fieldName] Example: File too long file1",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"file\": \"<binary>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/report-options/page",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "report-options", "page"]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"BAD_REQUEST\",\n \"message\": \"ullamco laborum\",\n \"status\": 400,\n \"errors\": [\n  {\n   \"name\": \"qui\",\n   \"message\": \"amet veniam\"\n  },\n  {\n   \"name\": \"enim commodo\",\n   \"message\": \"dolor do laborum aute tempor\"\n  }\n ],\n \"stack\": [\n  \"commodo est\",\n  \"velit dolor cillum aliqua\"\n ]\n}"
                    }
                  ]
                },
                {
                  "name": "report Settings Get Page Logo",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/report-options/page",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "report-options", "page"]
                    },
                    "description": "Get cover image"
                  },
                  "response": [
                    {
                      "name": "Successful operation.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/report-options/page",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "report-options", "page"]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"signedUrl\": \"https://nexploit-static.s3.amazonaws.com/index_0f1de034e0284c60157e9fbc223c408d.png\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Return the report config for organization.",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/report-options",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "report-options"]
                }
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/report-options",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "report-options"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"colors\": {\n  \"WHITE\": [\n   255\n  ],\n  \"TEXT\": [\n   255\n  ],\n  \"TEXT_LIGHT\": [\n   255\n  ],\n  \"LINK\": [\n   255\n  ],\n  \"FOOTER\": [\n   255\n  ],\n  \"HEADER_DANGER\": [\n   255\n  ],\n  \"HEADER_INFO\": [\n   255\n  ],\n  \"BG_HEADER\": [\n   255\n  ],\n  \"BORDER\": [\n   255\n  ],\n  \"DANGER\": [\n   255\n  ],\n  \"SUCCESS\": [\n   255\n  ],\n  \"SEVERITY_MEDIUM\": [\n   255\n  ],\n  \"SEVERITY_LOW\": [\n   255\n  ]\n },\n \"comments\": {\n  \"issueHeader\": {\n   \"x\": 1224421.877903968,\n   \"y\": -77557054.96488506,\n   \"width\": -38334323.26539956,\n   \"font\": {\n    \"color\": {},\n    \"lineHeight\": 55031441.190461606,\n    \"name\": \"in cupidatat ad\",\n    \"size\": -11609362.26899767,\n    \"style\": \"bold\"\n   },\n   \"text\": \"aliquip co\",\n   \"maxLines\": 3705983.322107896,\n   \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n  },\n  \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n },\n \"cover\": {\n  \"image\": {\n   \"width\": -40931451.49685351,\n   \"height\": -48641397.03926224,\n   \"x\": 21299791.54632333,\n   \"y\": -25073698.46673803,\n   \"url\": \"cover-a4-nexdast.png\"\n  },\n  \"scanName\": {\n   \"x\": -67708547.88656373,\n   \"y\": 41626683.60221028,\n   \"width\": -25005439.841784984,\n   \"font\": {\n    \"color\": {},\n    \"lineHeight\": -34784605.78331788,\n    \"name\": \"fugiat sit mollit voluptate\",\n    \"size\": 13474555.247499257,\n    \"style\": \"bold\"\n   },\n   \"text\": \"cillum occaecat aliquip\",\n   \"maxLines\": 14791304.17263566,\n   \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n  },\n  \"generatedBy\": {\n   \"x\": -75551683.0639452,\n   \"yAsOffset\": true,\n   \"y\": 8979754.667364314,\n   \"width\": -8399067.11662884,\n   \"font\": {\n    \"color\": {},\n    \"lineHeight\": 5121225.133588597,\n    \"name\": \"re\",\n    \"size\": -24101913.20571649,\n    \"style\": \"bold\"\n   },\n   \"text\": \"esse velit ipsum\",\n   \"maxLines\": -92322890.7783872,\n   \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n  }\n },\n \"defaultDateFormat\": \"2005-03-03T08:42:41.749Z\",\n \"font\": {\n  \"color\": {},\n  \"lineHeight\": 72679535.71027145,\n  \"name\": \"laborum dolor cupidatat officia\",\n  \"size\": 99063736.33359048,\n  \"style\": \"bold\"\n },\n \"header\": {\n  \"x\": -6463823.374656871,\n  \"arrow\": false,\n  \"y\": 77528943.3387096,\n  \"width\": 72506064.23041362,\n  \"font\": {\n   \"color\": {},\n   \"lineHeight\": -29027918.685203463,\n   \"name\": \"non voluptate\",\n   \"size\": -69398231.59699121,\n   \"style\": \"bold\"\n  },\n  \"text\": \"culpa est consectetur\",\n  \"maxLines\": 27553334.36862059,\n  \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n },\n \"issue\": {\n  \"header\": {\n   \"x\": -54099613.08598277,\n   \"y\": 92937322.7596811,\n   \"width\": -94201296.86337058,\n   \"font\": {\n    \"color\": {},\n    \"lineHeight\": 60540857.12634817,\n    \"name\": \"in aliqua ut\",\n    \"size\": 71478972.56727424,\n    \"style\": \"bold\"\n   },\n   \"text\": \"ut cupidatat dolor ea\",\n   \"maxLines\": -61745718.50109172,\n   \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n  },\n  \"backLink\": {\n   \"x\": -16925547.574981257,\n   \"y\": -57459865.30601801,\n   \"width\": -64541805.92109724,\n   \"font\": {\n    \"color\": {},\n    \"lineHeight\": 42150363.054151446,\n    \"name\": \"commodo ad am\",\n    \"size\": 74224468.32997021,\n    \"style\": \"normal\"\n   },\n   \"text\": \"eiusmod\",\n   \"maxLines\": -33293286.11044646,\n   \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n  }\n },\n \"locale\": \"mollit nisi\",\n \"page\": {\n  \"margins\": {\n   \"top\": -27279326.80724092,\n   \"right\": -16322121.40391998,\n   \"bottom\": -38644485.82868123,\n   \"left\": 44363520.96768141\n  },\n  \"logo\": {\n   \"width\": 17720142.119118705,\n   \"height\": -90243298.72025509,\n   \"x\": 38907070.866624504,\n   \"y\": -51319225.83184467,\n   \"url\": \"cover-a4-nexdast.png\"\n  },\n  \"footer\": {\n   \"font\": {\n    \"color\": {},\n    \"lineHeight\": 20141637.385969296,\n    \"name\": \"non sit et elit\",\n    \"size\": 6540835.723797932,\n    \"style\": \"bold\"\n   },\n   \"rect\": {\n    \"width\": 5508569.932916269,\n    \"height\": 34465850.85250461,\n    \"x\": 35296944.6958563,\n    \"y\": 85901321.78123274\n   },\n   \"link\": {\n    \"x\": 71822632.19807905,\n    \"url\": \"assets/pdf/cover-a4-nexdast.png\",\n    \"y\": -34276914.47220087,\n    \"width\": -96839555.26858194,\n    \"font\": {\n     \"color\": {},\n     \"lineHeight\": 13731219.380829662,\n     \"name\": \"laboris irure\",\n     \"size\": -82682987.6906869,\n     \"style\": \"normal\"\n    },\n    \"text\": \"occaecat ipsum veniam cillum\",\n    \"maxLines\": -57530130.776786014,\n    \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n   },\n   \"topLink\": {\n    \"x\": -10903608.279924408,\n    \"y\": -83006060.72518733,\n    \"width\": 5830822.4286828935,\n    \"font\": {\n     \"color\": {},\n     \"lineHeight\": 57930809.4550769,\n     \"name\": \"sunt\",\n     \"size\": 59161840.579173535,\n     \"style\": \"bold\"\n    },\n    \"text\": \"cupidatat pariatur Lorem cillum in\",\n    \"maxLines\": 233222.50599955022,\n    \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n   },\n   \"pageNumber\": {\n    \"x\": 94671134.65401745,\n    \"y\": 69022040.52832279,\n    \"width\": 64185851.03898135,\n    \"font\": {\n     \"color\": {},\n     \"lineHeight\": 46096698.14529759,\n     \"name\": \"culpa cillum\",\n     \"size\": -21866224.210689694,\n     \"style\": \"normal\"\n    },\n    \"text\": \"aliqua esse labore ex\",\n    \"maxLines\": 44071810.29262358,\n    \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n   }\n  }\n },\n \"producer\": \"eu\",\n \"subHeader\": {\n  \"x\": 12440707.205825731,\n  \"y\": 12007968.093229368,\n  \"width\": 2141234.7936773896,\n  \"font\": {\n   \"color\": {},\n   \"lineHeight\": 1901371.0731293112,\n   \"name\": \"dolore esse\",\n   \"size\": 66096017.2320776,\n   \"style\": \"bold\"\n  },\n  \"text\": \"magna nostrud\",\n  \"maxLines\": -31355406.242565602,\n  \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n }\n}"
                },
                {
                  "name": "Unauthorized access.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/report-options",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "report-options"]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"FORBIDDEN\",\n \"message\": \"nostrud\",\n \"status\": 403,\n \"errors\": [\n  {\n   \"name\": \"tempor magna amet sed\",\n   \"message\": \"in Ut\"\n  },\n  {\n   \"name\": \"culpa Excepteur\",\n   \"message\": \"deserunt\"\n  }\n ],\n \"stack\": [\n  \"anim nisi velit\",\n  \"Ut laborum\"\n ]\n}"
                }
              ]
            },
            {
              "name": "Create and modify report config for organization.",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"colors\": \"<object>\",\n    \"comments\": {\n        \"issueHeader\": {\n            \"x\": 44936572.63296464,\n            \"y\": -92013519.97275893,\n            \"width\": 60479701.267980605,\n            \"font\": {\n                \"color\": {},\n                \"lineHeight\": -67084552.76710654,\n                \"name\": \"elit sit\",\n                \"size\": 69204458.77969053,\n                \"style\": \"bold\"\n            },\n            \"text\": \"quis occae\",\n            \"maxLines\": 46897845.191670656,\n            \"dateFormat\": \"incididunt sed ea id\"\n        },\n        \"dateFormat\": \"id\"\n    },\n    \"cover\": {\n        \"image\": {\n            \"width\": -55820227.53454292,\n            \"height\": -80939407.374724,\n            \"x\": -29067486.18207194,\n            \"y\": -71923798.26479,\n            \"url\": \"do Duis ea sit\"\n        },\n        \"scanName\": {\n            \"x\": 78394546.63417697,\n            \"y\": 32081206.818270713,\n            \"width\": -85774445.17972025,\n            \"font\": {\n                \"color\": {},\n                \"lineHeight\": 80708839.92320871,\n                \"name\": \"consectetur reprehenderit\",\n                \"size\": 17587904.034120068,\n                \"style\": \"bold\"\n            },\n            \"text\": \"elit la\",\n            \"maxLines\": -67941161.41512245,\n            \"dateFormat\": \"sit dolore nulla\"\n        },\n        \"generatedBy\": {\n            \"x\": -46112854.84122063,\n            \"yAsOffset\": false,\n            \"y\": 77587572.77198339,\n            \"width\": 85512785.91678128,\n            \"font\": {\n                \"color\": {},\n                \"lineHeight\": -37753596.67712408,\n                \"name\": \"cupidatat Duis\",\n                \"size\": -26955375.169835255,\n                \"style\": \"normal\"\n            },\n            \"text\": \"quis amet do\",\n            \"maxLines\": -34794192.21504729,\n            \"dateFormat\": \"amet labore nisi\"\n        }\n    },\n    \"font\": {\n        \"color\": {},\n        \"lineHeight\": 80541413.57517487,\n        \"name\": \"Excepteur do aute dolor\",\n        \"size\": -79722278.68113819,\n        \"style\": \"bold\"\n    },\n    \"header\": {\n        \"x\": 48038594.793387234,\n        \"arrow\": false,\n        \"y\": -25273223.07923989,\n        \"width\": -51730557.70347155,\n        \"font\": {\n            \"color\": {},\n            \"lineHeight\": -50035971.269173585,\n            \"name\": \"eiusmod\",\n            \"size\": 38739590.9882012,\n            \"style\": \"normal\"\n        },\n        \"text\": \"dolore occaecat ex\",\n        \"maxLines\": 85355396.00214803,\n        \"dateFormat\": \"cillum sunt\"\n    },\n    \"issue\": {\n        \"header\": {\n            \"x\": 73321620.75771108,\n            \"y\": 43534136.77168745,\n            \"width\": -59788704.004742585,\n            \"font\": {\n                \"color\": {},\n                \"lineHeight\": -62667560.717829265,\n                \"name\": \"dolor sed\",\n                \"size\": -67728944.47425827,\n                \"style\": \"normal\"\n            },\n            \"text\": \"dolore nostrud reprehenderit ea\",\n            \"maxLines\": -44740517.953845374,\n            \"dateFormat\": \"qui Ut\"\n        },\n        \"backLink\": {\n            \"x\": -8349782.658504561,\n            \"y\": -77329048.63698956,\n            \"width\": -4814715.7330335975,\n            \"font\": {\n                \"color\": {},\n                \"lineHeight\": -41854138.03190783,\n                \"name\": \"consequat mollit \",\n                \"size\": 97099447.42687142,\n                \"style\": \"bold\"\n            },\n            \"text\": \"consequat eu occaecat Excepteur\",\n            \"maxLines\": 16008168.288849503,\n            \"dateFormat\": \"et irure\"\n        }\n    },\n    \"locale\": \"<string>\",\n    \"page\": {\n        \"margins\": {\n            \"top\": 70372402.17771173,\n            \"right\": 9696790.195631564,\n            \"bottom\": 89366605.90829834,\n            \"left\": 96486982.91550142\n        },\n        \"logo\": {\n            \"width\": 65797095.07385528,\n            \"height\": -12640343.120781288,\n            \"x\": 78502511.99095947,\n            \"y\": -95828807.83260217,\n            \"url\": \"do deserunt\"\n        },\n        \"footer\": {\n            \"font\": {\n                \"color\": {},\n                \"lineHeight\": 12463357.447468176,\n                \"name\": \"Duis irure labore elit\",\n                \"size\": 8503122.61680673,\n                \"style\": \"bold\"\n            },\n            \"rect\": {\n                \"width\": -71663354.1748937,\n                \"height\": -19534677.505311787,\n                \"x\": 37161628.23428172,\n                \"y\": 18889328.593130454\n            },\n            \"link\": {\n                \"x\": -22423542.840055883,\n                \"url\": \"laboris sunt ut\",\n                \"y\": 72043334.67765704,\n                \"width\": 78884566.99191248,\n                \"font\": {\n                    \"color\": {},\n                    \"lineHeight\": 36062642.722812474,\n                    \"name\": \"Ut proident anim\",\n                    \"size\": 9375650.159635067,\n                    \"style\": \"bold\"\n                },\n                \"text\": \"elit\",\n                \"maxLines\": -45558478.19489145,\n                \"dateFormat\": \"occaecat incididunt consequat amet\"\n            },\n            \"topLink\": {\n                \"x\": 37798547.34482768,\n                \"y\": -86034462.7070286,\n                \"width\": -57577654.729702845,\n                \"font\": {\n                    \"color\": {},\n                    \"lineHeight\": 97651033.54606804,\n                    \"name\": \"culpa labore\",\n                    \"size\": 65900320.93151051,\n                    \"style\": \"normal\"\n                },\n                \"text\": \"exercitation dolore\",\n                \"maxLines\": 66380065.83373439,\n                \"dateFormat\": \"sit dolor non laboris\"\n            },\n            \"pageNumber\": {\n                \"x\": -51815901.46849131,\n                \"y\": 90015990.10035136,\n                \"width\": 85208023.55115321,\n                \"font\": {\n                    \"color\": {},\n                    \"lineHeight\": 38126145.928053826,\n                    \"name\": \"ullamco ad\",\n                    \"size\": 8715050.68374829,\n                    \"style\": \"bold\"\n                },\n                \"text\": \"ex do in nulla eu\",\n                \"maxLines\": -55386144.1171724,\n                \"dateFormat\": \"non laborum sunt\"\n            }\n        }\n    },\n    \"producer\": \"<string>\",\n    \"subHeader\": {\n        \"x\": 52794633.81950599,\n        \"y\": -77904189.99932505,\n        \"width\": 9633178.920682892,\n        \"font\": {\n            \"color\": {},\n            \"lineHeight\": 47621644.87858215,\n            \"name\": \"laboris mollit\",\n            \"size\": -23579386.331597492,\n            \"style\": \"normal\"\n        },\n        \"text\": \"Lorem\",\n        \"maxLines\": -80532885.89760377,\n        \"dateFormat\": \"ex nisi\"\n    },\n    \"defaultDateFormat\": \"<dateTime>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/report-options",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "report-options"]
                }
              },
              "response": [
                {
                  "name": "Successful operation.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"colors\": {\n        \"WHITE\": [\n            255\n        ],\n        \"TEXT\": [\n            255\n        ],\n        \"TEXT_LIGHT\": [\n            255\n        ],\n        \"LINK\": [\n            255\n        ],\n        \"FOOTER\": [\n            255\n        ],\n        \"HEADER_DANGER\": [\n            255\n        ],\n        \"HEADER_INFO\": [\n            255\n        ],\n        \"BG_HEADER\": [\n            255\n        ],\n        \"BORDER\": [\n            255\n        ],\n        \"DANGER\": [\n            255\n        ],\n        \"SUCCESS\": [\n            255\n        ],\n        \"SEVERITY_MEDIUM\": [\n            255\n        ],\n        \"SEVERITY_LOW\": [\n            255\n        ]\n    },\n    \"comments\": {\n        \"issueHeader\": {\n            \"x\": 16840198.313397005,\n            \"y\": 26957590.59923932,\n            \"width\": 21847861.0275795,\n            \"font\": {\n                \"color\": {},\n                \"lineHeight\": 98468161.68745178,\n                \"name\": \"nisi in\",\n                \"size\": 1107638.7829309702,\n                \"style\": \"bold\"\n            },\n            \"text\": \"mollit sit\",\n            \"maxLines\": 36284839.602791935,\n            \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n        },\n        \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n    },\n    \"cover\": {\n        \"image\": {\n            \"width\": -58717965.12072733,\n            \"height\": 23111145.148760363,\n            \"x\": -6516797.591808915,\n            \"y\": -53374008.03938137,\n            \"url\": \"cover-a4-nexdast.png\"\n        },\n        \"scanName\": {\n            \"x\": -78925426.77223177,\n            \"y\": -76669972.17280436,\n            \"width\": 28169108.925147235,\n            \"font\": {\n                \"color\": {},\n                \"lineHeight\": -57476771.83686783,\n                \"name\": \"laboris dolor tempor et\",\n                \"size\": 88303664.28854752,\n                \"style\": \"normal\"\n            },\n            \"text\": \"in in anim adipisicing tempor\",\n            \"maxLines\": 92617523.98635545,\n            \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n        },\n        \"generatedBy\": {\n            \"x\": 97379379.83385557,\n            \"yAsOffset\": false,\n            \"y\": -74805367.75119013,\n            \"width\": 96031356.49949902,\n            \"font\": {\n                \"color\": {},\n                \"lineHeight\": -13485419.390673175,\n                \"name\": \"eu incididunt do ipsum\",\n                \"size\": -16660820.89591217,\n                \"style\": \"bold\"\n            },\n            \"text\": \"sed esse\",\n            \"maxLines\": 28389477.70009592,\n            \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n        }\n    },\n    \"font\": {\n        \"color\": {},\n        \"lineHeight\": 57849418.81053713,\n        \"name\": \"qui Excepteur enim anim\",\n        \"size\": -38675654.19067698,\n        \"style\": \"normal\"\n    },\n    \"header\": {\n        \"x\": 53214590.43065286,\n        \"arrow\": true,\n        \"y\": -64442467.35094658,\n        \"width\": 36481618.338272214,\n        \"font\": {\n            \"color\": {},\n            \"lineHeight\": -84785841.24564259,\n            \"name\": \"qui amet laboris\",\n            \"size\": 45283174.434158534,\n            \"style\": \"bold\"\n        },\n        \"text\": \"aute\",\n        \"maxLines\": 32081832.635485023,\n        \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n    },\n    \"issue\": {\n        \"header\": {\n            \"x\": -99823934.34110244,\n            \"y\": -26549475.08536361,\n            \"width\": -60907109.57164975,\n            \"font\": {\n                \"color\": {},\n                \"lineHeight\": 70654885.48129979,\n                \"name\": \"est cupidatat exercitation\",\n                \"size\": -15912145.296536013,\n                \"style\": \"normal\"\n            },\n            \"text\": \"occaecat non tempor in nisi\",\n            \"maxLines\": -6203128.199892223,\n            \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n        },\n        \"backLink\": {\n            \"x\": 90411815.59731263,\n            \"y\": -50390416.333952315,\n            \"width\": -3257404.5004158914,\n            \"font\": {\n                \"color\": {},\n                \"lineHeight\": -41954456.40683193,\n                \"name\": \"sunt et voluptate\",\n                \"size\": 24098481.5574802,\n                \"style\": \"normal\"\n            },\n            \"text\": \"consequat\",\n            \"maxLines\": 69417523.62776536,\n            \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n        }\n    },\n    \"locale\": \"<string>\",\n    \"page\": {\n        \"margins\": {\n            \"top\": -51621372.53944934,\n            \"right\": -48306915.022068605,\n            \"bottom\": 85403575.61100799,\n            \"left\": 23387578.895279318\n        },\n        \"logo\": {\n            \"width\": -74241703.72747989,\n            \"height\": 68387493.46622235,\n            \"x\": 85802033.8255491,\n            \"y\": 88243429.43707442,\n            \"url\": \"cover-a4-nexdast.png\"\n        },\n        \"footer\": {\n            \"font\": {\n                \"color\": {},\n                \"lineHeight\": -29765459.87712194,\n                \"name\": \"Ut Lorem ul\",\n                \"size\": -50671155.95747631,\n                \"style\": \"normal\"\n            },\n            \"rect\": {\n                \"width\": 97845586.09697554,\n                \"height\": -45401497.084790595,\n                \"x\": -90994022.33900142,\n                \"y\": 88981073.94492075\n            },\n            \"link\": {\n                \"x\": 49794300.017674685,\n                \"url\": \"assets/pdf/cover-a4-nexdast.png\",\n                \"y\": 81937192.39860356,\n                \"width\": -78912467.09251432,\n                \"font\": {\n                    \"color\": {},\n                    \"lineHeight\": 61981849.94795194,\n                    \"name\": \"quis veniam eu voluptate\",\n                    \"size\": 99412823.40447426,\n                    \"style\": \"normal\"\n                },\n                \"text\": \"culpa \",\n                \"maxLines\": 67657859.88787204,\n                \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n            },\n            \"topLink\": {\n                \"x\": -11707065.497526467,\n                \"y\": -4869699.1225408465,\n                \"width\": 23564294.072406426,\n                \"font\": {\n                    \"color\": {},\n                    \"lineHeight\": -21316797.320750296,\n                    \"name\": \"minim magna\",\n                    \"size\": -65025358.76217541,\n                    \"style\": \"bold\"\n                },\n                \"text\": \"sit non\",\n                \"maxLines\": -73003167.02478029,\n                \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n            },\n            \"pageNumber\": {\n                \"x\": 96076728.45575207,\n                \"y\": 8550319.991156787,\n                \"width\": -79828272.16945533,\n                \"font\": {\n                    \"color\": {},\n                    \"lineHeight\": -22293609.325830713,\n                    \"name\": \"ipsum la\",\n                    \"size\": -56707414.28799353,\n                    \"style\": \"normal\"\n                },\n                \"text\": \"deserunt in\",\n                \"maxLines\": 78282660.2810005,\n                \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n            }\n        }\n    },\n    \"producer\": \"<string>\",\n    \"subHeader\": {\n        \"x\": 41979356.263258934,\n        \"y\": 30041300.091933817,\n        \"width\": 49400353.580770165,\n        \"font\": {\n            \"color\": {},\n            \"lineHeight\": -538857.3370775729,\n            \"name\": \"Excepteur consequat ea occaecat\",\n            \"size\": -41796080.48904462,\n            \"style\": \"bold\"\n        },\n        \"text\": \"laboris dolor\",\n        \"maxLines\": -83343444.18685666,\n        \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n    },\n    \"defaultDateFormat\": \"<dateTime>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/report-options",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "report-options"]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Unauthorized access.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"colors\": {\n        \"WHITE\": [\n            255\n        ],\n        \"TEXT\": [\n            255\n        ],\n        \"TEXT_LIGHT\": [\n            255\n        ],\n        \"LINK\": [\n            255\n        ],\n        \"FOOTER\": [\n            255\n        ],\n        \"HEADER_DANGER\": [\n            255\n        ],\n        \"HEADER_INFO\": [\n            255\n        ],\n        \"BG_HEADER\": [\n            255\n        ],\n        \"BORDER\": [\n            255\n        ],\n        \"DANGER\": [\n            255\n        ],\n        \"SUCCESS\": [\n            255\n        ],\n        \"SEVERITY_MEDIUM\": [\n            255\n        ],\n        \"SEVERITY_LOW\": [\n            255\n        ]\n    },\n    \"comments\": {\n        \"issueHeader\": {\n            \"x\": 16840198.313397005,\n            \"y\": 26957590.59923932,\n            \"width\": 21847861.0275795,\n            \"font\": {\n                \"color\": {},\n                \"lineHeight\": 98468161.68745178,\n                \"name\": \"nisi in\",\n                \"size\": 1107638.7829309702,\n                \"style\": \"bold\"\n            },\n            \"text\": \"mollit sit\",\n            \"maxLines\": 36284839.602791935,\n            \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n        },\n        \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n    },\n    \"cover\": {\n        \"image\": {\n            \"width\": -58717965.12072733,\n            \"height\": 23111145.148760363,\n            \"x\": -6516797.591808915,\n            \"y\": -53374008.03938137,\n            \"url\": \"cover-a4-nexdast.png\"\n        },\n        \"scanName\": {\n            \"x\": -78925426.77223177,\n            \"y\": -76669972.17280436,\n            \"width\": 28169108.925147235,\n            \"font\": {\n                \"color\": {},\n                \"lineHeight\": -57476771.83686783,\n                \"name\": \"laboris dolor tempor et\",\n                \"size\": 88303664.28854752,\n                \"style\": \"normal\"\n            },\n            \"text\": \"in in anim adipisicing tempor\",\n            \"maxLines\": 92617523.98635545,\n            \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n        },\n        \"generatedBy\": {\n            \"x\": 97379379.83385557,\n            \"yAsOffset\": false,\n            \"y\": -74805367.75119013,\n            \"width\": 96031356.49949902,\n            \"font\": {\n                \"color\": {},\n                \"lineHeight\": -13485419.390673175,\n                \"name\": \"eu incididunt do ipsum\",\n                \"size\": -16660820.89591217,\n                \"style\": \"bold\"\n            },\n            \"text\": \"sed esse\",\n            \"maxLines\": 28389477.70009592,\n            \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n        }\n    },\n    \"font\": {\n        \"color\": {},\n        \"lineHeight\": 57849418.81053713,\n        \"name\": \"qui Excepteur enim anim\",\n        \"size\": -38675654.19067698,\n        \"style\": \"normal\"\n    },\n    \"header\": {\n        \"x\": 53214590.43065286,\n        \"arrow\": true,\n        \"y\": -64442467.35094658,\n        \"width\": 36481618.338272214,\n        \"font\": {\n            \"color\": {},\n            \"lineHeight\": -84785841.24564259,\n            \"name\": \"qui amet laboris\",\n            \"size\": 45283174.434158534,\n            \"style\": \"bold\"\n        },\n        \"text\": \"aute\",\n        \"maxLines\": 32081832.635485023,\n        \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n    },\n    \"issue\": {\n        \"header\": {\n            \"x\": -99823934.34110244,\n            \"y\": -26549475.08536361,\n            \"width\": -60907109.57164975,\n            \"font\": {\n                \"color\": {},\n                \"lineHeight\": 70654885.48129979,\n                \"name\": \"est cupidatat exercitation\",\n                \"size\": -15912145.296536013,\n                \"style\": \"normal\"\n            },\n            \"text\": \"occaecat non tempor in nisi\",\n            \"maxLines\": -6203128.199892223,\n            \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n        },\n        \"backLink\": {\n            \"x\": 90411815.59731263,\n            \"y\": -50390416.333952315,\n            \"width\": -3257404.5004158914,\n            \"font\": {\n                \"color\": {},\n                \"lineHeight\": -41954456.40683193,\n                \"name\": \"sunt et voluptate\",\n                \"size\": 24098481.5574802,\n                \"style\": \"normal\"\n            },\n            \"text\": \"consequat\",\n            \"maxLines\": 69417523.62776536,\n            \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n        }\n    },\n    \"locale\": \"<string>\",\n    \"page\": {\n        \"margins\": {\n            \"top\": -51621372.53944934,\n            \"right\": -48306915.022068605,\n            \"bottom\": 85403575.61100799,\n            \"left\": 23387578.895279318\n        },\n        \"logo\": {\n            \"width\": -74241703.72747989,\n            \"height\": 68387493.46622235,\n            \"x\": 85802033.8255491,\n            \"y\": 88243429.43707442,\n            \"url\": \"cover-a4-nexdast.png\"\n        },\n        \"footer\": {\n            \"font\": {\n                \"color\": {},\n                \"lineHeight\": -29765459.87712194,\n                \"name\": \"Ut Lorem ul\",\n                \"size\": -50671155.95747631,\n                \"style\": \"normal\"\n            },\n            \"rect\": {\n                \"width\": 97845586.09697554,\n                \"height\": -45401497.084790595,\n                \"x\": -90994022.33900142,\n                \"y\": 88981073.94492075\n            },\n            \"link\": {\n                \"x\": 49794300.017674685,\n                \"url\": \"assets/pdf/cover-a4-nexdast.png\",\n                \"y\": 81937192.39860356,\n                \"width\": -78912467.09251432,\n                \"font\": {\n                    \"color\": {},\n                    \"lineHeight\": 61981849.94795194,\n                    \"name\": \"quis veniam eu voluptate\",\n                    \"size\": 99412823.40447426,\n                    \"style\": \"normal\"\n                },\n                \"text\": \"culpa \",\n                \"maxLines\": 67657859.88787204,\n                \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n            },\n            \"topLink\": {\n                \"x\": -11707065.497526467,\n                \"y\": -4869699.1225408465,\n                \"width\": 23564294.072406426,\n                \"font\": {\n                    \"color\": {},\n                    \"lineHeight\": -21316797.320750296,\n                    \"name\": \"minim magna\",\n                    \"size\": -65025358.76217541,\n                    \"style\": \"bold\"\n                },\n                \"text\": \"sit non\",\n                \"maxLines\": -73003167.02478029,\n                \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n            },\n            \"pageNumber\": {\n                \"x\": 96076728.45575207,\n                \"y\": 8550319.991156787,\n                \"width\": -79828272.16945533,\n                \"font\": {\n                    \"color\": {},\n                    \"lineHeight\": -22293609.325830713,\n                    \"name\": \"ipsum la\",\n                    \"size\": -56707414.28799353,\n                    \"style\": \"normal\"\n                },\n                \"text\": \"deserunt in\",\n                \"maxLines\": 78282660.2810005,\n                \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n            }\n        }\n    },\n    \"producer\": \"<string>\",\n    \"subHeader\": {\n        \"x\": 41979356.263258934,\n        \"y\": 30041300.091933817,\n        \"width\": 49400353.580770165,\n        \"font\": {\n            \"color\": {},\n            \"lineHeight\": -538857.3370775729,\n            \"name\": \"Excepteur consequat ea occaecat\",\n            \"size\": -41796080.48904462,\n            \"style\": \"bold\"\n        },\n        \"text\": \"laboris dolor\",\n        \"maxLines\": -83343444.18685666,\n        \"dateFormat\": \"dd of MMMM y, hh:mm a\"\n    },\n    \"defaultDateFormat\": \"<dateTime>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/report-options",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "report-options"]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"FORBIDDEN\",\n \"message\": \"nostrud\",\n \"status\": 403,\n \"errors\": [\n  {\n   \"name\": \"tempor magna amet sed\",\n   \"message\": \"in Ut\"\n  },\n  {\n   \"name\": \"culpa Excepteur\",\n   \"message\": \"deserunt\"\n  }\n ],\n \"stack\": [\n  \"anim nisi velit\",\n  \"Ut laborum\"\n ]\n}"
                }
              ]
            },
            {
              "name": "Remove report config for organization.",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/report-options",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "report-options"]
                }
              },
              "response": [
                {
                  "name": "Successful operation, config removed.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/report-options",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "report-options"]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Unauthorized access.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/report-options",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "report-options"]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"FORBIDDEN\",\n \"message\": \"nostrud\",\n \"status\": 403,\n \"errors\": [\n  {\n   \"name\": \"tempor magna amet sed\",\n   \"message\": \"in Ut\"\n  },\n  {\n   \"name\": \"culpa Excepteur\",\n   \"message\": \"deserunt\"\n  }\n ],\n \"stack\": [\n  \"anim nisi velit\",\n  \"Ut laborum\"\n ]\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "projects",
          "item": [
            {
              "name": "{project Id}",
              "item": [
                {
                  "name": "boards",
                  "item": [
                    {
                      "name": "Get all boards for project",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "<Bearer Token>",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/projects/:projectId/boards",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "projects",
                            ":projectId",
                            "boards"
                          ],
                          "variable": [
                            {
                              "key": "projectId",
                              "value": "<string>",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "description": "Returns all boards for the project."
                      },
                      "response": [
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/projects/:projectId/boards",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "projects",
                                ":projectId",
                                "boards"
                              ],
                              "variable": [
                                {
                                  "key": "projectId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "[\n {\n  \"id\": \"ullamco aliqua \",\n  \"service\": \"azure\",\n  \"externalId\": \"tempor labore cupidatat id\",\n  \"name\": \"non ex ipsum occaecat\",\n  \"uri\": \"qui aute elit\"\n },\n {\n  \"id\": \"do s\",\n  \"service\": \"monday\",\n  \"externalId\": \"labore esse Duis\",\n  \"name\": \"cupidatat ut pariatur\",\n  \"uri\": \"incididunt magna\"\n }\n]"
                        }
                      ]
                    },
                    {
                      "name": "Create board for project",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "<Bearer Token>",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"service\": \"<string>\",\n    \"name\": \"<string>\",\n    \"externalId\": \"<string>\",\n    \"uri\": \"<string>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/projects/:projectId/boards",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "projects",
                            ":projectId",
                            "boards"
                          ],
                          "variable": [
                            {
                              "key": "projectId",
                              "value": "<string>",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "description": "Create board for the project."
                      },
                      "response": [
                        {
                          "name": "Success",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"service\": \"<string>\",\n    \"name\": \"<string>\",\n    \"externalId\": \"<string>\",\n    \"uri\": \"<string>\"\n}"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/projects/:projectId/boards",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "projects",
                                ":projectId",
                                "boards"
                              ],
                              "variable": [
                                {
                                  "key": "projectId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n \"id\": \"ex irure\",\n \"service\": \"jira\",\n \"externalId\": \"commodo veniam labore\",\n \"name\": \"nulla ut nostrud\",\n \"uri\": \"minim consectetur\"\n}"
                        }
                      ]
                    },
                    {
                      "name": "Delete board for project",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "<Bearer Token>",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/projects/:projectId/boards/:boardId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "projects",
                            ":projectId",
                            "boards",
                            ":boardId"
                          ],
                          "variable": [
                            {
                              "key": "projectId",
                              "value": "<string>",
                              "description": "(Required) "
                            },
                            {
                              "key": "boardId",
                              "value": "<string>",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "description": "Delete board for the project."
                      },
                      "response": [
                        {
                          "name": "No Content",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "description": "Added as a part of security scheme: bearer",
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/v1/projects/:projectId/boards/:boardId",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "v1",
                                "projects",
                                ":projectId",
                                "boards",
                                ":boardId"
                              ],
                              "variable": [
                                {
                                  "key": "projectId"
                                },
                                {
                                  "key": "boardId"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Get project by id",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/projects/:projectId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "projects", ":projectId"],
                      "variable": [
                        {
                          "key": "projectId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/projects/:projectId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "projects", ":projectId"],
                          "variable": [
                            {
                              "key": "projectId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"id\": \"in ut\",\n \"name\": \"irure cupidatat\",\n \"groupIds\": [\n  \"et elit\",\n  \"commodo\"\n ],\n \"predefined\": false,\n \"enginesLimit\": 61861504.43277976,\n \"summary\": {\n  \"projectId\": \"cupid\",\n  \"scansByStatus\": [\n   {\n    \"status\": \"stopped\",\n    \"count\": 43536868.493945\n   },\n   {\n    \"status\": \"scheduled\",\n    \"count\": 92917987.39819744\n   }\n  ],\n  \"issuesBySeverity\": [\n   {\n    \"type\": \"High\",\n    \"number\": -6548277.355712041,\n    \"issuesByStatus\": [\n     {\n      \"status\": \"ignored\",\n      \"number\": -83250696.40890601\n     },\n     {\n      \"status\": \"new\",\n      \"number\": -94784751.29781874\n     }\n    ]\n   },\n   {\n    \"type\": \"Medium\",\n    \"number\": -37236296.85899903,\n    \"issuesByStatus\": [\n     {\n      \"status\": \"ignored\",\n      \"number\": 82583681.65632254\n     },\n     {\n      \"status\": \"resolved\",\n      \"number\": 59759525.27104816\n     }\n    ]\n   }\n  ],\n  \"issuesLength\": 37466065.63709718,\n  \"lastScan\": \"et culpa aute\",\n  \"uniqueHosts\": 94301077.38764581,\n  \"avgScanTime\": 80599596.48023024\n }\n}"
                    }
                  ]
                },
                {
                  "name": "Update project",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"<string>\",\n    \"groupIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"enginesLimit\": \"<number>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/projects/:projectId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "projects", ":projectId"],
                      "variable": [
                        {
                          "key": "projectId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "No Content",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"Landings\",\n    \"groupIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"enginesLimit\": \"<number>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/projects/:projectId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "projects", ":projectId"],
                          "variable": [
                            {
                              "key": "projectId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Delete project",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/projects/:projectId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "projects", ":projectId"],
                      "variable": [
                        {
                          "key": "projectId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "No Content",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/projects/:projectId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "projects", ":projectId"],
                          "variable": [
                            {
                              "key": "projectId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Get project issues by id",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/projects/:projectId/issues",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "projects", ":projectId", "issues"],
                      "variable": [
                        {
                          "key": "projectId",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/projects/:projectId/issues",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "projects",
                            ":projectId",
                            "issues"
                          ],
                          "variable": [
                            {
                              "key": "projectId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n {\n  \"id\": \"a\",\n  \"issueIds\": [\n   \"nisi\",\n   \"aliquip amet proident in\"\n  ],\n  \"projectId\": \"reprehenderit ea nisi ullamco\",\n  \"status\": \"ignored\",\n  \"type\": \"laborum ad sint in in\",\n  \"occurrences\": -12253832.958247557,\n  \"lastReported\": \"ut aliquip\",\n  \"url\": \"est velit commodo\",\n  \"assigneeIds\": [\n   \"amet\",\n   \"dolore nostrud id\"\n  ],\n  \"severity\": \"High\"\n },\n {\n  \"id\": \"in\",\n  \"issueIds\": [\n   \"ex esse sint\",\n   \"re\"\n  ],\n  \"projectId\": \"ad\",\n  \"status\": \"ignored\",\n  \"type\": \"amet et nostrud\",\n  \"occurrences\": -62186031.29277125,\n  \"lastReported\": \"laborum\",\n  \"url\": \"est irure qui cillum\",\n  \"assigneeIds\": [\n   \"sit mollit ea incididunt\",\n   \"nisi\"\n  ],\n  \"severity\": \"High\"\n }\n]"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Create a new project",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"groupIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"enginesLimit\": \"<number>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/projects",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "projects"]
                }
              },
              "response": [
                {
                  "name": "No Content",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Landings\",\n    \"groupIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"enginesLimit\": \"<number>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/projects",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "projects"]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Get project list in member's organization",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/projects",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "projects"]
                }
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/projects",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "projects"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"id\": \"dolore pariatur\",\n  \"name\": \"non amet sit pariatur\",\n  \"groupIds\": [\n   \"amet nisi\",\n   \"in consectetur tempor\"\n  ],\n  \"predefined\": false,\n  \"enginesLimit\": 82941251.40774494,\n  \"summary\": {\n   \"projectId\": \"in proident\",\n   \"scansByStatus\": [\n    {\n     \"status\": \"running\",\n     \"count\": -85773020.60634784\n    },\n    {\n     \"status\": \"done\",\n     \"count\": -97653607.20918292\n    }\n   ],\n   \"issuesBySeverity\": [\n    {\n     \"type\": \"Low\",\n     \"number\": -88691477.87566227,\n     \"issuesByStatus\": [\n      {\n       \"status\": \"new\",\n       \"number\": 39877315.72756067\n      },\n      {\n       \"status\": \"recurring\",\n       \"number\": 63395044.93611246\n      }\n     ]\n    },\n    {\n     \"type\": \"Medium\",\n     \"number\": 85394854.86804593,\n     \"issuesByStatus\": [\n      {\n       \"status\": \"resolved\",\n       \"number\": 4237531.529723838\n      },\n      {\n       \"status\": \"resolved\",\n       \"number\": -83270066.71595795\n      }\n     ]\n    }\n   ],\n   \"issuesLength\": -7722131.064978659,\n   \"lastScan\": \"voluptate \",\n   \"uniqueHosts\": -2716699.3444632143,\n   \"avgScanTime\": -27560894.21612446\n  }\n },\n {\n  \"id\": \"consectetur enim \",\n  \"name\": \"cillum ex pariatur tempor irure\",\n  \"groupIds\": [\n   \"Lorem aliqua elit magna do\",\n   \"veniam officia eu et fugiat\"\n  ],\n  \"predefined\": false,\n  \"enginesLimit\": -49541767.561075866,\n  \"summary\": {\n   \"projectId\": \"veniam irure u\",\n   \"scansByStatus\": [\n    {\n     \"status\": \"stopped\",\n     \"count\": -41746788.04126084\n    },\n    {\n     \"status\": \"pending\",\n     \"count\": 18356185.766938135\n    }\n   ],\n   \"issuesBySeverity\": [\n    {\n     \"type\": \"Medium\",\n     \"number\": -53673692.45814113,\n     \"issuesByStatus\": [\n      {\n       \"status\": \"resolved\",\n       \"number\": 9283267.165597528\n      },\n      {\n       \"status\": \"new\",\n       \"number\": 30821064.536346257\n      }\n     ]\n    },\n    {\n     \"type\": \"High\",\n     \"number\": -69075432.81549478,\n     \"issuesByStatus\": [\n      {\n       \"status\": \"new\",\n       \"number\": 35220706.2961722\n      },\n      {\n       \"status\": \"resolved\",\n       \"number\": 28402696.974517867\n      }\n     ]\n    }\n   ],\n   \"issuesLength\": -97376458.40520065,\n   \"lastScan\": \"tempor sed ut irure\",\n   \"uniqueHosts\": -76649820.31669089,\n   \"avgScanTime\": 20970113.372838914\n  }\n }\n]"
                }
              ]
            }
          ]
        },
        {
          "name": "project-issues",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "Get project issue by id",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/project-issues/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "project-issues", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/project-issues/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "project-issues", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"id\": \"Lorem\",\n \"issueIds\": [\n  \"enim culpa\",\n  \"pariatur\"\n ],\n \"projectId\": \"enim occaecat in consectetur\",\n \"status\": \"new\",\n \"type\": \"Duis culpa velit commodo\",\n \"occurrences\": 20569193.93329002,\n \"lastReported\": \"Ut culpa minim Duis irure\",\n \"url\": \"consequat eu\",\n \"assigneeIds\": [\n  \"culpa anim\",\n  \"Duis\"\n ],\n \"severity\": \"Medium\"\n}"
                    }
                  ]
                },
                {
                  "name": "Get original issues which are included to the project issue",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/project-issues/:id/issues",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "project-issues", ":id", "issues"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/project-issues/:id/issues",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "project-issues",
                            ":id",
                            "issues"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n {\n  \"id\": \"a\",\n  \"issueIds\": [\n   \"nisi\",\n   \"aliquip amet proident in\"\n  ],\n  \"projectId\": \"reprehenderit ea nisi ullamco\",\n  \"status\": \"ignored\",\n  \"type\": \"laborum ad sint in in\",\n  \"occurrences\": -12253832.958247557,\n  \"lastReported\": \"ut aliquip\",\n  \"url\": \"est velit commodo\",\n  \"assigneeIds\": [\n   \"amet\",\n   \"dolore nostrud id\"\n  ],\n  \"severity\": \"High\"\n },\n {\n  \"id\": \"in\",\n  \"issueIds\": [\n   \"ex esse sint\",\n   \"re\"\n  ],\n  \"projectId\": \"ad\",\n  \"status\": \"ignored\",\n  \"type\": \"amet et nostrud\",\n  \"occurrences\": -62186031.29277125,\n  \"lastReported\": \"laborum\",\n  \"url\": \"est irure qui cillum\",\n  \"assigneeIds\": [\n   \"sit mollit ea incididunt\",\n   \"nisi\"\n  ],\n  \"severity\": \"High\"\n }\n]"
                    }
                  ]
                },
                {
                  "name": "Assign a user to an project issue",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"assigneeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/project-issues/:id/assignees",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "api",
                        "v1",
                        "project-issues",
                        ":id",
                        "assignees"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) The project issue ID"
                        }
                      ]
                    },
                    "description": "Assigns a user to a specific project issue."
                  },
                  "response": [
                    {
                      "name": "Issue or user is not found",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"assigneeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/project-issues/:id/assignees",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "project-issues",
                            ":id",
                            "assignees"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"NOT_FOUND\",\n \"message\": \"veniam quis proident\",\n \"status\": 404,\n \"errors\": [\n  {\n   \"name\": \"Excepteur anim nisi aute deserunt\",\n   \"message\": \"cupidatat minim dolor irure\"\n  },\n  {\n   \"name\": \"ea cupidatat eu incididunt\",\n   \"message\": \"aliqua commodo\"\n  }\n ],\n \"stack\": [\n  \"magna qui adipisicing\",\n  \"incididunt reprehenderit qui\"\n ]\n}"
                    },
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"assigneeIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/project-issues/:id/assignees",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "project-issues",
                            ":id",
                            "assignees"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "*/*"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Change project issue status",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"action\": \"<object>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/project-issues/:id/status",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "project-issues", ":id", "status"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) The project issue ID"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"action\": \"<object>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/project-issues/:id/status",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "project-issues",
                            ":id",
                            "status"
                          ],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "*/*"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "Change project issue status",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"projectIssueIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"action\": \"<object>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/project-issues/status",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "project-issues", "status"]
                }
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"projectIssueIds\": [\n        \"<integer>\",\n        \"<integer>\"\n    ],\n    \"action\": \"<object>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/project-issues/status",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "project-issues", "status"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "*/*"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "auth-objects",
          "item": [
            {
              "name": "{auth Object Id}",
              "item": [
                {
                  "name": "Get a single auth object",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth-objects/:authObjectId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth-objects", ":authObjectId"],
                      "variable": [
                        {
                          "key": "authObjectId",
                          "value": "<string>",
                          "description": "(Required) The requested auth object ID"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/auth-objects/:authObjectId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "auth-objects",
                            ":authObjectId"
                          ],
                          "variable": [
                            {
                              "key": "authObjectId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"ipsum in\",\n \"type\": \"oidc\",\n \"config\": {\n  \"request\": {\n   \"url\": \"http://fGqHdnUFooHVeU.nomiAeZjrVNbs7x22y-tziYtBqoavGuRErA2qcYOwyCATel7M2Pmxxumu3albj\",\n   \"protocol\": \"http\",\n   \"method\": \"POST\",\n   \"headers\": [\n    {\n     \"name\": \"Authorization\",\n     \"value\": \"Bearer token\",\n     \"mergeStrategy\": \"replace\"\n    },\n    {\n     \"name\": \"Authorization\",\n     \"value\": \"Bearer token\",\n     \"mergeStrategy\": \"replace\"\n    }\n   ],\n   \"body\": \"incididunt ex eu\",\n   \"followRedirects\": false,\n   \"maxRedirects\": -25592765.18439634,\n   \"payloadExtractor\": \"non\",\n   \"correlationIdXPath\": \"exercitation\",\n   \"form\": {},\n   \"extractor\": {\n    \"to\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"from\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"postLoginUrl\": \"http://CswoMoKDMqnilHihneCzrwQ.apqK+zqptHkK1NPXkepIB663cWaHLyYbr9mnbPuBgc5J,hot+RHtgSE,MrQHKhk,fIdT\"\n  },\n  \"oidc\": {\n   \"grantType\": \"client_credentials\",\n   \"clientId\": \"fugiat deserunt eu officia dolore\",\n   \"metadataUrl\": \"https://ZIqSfiNWTCbukaqtyEoDYmIQxudIIlnn.jtP4a.hTrlO4hyI6mx2j.V.7uoNFexgvY9tbUPLNMHDPsgHQCOalqkuEQvvCuBigQopUHMIQrL\",\n   \"tokenEndpoint\": \"http://XDfSeKLXZgBereLDyVapfZqNRSYL.wzpbDuqII8jVPHJ4rM+MpVq1Mwn\",\n   \"clientSecret\": \"laborum consequat deserunt ipsum\",\n   \"scope\": [\n    \"ullamco et incididunt\",\n    \"amet pariatur et sint enim\"\n   ],\n   \"audience\": \"magna amet consectetur nostrud ut\",\n   \"username\": \"fugiat\",\n   \"password\": \"magna mollit ea\",\n   \"embedder\": {\n    \"type\": \"body\",\n    \"path\": \"/credentials/token\",\n    \"contentType\": \"application/json\",\n    \"name\": \"Authorization\",\n    \"template\": \"Bearer {{token}}\",\n    \"encoder\": \"base64\",\n    \"mergeStrategy\": \"replace\"\n   }\n  },\n  \"multistep\": {\n   \"embedders\": [\n    {\n     \"type\": \"header\",\n     \"path\": \"/credentials/token\",\n     \"contentType\": \"application/json\",\n     \"name\": \"Authorization\",\n     \"template\": \"Bearer {{token}}\",\n     \"encoder\": \"base64\",\n     \"mergeStrategy\": \"replace\"\n    },\n    {\n     \"type\": \"header\",\n     \"path\": \"/credentials/token\",\n     \"contentType\": \"application/json\",\n     \"name\": \"Authorization\",\n     \"template\": \"Bearer {{token}}\",\n     \"encoder\": \"base64\",\n     \"mergeStrategy\": \"append\"\n    }\n   ],\n   \"steps\": [\n    {\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"request\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"successResponseDetection\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"request\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"successResponseDetection\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ]\n  },\n  \"ntlm\": {\n   \"username\": \"non Lorem sint dolor nostrud\",\n   \"password\": \"ipsum consequat id\",\n   \"domain\": \"qui nulla nostrud\",\n   \"workstation\": \"dolor sunt\"\n  }\n },\n \"description\": \"cupidatat voluptate\",\n \"successResponseDetection\": [\n  {\n   \"type\": \"body\",\n   \"name\": \"anim veniam aliqua ea\",\n   \"statuses\": [\n    65255535.32735366,\n    -54857826.8174666\n   ],\n   \"patterns\": [\n    \"est irure commodo quis\",\n    \"n\"\n   ]\n  },\n  {\n   \"type\": \"body\",\n   \"name\": \"quis\",\n   \"statuses\": [\n    -25403247.089179754,\n    -25006245.01260394\n   ],\n   \"patterns\": [\n    \"sunt eiusmod dolor consectetur\",\n    \"ad cillum enim sed eiusmod\"\n   ]\n  }\n ],\n \"invalidSessionDetection\": [\n  {\n   \"type\": \"status\",\n   \"name\": \"in eiusmod m\",\n   \"statuses\": [\n    49424532.65680945,\n    -91657394.63035902\n   ],\n   \"patterns\": [\n    \"fugiat veniam sit occaecat\",\n    \"eiusmod nisi dolor\"\n   ]\n  },\n  {\n   \"type\": \"status\",\n   \"name\": \"occaecat elit aliqua officia id\",\n   \"statuses\": [\n    52416863.41101825,\n    -49063914.00464369\n   ],\n   \"patterns\": [\n    \"sed\",\n    \"culpa consectetur ut mollit\"\n   ]\n  }\n ],\n \"test\": {\n  \"request\": {\n   \"url\": \"http://SjqAGPOEdZjM.vvmrh9f8VOU2,\",\n   \"protocol\": \"http\",\n   \"method\": \"DELETE\",\n   \"headers\": [\n    {\n     \"name\": \"Authorization\",\n     \"value\": \"Bearer token\",\n     \"mergeStrategy\": \"replace\"\n    },\n    {\n     \"name\": \"Authorization\",\n     \"value\": \"Bearer token\",\n     \"mergeStrategy\": \"replace\"\n    }\n   ],\n   \"body\": \"ullamco eu in\",\n   \"followRedirects\": false,\n   \"maxRedirects\": 28829030.885459065,\n   \"payloadExtractor\": \"fugiat ad \",\n   \"correlationIdXPath\": \"minim fugiat in cons\"\n  },\n  \"repeaterId\": \"o\"\n },\n \"id\": \"of\",\n \"memberId\": \"aute sint\",\n \"repeaterRequired\": false,\n \"updatedAt\": \"1961-10-10T09:33:04.236Z\",\n \"createdAt\": \"1982-12-25T11:02:02.278Z\"\n}"
                    }
                  ]
                },
                {
                  "name": "Update an auth object",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"config\": {\n        \"request\": {\n            \"url\": \"http://tXjLfySCwwHOgXZMVbNbTKohcInlSXdo.ooNi8-U5,ibOt\",\n            \"protocol\": \"websocket\",\n            \"method\": \"PATCH\",\n            \"headers\": [\n                {\n                    \"name\": \"<string>\",\n                    \"value\": \"<string>\",\n                    \"mergeStrategy\": \"replace\"\n                },\n                {\n                    \"name\": \"<string>\",\n                    \"value\": \"<string>\",\n                    \"mergeStrategy\": \"replace\"\n                }\n            ],\n            \"body\": \"magna sit\",\n            \"followRedirects\": true,\n            \"maxRedirects\": -67123671.62367228,\n            \"payloadExtractor\": \"mollit ullamco Duis veni\",\n            \"correlationIdXPath\": \"exercitation velit\",\n            \"form\": {},\n            \"extractor\": {\n                \"to\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"from\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"postLoginUrl\": \"https://MldsU.yflvWdlmzJExaNNORSFl7xXzFI0RwB85HuypJI\"\n        },\n        \"oidc\": {\n            \"grantType\": \"password\",\n            \"clientId\": \"amet ad aute\",\n            \"metadataUrl\": \"http://NvHJDRkbDMqoXL.eyegUcrPApCDEpRzbP\",\n            \"tokenEndpoint\": \"http://KkMIUsQyseThWsPEZSat.cqguCgKkgzHjwlgfeQXsMZdb1n-UKf.G\",\n            \"clientSecret\": \"ipsum esse\",\n            \"scope\": [\n                \"Lorem nostrud\",\n                \"esse u\"\n            ],\n            \"audience\": \"qui amet\",\n            \"username\": \"occaecat eiusmod adipisicing laboris\",\n            \"password\": \"Lorem reprehenderit\",\n            \"embedder\": {\n                \"type\": \"status\",\n                \"path\": \"laboris occaecat non\",\n                \"contentType\": \"irure minim dolor\",\n                \"name\": \"aliq\",\n                \"template\": \"{{token}}\",\n                \"encoder\": \"base64\",\n                \"mergeStrategy\": \"replace\"\n            }\n        },\n        \"multistep\": {\n            \"embedders\": [\n                {\n                    \"type\": \"status\",\n                    \"path\": \"minim commodo cillum sit est\",\n                    \"contentType\": \"ut labore\",\n                    \"name\": \"id esse\",\n                    \"template\": \"{{token}}\",\n                    \"encoder\": \"base64\",\n                    \"mergeStrategy\": \"append\"\n                },\n                {\n                    \"type\": \"body\",\n                    \"path\": \"incididunt cillum in consequat\",\n                    \"contentType\": \"aute nulla Lorem\",\n                    \"name\": \"ut reprehender\",\n                    \"template\": \"{{token}}\",\n                    \"encoder\": \"base64\",\n                    \"mergeStrategy\": \"replace\"\n                }\n            ],\n            \"steps\": [\n                {\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"request\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"successResponseDetection\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"request\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"successResponseDetection\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        \"ntlm\": {\n            \"username\": \"magna sit et irure in\",\n            \"password\": \"veniam in adipisicing\",\n            \"domain\": \"in sit fugiat ad\",\n            \"workstation\": \"in\"\n        }\n    },\n    \"description\": \"<string>\",\n    \"successResponseDetection\": [\n        {\n            \"type\": \"header\",\n            \"name\": \"anim \",\n            \"statuses\": [\n                -2408601.2984431386,\n                -59707494.430182084\n            ],\n            \"patterns\": [\n                \"dolore pariatur Ut fugiat reprehenderit\",\n                \"Duis voluptate id\"\n            ]\n        },\n        {\n            \"type\": \"header\",\n            \"name\": \"exercitation adipisicing est\",\n            \"statuses\": [\n                -22636392.824818194,\n                69028541.65092519\n            ],\n            \"patterns\": [\n                \"do\",\n                \"\"\n            ]\n        }\n    ],\n    \"invalidSessionDetection\": [\n        {\n            \"type\": \"body\",\n            \"name\": \"laborum quis Ut et magna\",\n            \"statuses\": [\n                -92572513.79654013,\n                -84107195.8280029\n            ],\n            \"patterns\": [\n                \"in qui occaecat Ut\",\n                \"dolor minim mollit commodo ullamco\"\n            ]\n        },\n        {\n            \"type\": \"status\",\n            \"name\": \"ipsum adipisicing cillum quis ut\",\n            \"statuses\": [\n                -1021816.4576663971,\n                -19218570.84619835\n            ],\n            \"patterns\": [\n                \"Duis Excepteur\",\n                \"sit velit sunt\"\n            ]\n        }\n    ],\n    \"test\": {\n        \"request\": {\n            \"url\": \"http://NvsGfWvwCSXTChoNPgaN.kwwqrL5lBOPRPRzdEAzqPu9ifDmd+eqJg2JfYySp93+d\",\n            \"protocol\": \"websocket\",\n            \"method\": \"CONNECT\",\n            \"headers\": [\n                {\n                    \"name\": \"<string>\",\n                    \"value\": \"<string>\",\n                    \"mergeStrategy\": \"replace\"\n                },\n                {\n                    \"name\": \"<string>\",\n                    \"value\": \"<string>\",\n                    \"mergeStrategy\": \"replace\"\n                }\n            ],\n            \"body\": \"in aliquip et\",\n            \"followRedirects\": true,\n            \"maxRedirects\": -19257156.080530584,\n            \"payloadExtractor\": \"ullamco elit ut\",\n            \"correlationIdXPath\": \"Ut do\"\n        },\n        \"repeaterId\": \"Excepte\"\n    }\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth-objects/:authObjectId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth-objects", ":authObjectId"],
                      "variable": [
                        {
                          "key": "authObjectId",
                          "value": "<string>",
                          "description": "(Required) The updated auth object ID"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "In case of success, returns the modified auth object.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"config\": {\n        \"request\": {\n            \"url\": \"https://qQcMbhltKOsNOOJ.cldaCpJeKmLcksgx8HSYk1eoeisJaJklCydXOfEojb\",\n            \"protocol\": \"websocket\",\n            \"method\": \"PUT\",\n            \"headers\": [\n                {\n                    \"name\": \"Authorization\",\n                    \"value\": \"Bearer token\",\n                    \"mergeStrategy\": \"replace\"\n                },\n                {\n                    \"name\": \"Authorization\",\n                    \"value\": \"Bearer token\",\n                    \"mergeStrategy\": \"replace\"\n                }\n            ],\n            \"body\": \"anim do\",\n            \"followRedirects\": false,\n            \"maxRedirects\": -48845089.15536942,\n            \"payloadExtractor\": \"sunt fugiat esse irure qui\",\n            \"correlationIdXPath\": \"in sunt proident labore anim\",\n            \"form\": {},\n            \"extractor\": {\n                \"to\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"from\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"postLoginUrl\": \"https://CLeXyn.zxnAOsTZz4F7ZunEsnNHEsJb0VOiWW-U2y\"\n        },\n        \"oidc\": {\n            \"grantType\": \"client_credentials\",\n            \"clientId\": \"cillum sint consequat d\",\n            \"metadataUrl\": \"http://xzXksfZNJNRdjp.jttuQ-aoUhPFZ7pXHxJ,eydwYB6tAA1ZHYpBJc-Vh9,Rc\",\n            \"tokenEndpoint\": \"https://LgQGnjBGoHHTYIUnBWgQNOFxJrFKZCZmq.wmalq+JJnSaq.45ZSFUI.RnfsjhG5UFh4RUx-R3ceFrkgBFgVNORjMrU2Sy8M\",\n            \"clientSecret\": \"irure in sunt id dolor\",\n            \"scope\": [\n                \"in veniam\",\n                \"est dolore elit s\"\n            ],\n            \"audience\": \"a\",\n            \"username\": \"sint deserunt\",\n            \"password\": \"occaecat dolor incididunt\",\n            \"embedder\": {\n                \"type\": \"status\",\n                \"path\": \"/credentials/token\",\n                \"contentType\": \"application/json\",\n                \"name\": \"Authorization\",\n                \"template\": \"Bearer {{token}}\",\n                \"encoder\": \"base64\",\n                \"mergeStrategy\": \"replace\"\n            }\n        },\n        \"multistep\": {\n            \"embedders\": [\n                {\n                    \"type\": \"body\",\n                    \"path\": \"/credentials/token\",\n                    \"contentType\": \"application/json\",\n                    \"name\": \"Authorization\",\n                    \"template\": \"Bearer {{token}}\",\n                    \"encoder\": \"base64\",\n                    \"mergeStrategy\": \"replace\"\n                },\n                {\n                    \"type\": \"body\",\n                    \"path\": \"/credentials/token\",\n                    \"contentType\": \"application/json\",\n                    \"name\": \"Authorization\",\n                    \"template\": \"Bearer {{token}}\",\n                    \"encoder\": \"base64\",\n                    \"mergeStrategy\": \"append\"\n                }\n            ],\n            \"steps\": [\n                {\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"request\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"successResponseDetection\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"request\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"successResponseDetection\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        \"ntlm\": {\n            \"username\": \"ad\",\n            \"password\": \"fugiat nulla ullamco\",\n            \"domain\": \"enim\",\n            \"workstation\": \"sunt aliquip\"\n        }\n    },\n    \"description\": \"<string>\",\n    \"successResponseDetection\": [\n        {\n            \"type\": \"body\",\n            \"name\": \"consequat nisi\",\n            \"statuses\": [\n                -12810731.619917214,\n                88297643.17811248\n            ],\n            \"patterns\": [\n                \"dolore voluptate in\",\n                \"reprehenderit sed nostrud ex\"\n            ]\n        },\n        {\n            \"type\": \"status\",\n            \"name\": \"occaecat nulla\",\n            \"statuses\": [\n                89937875.46435753,\n                -79119645.69329232\n            ],\n            \"patterns\": [\n                \"elit commodo exercitation\",\n                \"do fugiat ut\"\n            ]\n        }\n    ],\n    \"invalidSessionDetection\": [\n        {\n            \"type\": \"header\",\n            \"name\": \"veniam tempor\",\n            \"statuses\": [\n                42403077.471309036,\n                -73744932.52237877\n            ],\n            \"patterns\": [\n                \"magna non voluptate minim\",\n                \"cillum dolore consequat fugiat\"\n            ]\n        },\n        {\n            \"type\": \"header\",\n            \"name\": \"veniam amet voluptate cupidatat\",\n            \"statuses\": [\n                -87948847.35201451,\n                -68762207.4354219\n            ],\n            \"patterns\": [\n                \"ut\",\n                \"enim esse occaecat qui\"\n            ]\n        }\n    ],\n    \"test\": {\n        \"request\": {\n            \"url\": \"http://IsEZqaRANnD.btpfTZYv8ItjV2T-K\",\n            \"protocol\": \"http\",\n            \"method\": \"GET\",\n            \"headers\": [\n                {\n                    \"name\": \"Authorization\",\n                    \"value\": \"Bearer token\",\n                    \"mergeStrategy\": \"replace\"\n                },\n                {\n                    \"name\": \"Authorization\",\n                    \"value\": \"Bearer token\",\n                    \"mergeStrategy\": \"replace\"\n                }\n            ],\n            \"body\": \"nulla\",\n            \"followRedirects\": false,\n            \"maxRedirects\": -46540641.20211743,\n            \"payloadExtractor\": \"fug\",\n            \"correlationIdXPath\": \"est sed sint\"\n        },\n        \"repeaterId\": \"Lorem paria\"\n    }\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/auth-objects/:authObjectId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "auth-objects",
                            ":authObjectId"
                          ],
                          "variable": [
                            {
                              "key": "authObjectId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"name\": \"ipsum in\",\n \"type\": \"oidc\",\n \"config\": {\n  \"request\": {\n   \"url\": \"http://fGqHdnUFooHVeU.nomiAeZjrVNbs7x22y-tziYtBqoavGuRErA2qcYOwyCATel7M2Pmxxumu3albj\",\n   \"protocol\": \"http\",\n   \"method\": \"POST\",\n   \"headers\": [\n    {\n     \"name\": \"Authorization\",\n     \"value\": \"Bearer token\",\n     \"mergeStrategy\": \"replace\"\n    },\n    {\n     \"name\": \"Authorization\",\n     \"value\": \"Bearer token\",\n     \"mergeStrategy\": \"replace\"\n    }\n   ],\n   \"body\": \"incididunt ex eu\",\n   \"followRedirects\": false,\n   \"maxRedirects\": -25592765.18439634,\n   \"payloadExtractor\": \"non\",\n   \"correlationIdXPath\": \"exercitation\",\n   \"form\": {},\n   \"extractor\": {\n    \"to\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"from\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"postLoginUrl\": \"http://CswoMoKDMqnilHihneCzrwQ.apqK+zqptHkK1NPXkepIB663cWaHLyYbr9mnbPuBgc5J,hot+RHtgSE,MrQHKhk,fIdT\"\n  },\n  \"oidc\": {\n   \"grantType\": \"client_credentials\",\n   \"clientId\": \"fugiat deserunt eu officia dolore\",\n   \"metadataUrl\": \"https://ZIqSfiNWTCbukaqtyEoDYmIQxudIIlnn.jtP4a.hTrlO4hyI6mx2j.V.7uoNFexgvY9tbUPLNMHDPsgHQCOalqkuEQvvCuBigQopUHMIQrL\",\n   \"tokenEndpoint\": \"http://XDfSeKLXZgBereLDyVapfZqNRSYL.wzpbDuqII8jVPHJ4rM+MpVq1Mwn\",\n   \"clientSecret\": \"laborum consequat deserunt ipsum\",\n   \"scope\": [\n    \"ullamco et incididunt\",\n    \"amet pariatur et sint enim\"\n   ],\n   \"audience\": \"magna amet consectetur nostrud ut\",\n   \"username\": \"fugiat\",\n   \"password\": \"magna mollit ea\",\n   \"embedder\": {\n    \"type\": \"body\",\n    \"path\": \"/credentials/token\",\n    \"contentType\": \"application/json\",\n    \"name\": \"Authorization\",\n    \"template\": \"Bearer {{token}}\",\n    \"encoder\": \"base64\",\n    \"mergeStrategy\": \"replace\"\n   }\n  },\n  \"multistep\": {\n   \"embedders\": [\n    {\n     \"type\": \"header\",\n     \"path\": \"/credentials/token\",\n     \"contentType\": \"application/json\",\n     \"name\": \"Authorization\",\n     \"template\": \"Bearer {{token}}\",\n     \"encoder\": \"base64\",\n     \"mergeStrategy\": \"replace\"\n    },\n    {\n     \"type\": \"header\",\n     \"path\": \"/credentials/token\",\n     \"contentType\": \"application/json\",\n     \"name\": \"Authorization\",\n     \"template\": \"Bearer {{token}}\",\n     \"encoder\": \"base64\",\n     \"mergeStrategy\": \"append\"\n    }\n   ],\n   \"steps\": [\n    {\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"request\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"successResponseDetection\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"request\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"successResponseDetection\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ]\n  },\n  \"ntlm\": {\n   \"username\": \"non Lorem sint dolor nostrud\",\n   \"password\": \"ipsum consequat id\",\n   \"domain\": \"qui nulla nostrud\",\n   \"workstation\": \"dolor sunt\"\n  }\n },\n \"description\": \"cupidatat voluptate\",\n \"successResponseDetection\": [\n  {\n   \"type\": \"body\",\n   \"name\": \"anim veniam aliqua ea\",\n   \"statuses\": [\n    65255535.32735366,\n    -54857826.8174666\n   ],\n   \"patterns\": [\n    \"est irure commodo quis\",\n    \"n\"\n   ]\n  },\n  {\n   \"type\": \"body\",\n   \"name\": \"quis\",\n   \"statuses\": [\n    -25403247.089179754,\n    -25006245.01260394\n   ],\n   \"patterns\": [\n    \"sunt eiusmod dolor consectetur\",\n    \"ad cillum enim sed eiusmod\"\n   ]\n  }\n ],\n \"invalidSessionDetection\": [\n  {\n   \"type\": \"status\",\n   \"name\": \"in eiusmod m\",\n   \"statuses\": [\n    49424532.65680945,\n    -91657394.63035902\n   ],\n   \"patterns\": [\n    \"fugiat veniam sit occaecat\",\n    \"eiusmod nisi dolor\"\n   ]\n  },\n  {\n   \"type\": \"status\",\n   \"name\": \"occaecat elit aliqua officia id\",\n   \"statuses\": [\n    52416863.41101825,\n    -49063914.00464369\n   ],\n   \"patterns\": [\n    \"sed\",\n    \"culpa consectetur ut mollit\"\n   ]\n  }\n ],\n \"test\": {\n  \"request\": {\n   \"url\": \"http://SjqAGPOEdZjM.vvmrh9f8VOU2,\",\n   \"protocol\": \"http\",\n   \"method\": \"DELETE\",\n   \"headers\": [\n    {\n     \"name\": \"Authorization\",\n     \"value\": \"Bearer token\",\n     \"mergeStrategy\": \"replace\"\n    },\n    {\n     \"name\": \"Authorization\",\n     \"value\": \"Bearer token\",\n     \"mergeStrategy\": \"replace\"\n    }\n   ],\n   \"body\": \"ullamco eu in\",\n   \"followRedirects\": false,\n   \"maxRedirects\": 28829030.885459065,\n   \"payloadExtractor\": \"fugiat ad \",\n   \"correlationIdXPath\": \"minim fugiat in cons\"\n  },\n  \"repeaterId\": \"o\"\n },\n \"id\": \"of\",\n \"memberId\": \"aute sint\",\n \"repeaterRequired\": false,\n \"updatedAt\": \"1961-10-10T09:33:04.236Z\",\n \"createdAt\": \"1982-12-25T11:02:02.278Z\"\n}"
                    }
                  ]
                },
                {
                  "name": "Delete an auth object",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth-objects/:authObjectId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth-objects", ":authObjectId"],
                      "variable": [
                        {
                          "key": "authObjectId",
                          "value": "<string>",
                          "description": "(Required) The deleted auth object ID"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/auth-objects/:authObjectId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "auth-objects",
                            ":authObjectId"
                          ],
                          "variable": [
                            {
                              "key": "authObjectId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Test an auth object",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth-objects/:authObjectId/test",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "api",
                        "v1",
                        "auth-objects",
                        ":authObjectId",
                        "test"
                      ],
                      "variable": [
                        {
                          "key": "authObjectId",
                          "value": "<string>",
                          "description": "(Required) The tested auth object ID"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/auth-objects/:authObjectId/test",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "auth-objects",
                            ":authObjectId",
                            "test"
                          ],
                          "variable": [
                            {
                              "key": "authObjectId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n {\n  \"stage\": \"authorization\",\n  \"message\": \"reprehenderit offi\",\n  \"name\": \"reprehenderit occaecat aliquip cupidatat\",\n  \"status\": \"success\",\n  \"timestamp\": 1608024675233,\n  \"response\": {\n   \"headers\": \"cupidatat laborum Excepteur\",\n   \"body\": \"ullamco irure magna dolore\",\n   \"status\": 25899203.172119692,\n   \"protocol\": \"HTTP/1.1\"\n  },\n  \"request\": {\n   \"method\": \"CONNECT\",\n   \"url\": \"pariatur est\",\n   \"headers\": \"id\",\n   \"body\": \"proident\",\n   \"protocol\": \"HTTP/1.1\"\n  },\n  \"screenshot\": \"ea dolor enim\",\n  \"frames\": [\n   {\n    \"type\": \"nulla in veniam reprehenderit est\",\n    \"data\": \"consequat anim est amet\",\n    \"timestamp\": -27575474.315393582,\n    \"status\": -69892021.81358004\n   },\n   {\n    \"type\": \"ex do labore dolore\",\n    \"data\": \"commodo\",\n    \"timestamp\": -89589626.04903413,\n    \"status\": -9784197.766907796\n   }\n  ]\n },\n {\n  \"stage\": \"validation\",\n  \"message\": \"irure elit\",\n  \"name\": \"qui incididunt est sint\",\n  \"status\": \"failure\",\n  \"timestamp\": 1608024675233,\n  \"response\": {\n   \"headers\": \"mollit sit in deserunt\",\n   \"body\": \"ut consequat\",\n   \"status\": -37904417.76942082,\n   \"protocol\": \"HTTP/1.1\"\n  },\n  \"request\": {\n   \"method\": \"OPTIONS\",\n   \"url\": \"lab\",\n   \"headers\": \"velit do\",\n   \"body\": \"nisi do\",\n   \"protocol\": \"HTTP/1.1\"\n  },\n  \"screenshot\": \"non culpa dolor\",\n  \"frames\": [\n   {\n    \"type\": \"sunt ullamco\",\n    \"data\": \"magna in\",\n    \"timestamp\": -41161043.278959796,\n    \"status\": -52411640.998006746\n   },\n   {\n    \"type\": \"voluptate dolore aute\",\n    \"data\": \"deser\",\n    \"timestamp\": 28875377.311113983,\n    \"status\": 86992244.623009\n   }\n  ]\n }\n]"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Get all auth objects",
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "Authorization",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": true,
                      "type": "boolean"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth-objects",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "auth-objects"]
                },
                "description": "Returns a list of all auth objects       available to the currently logged-in user."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth-objects",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth-objects"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"name\": \"commodo esse sint\",\n  \"type\": \"oidc\",\n  \"config\": {\n   \"request\": {\n    \"url\": \"https://WiRkRnfWXTHiYrdoTsFCCTzkOJ.uqqqN6lShfS-Qw9nCsC1fEVcJdEJgObTEuZ7wQdXQYDYGdb-mqZUhtmzORDi9GBhm0Yc.mXBIVttMZJjnu\",\n    \"protocol\": \"websocket\",\n    \"method\": \"CONNECT\",\n    \"headers\": [\n     {\n      \"name\": \"Authorization\",\n      \"value\": \"Bearer token\",\n      \"mergeStrategy\": \"replace\"\n     },\n     {\n      \"name\": \"Authorization\",\n      \"value\": \"Bearer token\",\n      \"mergeStrategy\": \"replace\"\n     }\n    ],\n    \"body\": \"aute labore\",\n    \"followRedirects\": true,\n    \"maxRedirects\": -26719485.965784177,\n    \"payloadExtractor\": \"enim Duis officia dol\",\n    \"correlationIdXPath\": \"sunt proid\",\n    \"form\": {},\n    \"extractor\": {\n     \"to\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"from\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"postLoginUrl\": \"https://gpoIheKnptKKLzvSFhponhPbXwNBDgHQg.wjNIUoQL+vaTmpePF8\"\n   },\n   \"oidc\": {\n    \"grantType\": \"password\",\n    \"clientId\": \"sed nisi aliquip\",\n    \"metadataUrl\": \"http://BRDtrQQOnOUFJfQdxO.rkqWPSE7RJ5TvG5xS,6y\",\n    \"tokenEndpoint\": \"https://xcvhSotpIaYvUfYpOgxIvou.zidoytP5K4zSz,gYbQYy7C98jJJSeYgbAW9Dq+334wa7kegDJHx2KTPWsURwOyaay\",\n    \"clientSecret\": \"ad aliqua amet cupidatat\",\n    \"scope\": [\n     \"sint tempor ut\",\n     \"ex velit ipsum sed\"\n    ],\n    \"audience\": \"quis proident irure Ut sit\",\n    \"username\": \"qui cupidatat id est\",\n    \"password\": \"et cupidatat ea\",\n    \"embedder\": {\n     \"type\": \"header\",\n     \"path\": \"/credentials/token\",\n     \"contentType\": \"application/json\",\n     \"name\": \"Authorization\",\n     \"template\": \"Bearer {{token}}\",\n     \"encoder\": \"base64\",\n     \"mergeStrategy\": \"append\"\n    }\n   },\n   \"multistep\": {\n    \"embedders\": [\n     {\n      \"type\": \"header\",\n      \"path\": \"/credentials/token\",\n      \"contentType\": \"application/json\",\n      \"name\": \"Authorization\",\n      \"template\": \"Bearer {{token}}\",\n      \"encoder\": \"base64\",\n      \"mergeStrategy\": \"append\"\n     },\n     {\n      \"type\": \"body\",\n      \"path\": \"/credentials/token\",\n      \"contentType\": \"application/json\",\n      \"name\": \"Authorization\",\n      \"template\": \"Bearer {{token}}\",\n      \"encoder\": \"base64\",\n      \"mergeStrategy\": \"append\"\n     }\n    ],\n    \"steps\": [\n     {\n      \"name\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"request\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"successResponseDetection\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"name\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"request\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"successResponseDetection\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   \"ntlm\": {\n    \"username\": \"tempor aliquip ut Duis\",\n    \"password\": \"elit voluptate mollit id fugiat\",\n    \"domain\": \"veniam occaecat tempor dolore\",\n    \"workstation\": \"sit cillum laboris\"\n   }\n  },\n  \"description\": \"sed irure incididunt nostrud\",\n  \"successResponseDetection\": [\n   {\n    \"type\": \"body\",\n    \"name\": \"sunt ea elit\",\n    \"statuses\": [\n     -2520132.7010044903,\n     77271564.16387078\n    ],\n    \"patterns\": [\n     \"qui \",\n     \"ad Duis in\"\n    ]\n   },\n   {\n    \"type\": \"body\",\n    \"name\": \"cupidatat reprehenderit ullamco exercitation\",\n    \"statuses\": [\n     71618234.01161197,\n     -17361031.366187423\n    ],\n    \"patterns\": [\n     \"nisi nostru\",\n     \"anim exercitation\"\n    ]\n   }\n  ],\n  \"invalidSessionDetection\": [\n   {\n    \"type\": \"header\",\n    \"name\": \"minim nulla et quis\",\n    \"statuses\": [\n     -14709793.331007987,\n     30364774.731077924\n    ],\n    \"patterns\": [\n     \"sunt in\",\n     \"dolor minim nisi\"\n    ]\n   },\n   {\n    \"type\": \"header\",\n    \"name\": \"deserunt cupidatat\",\n    \"statuses\": [\n     -59556656.602880806,\n     99556492.57924461\n    ],\n    \"patterns\": [\n     \"proident\",\n     \"elit esse et dolor\"\n    ]\n   }\n  ],\n  \"test\": {\n   \"request\": {\n    \"url\": \"http://wOjTLHsVgC.udbvWN-vPW9r.8G\",\n    \"protocol\": \"websocket\",\n    \"method\": \"GET\",\n    \"headers\": [\n     {\n      \"name\": \"Authorization\",\n      \"value\": \"Bearer token\",\n      \"mergeStrategy\": \"replace\"\n     },\n     {\n      \"name\": \"Authorization\",\n      \"value\": \"Bearer token\",\n      \"mergeStrategy\": \"replace\"\n     }\n    ],\n    \"body\": \"quis\",\n    \"followRedirects\": false,\n    \"maxRedirects\": -16459351.069104329,\n    \"payloadExtractor\": \"sunt id minim dolor ex\",\n    \"correlationIdXPath\": \"nostrud\"\n   },\n   \"repeaterId\": \"of\"\n  },\n  \"id\": \"irure nisi no\",\n  \"memberId\": \"Ut \",\n  \"repeaterRequired\": false,\n  \"updatedAt\": \"1991-06-07T11:57:46.293Z\",\n  \"createdAt\": \"1983-08-09T04:12:44.340Z\"\n },\n {\n  \"name\": \"Lorem culpa Ut ipsum\",\n  \"type\": \"oidc\",\n  \"config\": {\n   \"request\": {\n    \"url\": \"https://VwcGYcrqYndeUnfGXNjaMuVVu.izv\",\n    \"protocol\": \"http\",\n    \"method\": \"OPTIONS\",\n    \"headers\": [\n     {\n      \"name\": \"Authorization\",\n      \"value\": \"Bearer token\",\n      \"mergeStrategy\": \"replace\"\n     },\n     {\n      \"name\": \"Authorization\",\n      \"value\": \"Bearer token\",\n      \"mergeStrategy\": \"replace\"\n     }\n    ],\n    \"body\": \"laborum nostrud pariatur ut\",\n    \"followRedirects\": true,\n    \"maxRedirects\": -95773193.1373297,\n    \"payloadExtractor\": \"id esse do cupidatat nulla\",\n    \"correlationIdXPath\": \"do ea et\",\n    \"form\": {},\n    \"extractor\": {\n     \"to\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"from\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"postLoginUrl\": \"https://gelnVKdEc.oatFce3uMGeqtgHTeivMlgjWuDw+mG7txaxO.Jl\"\n   },\n   \"oidc\": {\n    \"grantType\": \"client_credentials\",\n    \"clientId\": \"et magna\",\n    \"metadataUrl\": \"http://Fm.owvrXk1ef8QKtFeHrmXHKqOKgI.m3VZ5xPLUUkf\",\n    \"tokenEndpoint\": \"https://LCXlPfTWLcJdwEGPdiuiGVoVJR.ngeph7jQCDoPbnToPzs,D\",\n    \"clientSecret\": \"voluptate dolore eu ipsum laboris\",\n    \"scope\": [\n     \"officia laborum veniam\",\n     \"Duis officia exercitation\"\n    ],\n    \"audience\": \"minim elit\",\n    \"username\": \"commodo laboris sunt\",\n    \"password\": \"irure quis commodo eiusmod\",\n    \"embedder\": {\n     \"type\": \"header\",\n     \"path\": \"/credentials/token\",\n     \"contentType\": \"application/json\",\n     \"name\": \"Authorization\",\n     \"template\": \"Bearer {{token}}\",\n     \"encoder\": \"base64\",\n     \"mergeStrategy\": \"append\"\n    }\n   },\n   \"multistep\": {\n    \"embedders\": [\n     {\n      \"type\": \"body\",\n      \"path\": \"/credentials/token\",\n      \"contentType\": \"application/json\",\n      \"name\": \"Authorization\",\n      \"template\": \"Bearer {{token}}\",\n      \"encoder\": \"base64\",\n      \"mergeStrategy\": \"append\"\n     },\n     {\n      \"type\": \"header\",\n      \"path\": \"/credentials/token\",\n      \"contentType\": \"application/json\",\n      \"name\": \"Authorization\",\n      \"template\": \"Bearer {{token}}\",\n      \"encoder\": \"base64\",\n      \"mergeStrategy\": \"append\"\n     }\n    ],\n    \"steps\": [\n     {\n      \"name\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"request\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"successResponseDetection\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"name\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"request\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"successResponseDetection\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   \"ntlm\": {\n    \"username\": \"ut mollit\",\n    \"password\": \"non officia ad\",\n    \"domain\": \"enim sint\",\n    \"workstation\": \"nostrud sit amet Lorem\"\n   }\n  },\n  \"description\": \"sint ipsum labore cupidatat eu\",\n  \"successResponseDetection\": [\n   {\n    \"type\": \"status\",\n    \"name\": \"officia fugiat laborum\",\n    \"statuses\": [\n     -4634447.466362834,\n     22709491.559703648\n    ],\n    \"patterns\": [\n     \"nostrud laborum\",\n     \"dolor nulla\"\n    ]\n   },\n   {\n    \"type\": \"status\",\n    \"name\": \"in qui veniam Excepteur in\",\n    \"statuses\": [\n     -91879068.69086353,\n     41192340.16231462\n    ],\n    \"patterns\": [\n     \"labore aute commodo velit\",\n     \"magna\"\n    ]\n   }\n  ],\n  \"invalidSessionDetection\": [\n   {\n    \"type\": \"header\",\n    \"name\": \"et nostrud nisi veniam do\",\n    \"statuses\": [\n     68972011.05418867,\n     5385632.809131429\n    ],\n    \"patterns\": [\n     \"dolor ipsum ut\",\n     \"cillum incididunt\"\n    ]\n   },\n   {\n    \"type\": \"header\",\n    \"name\": \"cupidata\",\n    \"statuses\": [\n     -6530311.619332045,\n     -79241303.12166438\n    ],\n    \"patterns\": [\n     \"laborum\",\n     \"eu commodo\"\n    ]\n   }\n  ],\n  \"test\": {\n   \"request\": {\n    \"url\": \"http://xDVZuAFZFRxvOsunVkW.zdtCpUc6pOjB6.QtxvCyLxhKwHaBt3meEIwhHNHa1er-2,GK2iniTo6\",\n    \"protocol\": \"websocket\",\n    \"method\": \"HEAD\",\n    \"headers\": [\n     {\n      \"name\": \"Authorization\",\n      \"value\": \"Bearer token\",\n      \"mergeStrategy\": \"replace\"\n     },\n     {\n      \"name\": \"Authorization\",\n      \"value\": \"Bearer token\",\n      \"mergeStrategy\": \"replace\"\n     }\n    ],\n    \"body\": \"Lorem non quis\",\n    \"followRedirects\": true,\n    \"maxRedirects\": -6705234.752399832,\n    \"payloadExtractor\": \"ex magna aliquip\",\n    \"correlationIdXPath\": \"et exercitation id\"\n   },\n   \"repeaterId\": \"dolor\"\n  },\n  \"id\": \"qui aute occa\",\n  \"memberId\": \"quis\",\n  \"repeaterRequired\": false,\n  \"updatedAt\": \"1976-02-15T05:34:33.276Z\",\n  \"createdAt\": \"2008-07-09T23:43:01.013Z\"\n }\n]"
                }
              ]
            },
            {
              "name": "Create a auth object",
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "Authorization",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": true,
                      "type": "boolean"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"config\": {\n        \"request\": {\n            \"url\": \"https://NeQBR.beqj5KMg7PVTHOe0XoduHTiEu7NM,LVfEokVSF0lEbOyELXDwShQfajd0ZluPEJRh\",\n            \"protocol\": \"http\",\n            \"method\": \"GET\",\n            \"headers\": [\n                {\n                    \"name\": \"<string>\",\n                    \"value\": \"<string>\",\n                    \"mergeStrategy\": \"replace\"\n                },\n                {\n                    \"name\": \"<string>\",\n                    \"value\": \"<string>\",\n                    \"mergeStrategy\": \"replace\"\n                }\n            ],\n            \"body\": \"ex velit consectetur Duis elit\",\n            \"followRedirects\": true,\n            \"maxRedirects\": -66168014.10668059,\n            \"payloadExtractor\": \"est dolore id ipsum nostrud\",\n            \"correlationIdXPath\": \"quis\",\n            \"form\": {},\n            \"extractor\": {\n                \"to\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"from\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"postLoginUrl\": \"http://HBeB.nlXVzGRZ10YEaXOOjmFxa,bzrRzzpRw5KuBYC5LVI1uB2-N\"\n        },\n        \"oidc\": {\n            \"grantType\": \"client_credentials\",\n            \"clientId\": \"dolore n\",\n            \"metadataUrl\": \"https://gCfqvYYyCAqyrYmx.pyo5DuUPnqHAgJ1kevEcBoqNXneOaw24UWE.uoCwqfJTOcUxZcdjBrJbDE7\",\n            \"tokenEndpoint\": \"http://KUghbkYNnfVUkYwYLt.njkUJDDzFEVbohwepdzGdW9stCvEdjDg+SsxfEqY4Fi.aQNUKawWHvphcRHJ\",\n            \"clientSecret\": \"Lorem minim nisi\",\n            \"scope\": [\n                \"incididunt\",\n                \"labore adipisicing quis cillum\"\n            ],\n            \"audience\": \"eiusmod Duis anim\",\n            \"username\": \"aliquip consectetur dolor Lorem\",\n            \"password\": \"nisi ullamco velit\",\n            \"embedder\": {\n                \"type\": \"header\",\n                \"path\": \"ullamco\",\n                \"contentType\": \"ad eu\",\n                \"name\": \"in ipsum\",\n                \"template\": \"{{token}}\",\n                \"encoder\": \"base64\",\n                \"mergeStrategy\": \"replace\"\n            }\n        },\n        \"multistep\": {\n            \"embedders\": [\n                {\n                    \"type\": \"body\",\n                    \"path\": \"labore velit Duis\",\n                    \"contentType\": \"ea ullamco sit commodo\",\n                    \"name\": \"elit ea proident sunt\",\n                    \"template\": \"{{token}}\",\n                    \"encoder\": \"base64\",\n                    \"mergeStrategy\": \"append\"\n                },\n                {\n                    \"type\": \"status\",\n                    \"path\": \"do in es\",\n                    \"contentType\": \"cupidatat elit consequat magna\",\n                    \"name\": \"laboris pariatur\",\n                    \"template\": \"{{token}}\",\n                    \"encoder\": \"base64\",\n                    \"mergeStrategy\": \"append\"\n                }\n            ],\n            \"steps\": [\n                {\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"request\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"successResponseDetection\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"request\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"successResponseDetection\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        \"ntlm\": {\n            \"username\": \"cillum\",\n            \"password\": \"officia proident deserunt Ut\",\n            \"domain\": \"amet officia elit quis\",\n            \"workstation\": \"sit elit fugiat\"\n        }\n    },\n    \"description\": \"<string>\",\n    \"successResponseDetection\": [\n        {\n            \"type\": \"status\",\n            \"name\": \"ex incididunt ea nisi\",\n            \"statuses\": [\n                28382885.619084015,\n                80348212.98202735\n            ],\n            \"patterns\": [\n                \"magna\",\n                \"sed elit enim\"\n            ]\n        },\n        {\n            \"type\": \"header\",\n            \"name\": \"in commodo consectetur mollit\",\n            \"statuses\": [\n                90807672.82040831,\n                -27327157.120375037\n            ],\n            \"patterns\": [\n                \"ad aute\",\n                \"irure amet esse mollit\"\n            ]\n        }\n    ],\n    \"invalidSessionDetection\": [\n        {\n            \"type\": \"status\",\n            \"name\": \"dolor fugiat adipisicing nostrud reprehenderit\",\n            \"statuses\": [\n                -58367962.17994462,\n                5058804.207077384\n            ],\n            \"patterns\": [\n                \"laborum ex quis sunt\",\n                \"veniam\"\n            ]\n        },\n        {\n            \"type\": \"header\",\n            \"name\": \"proident enim ex reprehenderit\",\n            \"statuses\": [\n                59326894.93451062,\n                21720741.457092434\n            ],\n            \"patterns\": [\n                \"dolore ut\",\n                \"nulla in velit\"\n            ]\n        }\n    ],\n    \"test\": {\n        \"request\": {\n            \"url\": \"http://BlgJAy.lrR-cdwGtevIwCKwUwBVsUrrMaXTB\",\n            \"protocol\": \"http\",\n            \"method\": \"PATCH\",\n            \"headers\": [\n                {\n                    \"name\": \"<string>\",\n                    \"value\": \"<string>\",\n                    \"mergeStrategy\": \"replace\"\n                },\n                {\n                    \"name\": \"<string>\",\n                    \"value\": \"<string>\",\n                    \"mergeStrategy\": \"replace\"\n                }\n            ],\n            \"body\": \"aliquip minim\",\n            \"followRedirects\": false,\n            \"maxRedirects\": 11698255.85130848,\n            \"payloadExtractor\": \"proident quis Duis ad\",\n            \"correlationIdXPath\": \"consequat ut nulla ullamco ea\"\n        },\n        \"repeaterId\": \"con\"\n    }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth-objects",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "auth-objects"]
                },
                "description": "Creates a new auth object, making the       currently logged-in user its owner."
              },
              "response": [
                {
                  "name": "Created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"config\": {\n        \"request\": {\n            \"url\": \"https://qQcMbhltKOsNOOJ.cldaCpJeKmLcksgx8HSYk1eoeisJaJklCydXOfEojb\",\n            \"protocol\": \"websocket\",\n            \"method\": \"PUT\",\n            \"headers\": [\n                {\n                    \"name\": \"Authorization\",\n                    \"value\": \"Bearer token\",\n                    \"mergeStrategy\": \"replace\"\n                },\n                {\n                    \"name\": \"Authorization\",\n                    \"value\": \"Bearer token\",\n                    \"mergeStrategy\": \"replace\"\n                }\n            ],\n            \"body\": \"anim do\",\n            \"followRedirects\": false,\n            \"maxRedirects\": -48845089.15536942,\n            \"payloadExtractor\": \"sunt fugiat esse irure qui\",\n            \"correlationIdXPath\": \"in sunt proident labore anim\",\n            \"form\": {},\n            \"extractor\": {\n                \"to\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"from\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"postLoginUrl\": \"https://CLeXyn.zxnAOsTZz4F7ZunEsnNHEsJb0VOiWW-U2y\"\n        },\n        \"oidc\": {\n            \"grantType\": \"client_credentials\",\n            \"clientId\": \"cillum sint consequat d\",\n            \"metadataUrl\": \"http://xzXksfZNJNRdjp.jttuQ-aoUhPFZ7pXHxJ,eydwYB6tAA1ZHYpBJc-Vh9,Rc\",\n            \"tokenEndpoint\": \"https://LgQGnjBGoHHTYIUnBWgQNOFxJrFKZCZmq.wmalq+JJnSaq.45ZSFUI.RnfsjhG5UFh4RUx-R3ceFrkgBFgVNORjMrU2Sy8M\",\n            \"clientSecret\": \"irure in sunt id dolor\",\n            \"scope\": [\n                \"in veniam\",\n                \"est dolore elit s\"\n            ],\n            \"audience\": \"a\",\n            \"username\": \"sint deserunt\",\n            \"password\": \"occaecat dolor incididunt\",\n            \"embedder\": {\n                \"type\": \"status\",\n                \"path\": \"/credentials/token\",\n                \"contentType\": \"application/json\",\n                \"name\": \"Authorization\",\n                \"template\": \"Bearer {{token}}\",\n                \"encoder\": \"base64\",\n                \"mergeStrategy\": \"replace\"\n            }\n        },\n        \"multistep\": {\n            \"embedders\": [\n                {\n                    \"type\": \"body\",\n                    \"path\": \"/credentials/token\",\n                    \"contentType\": \"application/json\",\n                    \"name\": \"Authorization\",\n                    \"template\": \"Bearer {{token}}\",\n                    \"encoder\": \"base64\",\n                    \"mergeStrategy\": \"replace\"\n                },\n                {\n                    \"type\": \"body\",\n                    \"path\": \"/credentials/token\",\n                    \"contentType\": \"application/json\",\n                    \"name\": \"Authorization\",\n                    \"template\": \"Bearer {{token}}\",\n                    \"encoder\": \"base64\",\n                    \"mergeStrategy\": \"append\"\n                }\n            ],\n            \"steps\": [\n                {\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"request\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"successResponseDetection\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"request\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"successResponseDetection\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        \"ntlm\": {\n            \"username\": \"ad\",\n            \"password\": \"fugiat nulla ullamco\",\n            \"domain\": \"enim\",\n            \"workstation\": \"sunt aliquip\"\n        }\n    },\n    \"description\": \"<string>\",\n    \"successResponseDetection\": [\n        {\n            \"type\": \"body\",\n            \"name\": \"consequat nisi\",\n            \"statuses\": [\n                -12810731.619917214,\n                88297643.17811248\n            ],\n            \"patterns\": [\n                \"dolore voluptate in\",\n                \"reprehenderit sed nostrud ex\"\n            ]\n        },\n        {\n            \"type\": \"status\",\n            \"name\": \"occaecat nulla\",\n            \"statuses\": [\n                89937875.46435753,\n                -79119645.69329232\n            ],\n            \"patterns\": [\n                \"elit commodo exercitation\",\n                \"do fugiat ut\"\n            ]\n        }\n    ],\n    \"invalidSessionDetection\": [\n        {\n            \"type\": \"header\",\n            \"name\": \"veniam tempor\",\n            \"statuses\": [\n                42403077.471309036,\n                -73744932.52237877\n            ],\n            \"patterns\": [\n                \"magna non voluptate minim\",\n                \"cillum dolore consequat fugiat\"\n            ]\n        },\n        {\n            \"type\": \"header\",\n            \"name\": \"veniam amet voluptate cupidatat\",\n            \"statuses\": [\n                -87948847.35201451,\n                -68762207.4354219\n            ],\n            \"patterns\": [\n                \"ut\",\n                \"enim esse occaecat qui\"\n            ]\n        }\n    ],\n    \"test\": {\n        \"request\": {\n            \"url\": \"http://IsEZqaRANnD.btpfTZYv8ItjV2T-K\",\n            \"protocol\": \"http\",\n            \"method\": \"GET\",\n            \"headers\": [\n                {\n                    \"name\": \"Authorization\",\n                    \"value\": \"Bearer token\",\n                    \"mergeStrategy\": \"replace\"\n                },\n                {\n                    \"name\": \"Authorization\",\n                    \"value\": \"Bearer token\",\n                    \"mergeStrategy\": \"replace\"\n                }\n            ],\n            \"body\": \"nulla\",\n            \"followRedirects\": false,\n            \"maxRedirects\": -46540641.20211743,\n            \"payloadExtractor\": \"fug\",\n            \"correlationIdXPath\": \"est sed sint\"\n        },\n        \"repeaterId\": \"Lorem paria\"\n    }\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth-objects",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth-objects"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"name\": \"ipsum in\",\n \"type\": \"oidc\",\n \"config\": {\n  \"request\": {\n   \"url\": \"http://fGqHdnUFooHVeU.nomiAeZjrVNbs7x22y-tziYtBqoavGuRErA2qcYOwyCATel7M2Pmxxumu3albj\",\n   \"protocol\": \"http\",\n   \"method\": \"POST\",\n   \"headers\": [\n    {\n     \"name\": \"Authorization\",\n     \"value\": \"Bearer token\",\n     \"mergeStrategy\": \"replace\"\n    },\n    {\n     \"name\": \"Authorization\",\n     \"value\": \"Bearer token\",\n     \"mergeStrategy\": \"replace\"\n    }\n   ],\n   \"body\": \"incididunt ex eu\",\n   \"followRedirects\": false,\n   \"maxRedirects\": -25592765.18439634,\n   \"payloadExtractor\": \"non\",\n   \"correlationIdXPath\": \"exercitation\",\n   \"form\": {},\n   \"extractor\": {\n    \"to\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"from\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"postLoginUrl\": \"http://CswoMoKDMqnilHihneCzrwQ.apqK+zqptHkK1NPXkepIB663cWaHLyYbr9mnbPuBgc5J,hot+RHtgSE,MrQHKhk,fIdT\"\n  },\n  \"oidc\": {\n   \"grantType\": \"client_credentials\",\n   \"clientId\": \"fugiat deserunt eu officia dolore\",\n   \"metadataUrl\": \"https://ZIqSfiNWTCbukaqtyEoDYmIQxudIIlnn.jtP4a.hTrlO4hyI6mx2j.V.7uoNFexgvY9tbUPLNMHDPsgHQCOalqkuEQvvCuBigQopUHMIQrL\",\n   \"tokenEndpoint\": \"http://XDfSeKLXZgBereLDyVapfZqNRSYL.wzpbDuqII8jVPHJ4rM+MpVq1Mwn\",\n   \"clientSecret\": \"laborum consequat deserunt ipsum\",\n   \"scope\": [\n    \"ullamco et incididunt\",\n    \"amet pariatur et sint enim\"\n   ],\n   \"audience\": \"magna amet consectetur nostrud ut\",\n   \"username\": \"fugiat\",\n   \"password\": \"magna mollit ea\",\n   \"embedder\": {\n    \"type\": \"body\",\n    \"path\": \"/credentials/token\",\n    \"contentType\": \"application/json\",\n    \"name\": \"Authorization\",\n    \"template\": \"Bearer {{token}}\",\n    \"encoder\": \"base64\",\n    \"mergeStrategy\": \"replace\"\n   }\n  },\n  \"multistep\": {\n   \"embedders\": [\n    {\n     \"type\": \"header\",\n     \"path\": \"/credentials/token\",\n     \"contentType\": \"application/json\",\n     \"name\": \"Authorization\",\n     \"template\": \"Bearer {{token}}\",\n     \"encoder\": \"base64\",\n     \"mergeStrategy\": \"replace\"\n    },\n    {\n     \"type\": \"header\",\n     \"path\": \"/credentials/token\",\n     \"contentType\": \"application/json\",\n     \"name\": \"Authorization\",\n     \"template\": \"Bearer {{token}}\",\n     \"encoder\": \"base64\",\n     \"mergeStrategy\": \"append\"\n    }\n   ],\n   \"steps\": [\n    {\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"request\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"successResponseDetection\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    {\n     \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"request\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"successResponseDetection\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   ]\n  },\n  \"ntlm\": {\n   \"username\": \"non Lorem sint dolor nostrud\",\n   \"password\": \"ipsum consequat id\",\n   \"domain\": \"qui nulla nostrud\",\n   \"workstation\": \"dolor sunt\"\n  }\n },\n \"description\": \"cupidatat voluptate\",\n \"successResponseDetection\": [\n  {\n   \"type\": \"body\",\n   \"name\": \"anim veniam aliqua ea\",\n   \"statuses\": [\n    65255535.32735366,\n    -54857826.8174666\n   ],\n   \"patterns\": [\n    \"est irure commodo quis\",\n    \"n\"\n   ]\n  },\n  {\n   \"type\": \"body\",\n   \"name\": \"quis\",\n   \"statuses\": [\n    -25403247.089179754,\n    -25006245.01260394\n   ],\n   \"patterns\": [\n    \"sunt eiusmod dolor consectetur\",\n    \"ad cillum enim sed eiusmod\"\n   ]\n  }\n ],\n \"invalidSessionDetection\": [\n  {\n   \"type\": \"status\",\n   \"name\": \"in eiusmod m\",\n   \"statuses\": [\n    49424532.65680945,\n    -91657394.63035902\n   ],\n   \"patterns\": [\n    \"fugiat veniam sit occaecat\",\n    \"eiusmod nisi dolor\"\n   ]\n  },\n  {\n   \"type\": \"status\",\n   \"name\": \"occaecat elit aliqua officia id\",\n   \"statuses\": [\n    52416863.41101825,\n    -49063914.00464369\n   ],\n   \"patterns\": [\n    \"sed\",\n    \"culpa consectetur ut mollit\"\n   ]\n  }\n ],\n \"test\": {\n  \"request\": {\n   \"url\": \"http://SjqAGPOEdZjM.vvmrh9f8VOU2,\",\n   \"protocol\": \"http\",\n   \"method\": \"DELETE\",\n   \"headers\": [\n    {\n     \"name\": \"Authorization\",\n     \"value\": \"Bearer token\",\n     \"mergeStrategy\": \"replace\"\n    },\n    {\n     \"name\": \"Authorization\",\n     \"value\": \"Bearer token\",\n     \"mergeStrategy\": \"replace\"\n    }\n   ],\n   \"body\": \"ullamco eu in\",\n   \"followRedirects\": false,\n   \"maxRedirects\": 28829030.885459065,\n   \"payloadExtractor\": \"fugiat ad \",\n   \"correlationIdXPath\": \"minim fugiat in cons\"\n  },\n  \"repeaterId\": \"o\"\n },\n \"id\": \"of\",\n \"memberId\": \"aute sint\",\n \"repeaterRequired\": false,\n \"updatedAt\": \"1961-10-10T09:33:04.236Z\",\n \"createdAt\": \"1982-12-25T11:02:02.278Z\"\n}"
                }
              ]
            },
            {
              "name": "Test an auth object",
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "Authorization",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": true,
                      "type": "boolean"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"config\": {\n        \"request\": {\n            \"url\": \"http://tXjLfySCwwHOgXZMVbNbTKohcInlSXdo.ooNi8-U5,ibOt\",\n            \"protocol\": \"websocket\",\n            \"method\": \"PATCH\",\n            \"headers\": [\n                {\n                    \"name\": \"<string>\",\n                    \"value\": \"<string>\",\n                    \"mergeStrategy\": \"replace\"\n                },\n                {\n                    \"name\": \"<string>\",\n                    \"value\": \"<string>\",\n                    \"mergeStrategy\": \"replace\"\n                }\n            ],\n            \"body\": \"magna sit\",\n            \"followRedirects\": true,\n            \"maxRedirects\": -67123671.62367228,\n            \"payloadExtractor\": \"mollit ullamco Duis veni\",\n            \"correlationIdXPath\": \"exercitation velit\",\n            \"form\": {},\n            \"extractor\": {\n                \"to\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"from\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"postLoginUrl\": \"https://MldsU.yflvWdlmzJExaNNORSFl7xXzFI0RwB85HuypJI\"\n        },\n        \"oidc\": {\n            \"grantType\": \"password\",\n            \"clientId\": \"amet ad aute\",\n            \"metadataUrl\": \"http://NvHJDRkbDMqoXL.eyegUcrPApCDEpRzbP\",\n            \"tokenEndpoint\": \"http://KkMIUsQyseThWsPEZSat.cqguCgKkgzHjwlgfeQXsMZdb1n-UKf.G\",\n            \"clientSecret\": \"ipsum esse\",\n            \"scope\": [\n                \"Lorem nostrud\",\n                \"esse u\"\n            ],\n            \"audience\": \"qui amet\",\n            \"username\": \"occaecat eiusmod adipisicing laboris\",\n            \"password\": \"Lorem reprehenderit\",\n            \"embedder\": {\n                \"type\": \"status\",\n                \"path\": \"laboris occaecat non\",\n                \"contentType\": \"irure minim dolor\",\n                \"name\": \"aliq\",\n                \"template\": \"{{token}}\",\n                \"encoder\": \"base64\",\n                \"mergeStrategy\": \"replace\"\n            }\n        },\n        \"multistep\": {\n            \"embedders\": [\n                {\n                    \"type\": \"status\",\n                    \"path\": \"minim commodo cillum sit est\",\n                    \"contentType\": \"ut labore\",\n                    \"name\": \"id esse\",\n                    \"template\": \"{{token}}\",\n                    \"encoder\": \"base64\",\n                    \"mergeStrategy\": \"append\"\n                },\n                {\n                    \"type\": \"body\",\n                    \"path\": \"incididunt cillum in consequat\",\n                    \"contentType\": \"aute nulla Lorem\",\n                    \"name\": \"ut reprehender\",\n                    \"template\": \"{{token}}\",\n                    \"encoder\": \"base64\",\n                    \"mergeStrategy\": \"replace\"\n                }\n            ],\n            \"steps\": [\n                {\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"request\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"successResponseDetection\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"request\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"successResponseDetection\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        \"ntlm\": {\n            \"username\": \"magna sit et irure in\",\n            \"password\": \"veniam in adipisicing\",\n            \"domain\": \"in sit fugiat ad\",\n            \"workstation\": \"in\"\n        }\n    },\n    \"description\": \"<string>\",\n    \"successResponseDetection\": [\n        {\n            \"type\": \"header\",\n            \"name\": \"anim \",\n            \"statuses\": [\n                -2408601.2984431386,\n                -59707494.430182084\n            ],\n            \"patterns\": [\n                \"dolore pariatur Ut fugiat reprehenderit\",\n                \"Duis voluptate id\"\n            ]\n        },\n        {\n            \"type\": \"header\",\n            \"name\": \"exercitation adipisicing est\",\n            \"statuses\": [\n                -22636392.824818194,\n                69028541.65092519\n            ],\n            \"patterns\": [\n                \"do\",\n                \"\"\n            ]\n        }\n    ],\n    \"invalidSessionDetection\": [\n        {\n            \"type\": \"body\",\n            \"name\": \"laborum quis Ut et magna\",\n            \"statuses\": [\n                -92572513.79654013,\n                -84107195.8280029\n            ],\n            \"patterns\": [\n                \"in qui occaecat Ut\",\n                \"dolor minim mollit commodo ullamco\"\n            ]\n        },\n        {\n            \"type\": \"status\",\n            \"name\": \"ipsum adipisicing cillum quis ut\",\n            \"statuses\": [\n                -1021816.4576663971,\n                -19218570.84619835\n            ],\n            \"patterns\": [\n                \"Duis Excepteur\",\n                \"sit velit sunt\"\n            ]\n        }\n    ],\n    \"test\": {\n        \"request\": {\n            \"url\": \"http://NvsGfWvwCSXTChoNPgaN.kwwqrL5lBOPRPRzdEAzqPu9ifDmd+eqJg2JfYySp93+d\",\n            \"protocol\": \"websocket\",\n            \"method\": \"CONNECT\",\n            \"headers\": [\n                {\n                    \"name\": \"<string>\",\n                    \"value\": \"<string>\",\n                    \"mergeStrategy\": \"replace\"\n                },\n                {\n                    \"name\": \"<string>\",\n                    \"value\": \"<string>\",\n                    \"mergeStrategy\": \"replace\"\n                }\n            ],\n            \"body\": \"in aliquip et\",\n            \"followRedirects\": true,\n            \"maxRedirects\": -19257156.080530584,\n            \"payloadExtractor\": \"ullamco elit ut\",\n            \"correlationIdXPath\": \"Ut do\"\n        },\n        \"repeaterId\": \"Excepte\"\n    }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth-objects/test",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "auth-objects", "test"]
                }
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "Authorization",
                        "value": "<API Key>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"config\": {\n        \"request\": {\n            \"url\": \"https://qQcMbhltKOsNOOJ.cldaCpJeKmLcksgx8HSYk1eoeisJaJklCydXOfEojb\",\n            \"protocol\": \"websocket\",\n            \"method\": \"PUT\",\n            \"headers\": [\n                {\n                    \"name\": \"Authorization\",\n                    \"value\": \"Bearer token\",\n                    \"mergeStrategy\": \"replace\"\n                },\n                {\n                    \"name\": \"Authorization\",\n                    \"value\": \"Bearer token\",\n                    \"mergeStrategy\": \"replace\"\n                }\n            ],\n            \"body\": \"anim do\",\n            \"followRedirects\": false,\n            \"maxRedirects\": -48845089.15536942,\n            \"payloadExtractor\": \"sunt fugiat esse irure qui\",\n            \"correlationIdXPath\": \"in sunt proident labore anim\",\n            \"form\": {},\n            \"extractor\": {\n                \"to\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"from\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"postLoginUrl\": \"https://CLeXyn.zxnAOsTZz4F7ZunEsnNHEsJb0VOiWW-U2y\"\n        },\n        \"oidc\": {\n            \"grantType\": \"client_credentials\",\n            \"clientId\": \"cillum sint consequat d\",\n            \"metadataUrl\": \"http://xzXksfZNJNRdjp.jttuQ-aoUhPFZ7pXHxJ,eydwYB6tAA1ZHYpBJc-Vh9,Rc\",\n            \"tokenEndpoint\": \"https://LgQGnjBGoHHTYIUnBWgQNOFxJrFKZCZmq.wmalq+JJnSaq.45ZSFUI.RnfsjhG5UFh4RUx-R3ceFrkgBFgVNORjMrU2Sy8M\",\n            \"clientSecret\": \"irure in sunt id dolor\",\n            \"scope\": [\n                \"in veniam\",\n                \"est dolore elit s\"\n            ],\n            \"audience\": \"a\",\n            \"username\": \"sint deserunt\",\n            \"password\": \"occaecat dolor incididunt\",\n            \"embedder\": {\n                \"type\": \"status\",\n                \"path\": \"/credentials/token\",\n                \"contentType\": \"application/json\",\n                \"name\": \"Authorization\",\n                \"template\": \"Bearer {{token}}\",\n                \"encoder\": \"base64\",\n                \"mergeStrategy\": \"replace\"\n            }\n        },\n        \"multistep\": {\n            \"embedders\": [\n                {\n                    \"type\": \"body\",\n                    \"path\": \"/credentials/token\",\n                    \"contentType\": \"application/json\",\n                    \"name\": \"Authorization\",\n                    \"template\": \"Bearer {{token}}\",\n                    \"encoder\": \"base64\",\n                    \"mergeStrategy\": \"replace\"\n                },\n                {\n                    \"type\": \"body\",\n                    \"path\": \"/credentials/token\",\n                    \"contentType\": \"application/json\",\n                    \"name\": \"Authorization\",\n                    \"template\": \"Bearer {{token}}\",\n                    \"encoder\": \"base64\",\n                    \"mergeStrategy\": \"append\"\n                }\n            ],\n            \"steps\": [\n                {\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"request\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"successResponseDetection\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                {\n                    \"name\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"request\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"successResponseDetection\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                }\n            ]\n        },\n        \"ntlm\": {\n            \"username\": \"ad\",\n            \"password\": \"fugiat nulla ullamco\",\n            \"domain\": \"enim\",\n            \"workstation\": \"sunt aliquip\"\n        }\n    },\n    \"description\": \"<string>\",\n    \"successResponseDetection\": [\n        {\n            \"type\": \"body\",\n            \"name\": \"consequat nisi\",\n            \"statuses\": [\n                -12810731.619917214,\n                88297643.17811248\n            ],\n            \"patterns\": [\n                \"dolore voluptate in\",\n                \"reprehenderit sed nostrud ex\"\n            ]\n        },\n        {\n            \"type\": \"status\",\n            \"name\": \"occaecat nulla\",\n            \"statuses\": [\n                89937875.46435753,\n                -79119645.69329232\n            ],\n            \"patterns\": [\n                \"elit commodo exercitation\",\n                \"do fugiat ut\"\n            ]\n        }\n    ],\n    \"invalidSessionDetection\": [\n        {\n            \"type\": \"header\",\n            \"name\": \"veniam tempor\",\n            \"statuses\": [\n                42403077.471309036,\n                -73744932.52237877\n            ],\n            \"patterns\": [\n                \"magna non voluptate minim\",\n                \"cillum dolore consequat fugiat\"\n            ]\n        },\n        {\n            \"type\": \"header\",\n            \"name\": \"veniam amet voluptate cupidatat\",\n            \"statuses\": [\n                -87948847.35201451,\n                -68762207.4354219\n            ],\n            \"patterns\": [\n                \"ut\",\n                \"enim esse occaecat qui\"\n            ]\n        }\n    ],\n    \"test\": {\n        \"request\": {\n            \"url\": \"http://IsEZqaRANnD.btpfTZYv8ItjV2T-K\",\n            \"protocol\": \"http\",\n            \"method\": \"GET\",\n            \"headers\": [\n                {\n                    \"name\": \"Authorization\",\n                    \"value\": \"Bearer token\",\n                    \"mergeStrategy\": \"replace\"\n                },\n                {\n                    \"name\": \"Authorization\",\n                    \"value\": \"Bearer token\",\n                    \"mergeStrategy\": \"replace\"\n                }\n            ],\n            \"body\": \"nulla\",\n            \"followRedirects\": false,\n            \"maxRedirects\": -46540641.20211743,\n            \"payloadExtractor\": \"fug\",\n            \"correlationIdXPath\": \"est sed sint\"\n        },\n        \"repeaterId\": \"Lorem paria\"\n    }\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/auth-objects/test",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "auth-objects", "test"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"stage\": \"authorization\",\n  \"message\": \"reprehenderit offi\",\n  \"name\": \"reprehenderit occaecat aliquip cupidatat\",\n  \"status\": \"success\",\n  \"timestamp\": 1608024675233,\n  \"response\": {\n   \"headers\": \"cupidatat laborum Excepteur\",\n   \"body\": \"ullamco irure magna dolore\",\n   \"status\": 25899203.172119692,\n   \"protocol\": \"HTTP/1.1\"\n  },\n  \"request\": {\n   \"method\": \"CONNECT\",\n   \"url\": \"pariatur est\",\n   \"headers\": \"id\",\n   \"body\": \"proident\",\n   \"protocol\": \"HTTP/1.1\"\n  },\n  \"screenshot\": \"ea dolor enim\",\n  \"frames\": [\n   {\n    \"type\": \"nulla in veniam reprehenderit est\",\n    \"data\": \"consequat anim est amet\",\n    \"timestamp\": -27575474.315393582,\n    \"status\": -69892021.81358004\n   },\n   {\n    \"type\": \"ex do labore dolore\",\n    \"data\": \"commodo\",\n    \"timestamp\": -89589626.04903413,\n    \"status\": -9784197.766907796\n   }\n  ]\n },\n {\n  \"stage\": \"validation\",\n  \"message\": \"irure elit\",\n  \"name\": \"qui incididunt est sint\",\n  \"status\": \"failure\",\n  \"timestamp\": 1608024675233,\n  \"response\": {\n   \"headers\": \"mollit sit in deserunt\",\n   \"body\": \"ut consequat\",\n   \"status\": -37904417.76942082,\n   \"protocol\": \"HTTP/1.1\"\n  },\n  \"request\": {\n   \"method\": \"OPTIONS\",\n   \"url\": \"lab\",\n   \"headers\": \"velit do\",\n   \"body\": \"nisi do\",\n   \"protocol\": \"HTTP/1.1\"\n  },\n  \"screenshot\": \"non culpa dolor\",\n  \"frames\": [\n   {\n    \"type\": \"sunt ullamco\",\n    \"data\": \"magna in\",\n    \"timestamp\": -41161043.278959796,\n    \"status\": -52411640.998006746\n   },\n   {\n    \"type\": \"voluptate dolore aute\",\n    \"data\": \"deser\",\n    \"timestamp\": 28875377.311113983,\n    \"status\": 86992244.623009\n   }\n  ]\n }\n]"
                }
              ]
            }
          ]
        },
        {
          "name": "scripts",
          "item": [
            {
              "name": "{script Id}",
              "item": [
                {
                  "name": "Get a single script",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scripts/:scriptId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scripts", ":scriptId"],
                      "variable": [
                        {
                          "key": "scriptId",
                          "value": "<string>",
                          "description": "(Required) The requested script ID"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scripts/:scriptId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scripts", ":scriptId"],
                          "variable": [
                            {
                              "key": "scriptId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"id\": \"quis adipisicing\",\n \"name\": \"do pariatur ad\",\n \"code\": \"laborum\",\n \"description\": \"nostrud velit laboris\",\n \"updatedAt\": \"1954-01-10T03:28:00.191Z\",\n \"createdAt\": \"1955-09-12T12:24:04.239Z\"\n}"
                    }
                  ]
                },
                {
                  "name": "Update an script",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"code\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scripts/:scriptId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scripts", ":scriptId"],
                      "variable": [
                        {
                          "key": "scriptId",
                          "value": "<string>",
                          "description": "(Required) The updated script ID"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "In case of success, returns the modified script.",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"Landings\",\n    \"description\": \"<string>\",\n    \"code\": \"\\n    const { createHmac } = require('crypto');\\n    const handle = ({ method, url, headers, body }) => {\\n      const version = 'v1';\\n      const secret = 'someSecret';\\n      const timestamp = Date.now();\\n      const signature = createHmac('sha256', secret).update(`${version}:${timestamp}:${body}`).digest('base64');\\n      return { url, method, body, headers: { ...headers, 'x-request-timestamp': timestamp, 'x-request-signature': signature } };\\n    };\\n    exports.handle = handle;\\n  \"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scripts/:scriptId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scripts", ":scriptId"],
                          "variable": [
                            {
                              "key": "scriptId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"id\": \"quis adipisicing\",\n \"name\": \"do pariatur ad\",\n \"code\": \"laborum\",\n \"description\": \"nostrud velit laboris\",\n \"updatedAt\": \"1954-01-10T03:28:00.191Z\",\n \"createdAt\": \"1955-09-12T12:24:04.239Z\"\n}"
                    }
                  ]
                },
                {
                  "name": "Delete an script",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scripts/:scriptId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scripts", ":scriptId"],
                      "variable": [
                        {
                          "key": "scriptId",
                          "value": "<string>",
                          "description": "(Required) The deleted script ID"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/scripts/:scriptId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "scripts", ":scriptId"],
                          "variable": [
                            {
                              "key": "scriptId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "Get all scripts",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/scripts",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "scripts"]
                },
                "description": "Returns a list of all scripts       available to the currently logged-in user."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scripts",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scripts"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"id\": \"sit reprehenderit an\",\n  \"name\": \"occaecat Excepteur\",\n  \"description\": \"ullamco\",\n  \"updatedAt\": \"1969-11-06T15:01:34.855Z\",\n  \"createdAt\": \"1956-04-26T18:01:45.682Z\"\n },\n {\n  \"id\": \"ad aute ea\",\n  \"name\": \"culpa mollit\",\n  \"description\": \"dolor\",\n  \"updatedAt\": \"1960-02-16T23:24:32.681Z\",\n  \"createdAt\": \"1967-10-01T02:01:44.663Z\"\n }\n]"
                }
              ]
            },
            {
              "name": "Create a script",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"code\": \"<string>\",\n    \"description\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/scripts",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "scripts"]
                },
                "description": "Creates a new script, making the       currently logged-in user its owner."
              },
              "response": [
                {
                  "name": "Created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Landings\",\n    \"code\": \"\\n    const { createHmac } = require('crypto');\\n    const handle = ({ method, url, headers, body }) => {\\n      const version = 'v1';\\n      const secret = 'someSecret';\\n      const timestamp = Date.now();\\n      const signature = createHmac('sha256', secret).update(`${version}:${timestamp}:${body}`).digest('base64');\\n      return { url, method, body, headers: { ...headers, 'x-request-timestamp': timestamp, 'x-request-signature': signature } };\\n    };\\n    exports.handle = handle;\\n  \",\n    \"description\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/scripts",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "scripts"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"id\": \"quis adipisicing\",\n \"name\": \"do pariatur ad\",\n \"code\": \"laborum\",\n \"description\": \"nostrud velit laboris\",\n \"updatedAt\": \"1954-01-10T03:28:00.191Z\",\n \"createdAt\": \"1955-09-12T12:24:04.239Z\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "integrations",
          "item": [
            {
              "name": "gitlab/install",
              "item": [
                {
                  "name": "Starts an GitLab integration",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"service\": \"<string>\",\n    \"accessToken\": \"<string>\",\n    \"refreshToken\": \"<string>\",\n    \"password\": \"<string>\",\n    \"code\": \"<string>\",\n    \"state\": \"<string>\",\n    \"user\": \"<string>\",\n    \"orgSlug\": \"<string>\",\n    \"clientId\": \"<string>\",\n    \"clientSecret\": \"<string>\",\n    \"installationId\": \"<string>\",\n    \"error\": \"<string>\",\n    \"errorDescription\": \"<string>\",\n    \"notificationLevels\": [\n        \"<string>\"\n    ],\n    \"slackChannels\": [\n        \"<string>\"\n    ],\n    \"baseUrl\": \"<url>\",\n    \"accessKey\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/integrations/gitlab/install",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "integrations", "gitlab", "install"]
                    },
                    "description": "Starts a new GitLab integration for the organization."
                  },
                  "response": [
                    {
                      "name": "No Content",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"service\": \"<string>\",\n    \"accessToken\": \"<string>\",\n    \"refreshToken\": \"<string>\",\n    \"password\": \"<string>\",\n    \"code\": \"<string>\",\n    \"state\": \"<string>\",\n    \"user\": \"<string>\",\n    \"orgSlug\": \"<string>\",\n    \"clientId\": \"<string>\",\n    \"clientSecret\": \"<string>\",\n    \"installationId\": \"<string>\",\n    \"error\": \"<string>\",\n    \"errorDescription\": \"<string>\",\n    \"notificationLevels\": [\n        \"<string>\"\n    ],\n    \"slackChannels\": [\n        \"<string>\"\n    ],\n    \"baseUrl\": \"<url>\",\n    \"accessKey\": \"<string>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/integrations/gitlab/install",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "integrations",
                            "gitlab",
                            "install"
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "integrations Continue Gitlab Installation",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/integrations/gitlab/install?clientId=<string>&baseUrl=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "api",
                        "v1",
                        "integrations",
                        "gitlab",
                        "install"
                      ],
                      "query": [
                        {
                          "key": "clientId",
                          "value": "<string>",
                          "description": "(Required) "
                        },
                        {
                          "key": "baseUrl",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/integrations/gitlab/install?clientId=<string>&baseUrl=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "integrations",
                            "gitlab",
                            "install"
                          ],
                          "query": [
                            {
                              "key": "clientId",
                              "value": "<string>"
                            },
                            {
                              "key": "baseUrl",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "slack",
              "item": [
                {
                  "name": "integrations Init Slack Installation",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/integrations/slack/install",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "integrations", "slack", "install"]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/integrations/slack/install",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "integrations",
                            "slack",
                            "install"
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Get Slack integration channels",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/integrations/slack/channels",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "integrations", "slack", "channels"]
                    },
                    "description": "Returns a list of Slack channels available for the integration."
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/integrations/slack/channels",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "integrations",
                            "slack",
                            "channels"
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n {\n  \"id\": \"ad laboris\",\n  \"name\": \"ut te\",\n  \"isPrivate\": false\n },\n {\n  \"id\": \"laboris dolore in\",\n  \"name\": \"Ut nostrud officia irure voluptate\",\n  \"isPrivate\": false\n }\n]"
                    }
                  ]
                }
              ]
            },
            {
              "name": "azure",
              "item": [
                {
                  "name": "integrations Init Azure Installation",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/integrations/azure/install",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "integrations", "azure", "install"]
                    }
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/integrations/azure/install",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "integrations",
                            "azure",
                            "install"
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Get Azure organizations",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/integrations/azure/orgs",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "integrations", "azure", "orgs"]
                    },
                    "description": "Returns a list of Azure organizations available for the integration."
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/integrations/azure/orgs",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "integrations", "azure", "orgs"]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n {\n  \"id\": \"ullamco eu amet\",\n  \"name\": \"do sunt\"\n },\n {\n  \"id\": \"occaecat ipsum u\",\n  \"name\": \"deserun\"\n }\n]"
                    }
                  ]
                }
              ]
            },
            {
              "name": "{provider}",
              "item": [
                {
                  "name": "Get integration by a provider",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/integrations/:provider",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "integrations", ":provider"],
                      "variable": [
                        {
                          "key": "provider",
                          "value": "<object>",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "description": "Returns the integration with a specific provider for the organization."
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/integrations/:provider",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "integrations", ":provider"],
                          "variable": [
                            {
                              "key": "provider"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n \"id\": \"lab\",\n \"service\": \"trello\",\n \"organizationId\": \"eni\",\n \"accessToken\": \"nulla enim laborum\",\n \"password\": \"labore ad ipsum\",\n \"orgSlug\": \"occaecat in deserunt velit\",\n \"user\": \"Lorem sunt in in\",\n \"baseUrl\": \"dolor\",\n \"notificationLevels\": [\n  \"low\",\n  \"high\"\n ],\n \"slackChannels\": [\n  \"Ut\",\n  \"sunt occaecat in Lorem\"\n ],\n \"accessKey\": \"ad\",\n \"connectivity\": \"disconnected\"\n}"
                    }
                  ]
                },
                {
                  "name": "Update an integration",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"service\": \"<string>\",\n    \"accessToken\": \"<string>\",\n    \"refreshToken\": \"<string>\",\n    \"password\": \"<string>\",\n    \"code\": \"<string>\",\n    \"state\": \"<string>\",\n    \"user\": \"<string>\",\n    \"orgSlug\": \"<string>\",\n    \"clientId\": \"<string>\",\n    \"clientSecret\": \"<string>\",\n    \"installationId\": \"<string>\",\n    \"error\": \"<string>\",\n    \"errorDescription\": \"<string>\",\n    \"notificationLevels\": [\n        \"<string>\"\n    ],\n    \"slackChannels\": [\n        \"<string>\"\n    ],\n    \"baseUrl\": \"<url>\",\n    \"accessKey\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/integrations/:provider",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "integrations", ":provider"],
                      "variable": [
                        {
                          "key": "provider",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "description": "Updates the integration with a specific provider for the organization."
                  },
                  "response": [
                    {
                      "name": "Updated the integration",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"service\": \"<string>\",\n    \"accessToken\": \"<string>\",\n    \"refreshToken\": \"<string>\",\n    \"password\": \"<string>\",\n    \"code\": \"<string>\",\n    \"state\": \"<string>\",\n    \"user\": \"<string>\",\n    \"orgSlug\": \"<string>\",\n    \"clientId\": \"<string>\",\n    \"clientSecret\": \"<string>\",\n    \"installationId\": \"<string>\",\n    \"error\": \"<string>\",\n    \"errorDescription\": \"<string>\",\n    \"notificationLevels\": [\n        \"<string>\"\n    ],\n    \"slackChannels\": [\n        \"<string>\"\n    ],\n    \"baseUrl\": \"<url>\",\n    \"accessKey\": \"<string>\"\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/integrations/:provider",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "integrations", ":provider"],
                          "variable": [
                            {
                              "key": "provider"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Delete an integration",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "<Bearer Token>",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/integrations/:provider",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "integrations", ":provider"],
                      "variable": [
                        {
                          "key": "provider",
                          "value": "<object>",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "description": "Deletes the integration with a specific provider for the organization."
                  },
                  "response": [
                    {
                      "name": "Deleted the integration",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: bearer",
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/integrations/:provider",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "v1", "integrations", ":provider"],
                          "variable": [
                            {
                              "key": "provider"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Get repositories for a provider",
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization",
                          "type": "string"
                        },
                        {
                          "key": "value",
                          "value": true,
                          "type": "boolean"
                        },
                        {
                          "key": "in",
                          "value": "header",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/integrations/:provider/repos",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "api",
                        "v1",
                        "integrations",
                        ":provider",
                        "repos"
                      ],
                      "variable": [
                        {
                          "key": "provider",
                          "value": "<object>",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "description": "Returns a list of available resources which can be used as       \"boards\" to report issues while scanning. For example, GitHub       repositories, Azure Boards etc."
                  },
                  "response": [
                    {
                      "name": "Success",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "description": "Added as a part of security scheme: apikey",
                            "key": "Authorization",
                            "value": "<API Key>"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/v1/integrations/:provider/repos",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "v1",
                            "integrations",
                            ":provider",
                            "repos"
                          ],
                          "variable": [
                            {
                              "key": "provider"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n {\n  \"id\": \"NeuraLegion/nexploit-cli\",\n  \"service\": \"github\",\n  \"name\": \"nexploit-cli\",\n  \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n },\n {\n  \"id\": \"NeuraLegion/nexploit-cli\",\n  \"service\": \"github\",\n  \"name\": \"nexploit-cli\",\n  \"uri\": \"https://github.com/NeuraLegion/nexploit-cli\"\n }\n]"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Get all integrations",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/integrations",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "integrations"]
                },
                "description": "Returns all integrations for the organization."
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/integrations",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "integrations"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n {\n  \"id\": \"cillum ex\",\n  \"service\": \"azure\",\n  \"organizationId\": \"dolo\",\n  \"accessToken\": \"cupidatat amet cillum\",\n  \"password\": \"ut ut tempor\",\n  \"orgSlug\": \"in\",\n  \"user\": \"quis la\",\n  \"baseUrl\": \"elit\",\n  \"notificationLevels\": [\n   \"all\",\n   \"medium\"\n  ],\n  \"slackChannels\": [\n   \"anim id in elit\",\n   \"Ut culpa\"\n  ],\n  \"accessKey\": \"eu ullamco\",\n  \"connectivity\": \"disconnected\"\n },\n {\n  \"id\": \"dolor do\",\n  \"service\": \"slack\",\n  \"organizationId\": \"ea \",\n  \"accessToken\": \"sed dolor qui\",\n  \"password\": \"amet\",\n  \"orgSlug\": \"Ut eu ipsum\",\n  \"user\": \"nostrud ea veniam Lorem\",\n  \"baseUrl\": \"deserunt dolore\",\n  \"notificationLevels\": [\n   \"all\",\n   \"low\"\n  ],\n  \"slackChannels\": [\n   \"enim consequat aliquip\",\n   \"adipisicing ipsum consequat pariatur voluptate\"\n  ],\n  \"accessKey\": \"ea\",\n  \"connectivity\": \"connected\"\n }\n]"
                }
              ]
            },
            {
              "name": "Create an integration",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "<Bearer Token>",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"service\": \"<string>\",\n    \"accessToken\": \"<string>\",\n    \"refreshToken\": \"<string>\",\n    \"password\": \"<string>\",\n    \"code\": \"<string>\",\n    \"state\": \"<string>\",\n    \"user\": \"<string>\",\n    \"orgSlug\": \"<string>\",\n    \"clientId\": \"<string>\",\n    \"clientSecret\": \"<string>\",\n    \"installationId\": \"<string>\",\n    \"error\": \"<string>\",\n    \"errorDescription\": \"<string>\",\n    \"notificationLevels\": [\n        \"<string>\"\n    ],\n    \"slackChannels\": [\n        \"<string>\"\n    ],\n    \"baseUrl\": \"<url>\",\n    \"accessKey\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/integrations",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "integrations"]
                },
                "description": "Creates a new integration for the organization."
              },
              "response": [
                {
                  "name": "Created new integration",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: bearer",
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"service\": \"<string>\",\n    \"accessToken\": \"<string>\",\n    \"refreshToken\": \"<string>\",\n    \"password\": \"<string>\",\n    \"code\": \"<string>\",\n    \"state\": \"<string>\",\n    \"user\": \"<string>\",\n    \"orgSlug\": \"<string>\",\n    \"clientId\": \"<string>\",\n    \"clientSecret\": \"<string>\",\n    \"installationId\": \"<string>\",\n    \"error\": \"<string>\",\n    \"errorDescription\": \"<string>\",\n    \"notificationLevels\": [\n        \"<string>\"\n    ],\n    \"slackChannels\": [\n        \"<string>\"\n    ],\n    \"baseUrl\": \"<url>\",\n    \"accessKey\": \"<string>\"\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/integrations",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "integrations"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "*/*"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "integrations Continue Monday Installation",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/integrations/monday/install",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "integrations", "monday", "install"]
                }
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/integrations/monday/install",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "integrations", "monday", "install"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "integrations Continue Git Hub Installation",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/integrations/github/install",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "integrations", "github", "install"]
                }
              },
              "response": [
                {
                  "name": "Success",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/integrations/github/install",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "v1", "integrations", "github", "install"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Get all products",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "<Bearer Token>",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/products",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "products"]
            },
            "description": "Returns a collection of all the available NexPloit products."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/products",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "products"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n {\n  \"id\": \"anim\",\n  \"category\": 65473760,\n  \"name\": \"commodo pariatur\",\n  \"description\": \"dolor sint anim\",\n  \"base\": true,\n  \"active\": false,\n  \"features\": {\n   \"users\": -61005071.979716875,\n   \"scanHours\": 89640772.93470728,\n   \"ticketingIntegrations\": -48412644.115232654,\n   \"engines\": 44789414.450071216,\n   \"storageCapacity\": -67963897.77035156,\n   \"dast\": false,\n   \"sdlc\": true,\n   \"rbac\": false,\n   \"sso\": false,\n   \"businessLogic\": true,\n   \"orgApiKeys\": false,\n   \"repeaters\": false,\n   \"reports\": true,\n   \"zeroDay\": true\n  },\n  \"attributes\": [\n   \"dol\",\n   \"commodo sint non\"\n  ],\n  \"plans\": [\n   {\n    \"id\": \"mini\",\n    \"interval\": \"none\",\n    \"productId\": \"d\",\n    \"price\": 0,\n    \"trialPeriodDays\": 40848774.51386755\n   },\n   {\n    \"id\": \"labore\",\n    \"interval\": \"none\",\n    \"productId\": \"\",\n    \"price\": 0,\n    \"trialPeriodDays\": 62820995.67993657\n   }\n  ]\n },\n {\n  \"id\": \"non tempor ad\",\n  \"category\": 70520421,\n  \"name\": \"enim occaecat nulla in\",\n  \"description\": \"minim\",\n  \"base\": true,\n  \"active\": false,\n  \"features\": {\n   \"users\": 8538341.710124925,\n   \"scanHours\": -17407655.414333507,\n   \"ticketingIntegrations\": -66901546.4230203,\n   \"engines\": -81823194.7573865,\n   \"storageCapacity\": -8682782.032591656,\n   \"dast\": false,\n   \"sdlc\": true,\n   \"rbac\": false,\n   \"sso\": true,\n   \"businessLogic\": false,\n   \"orgApiKeys\": true,\n   \"repeaters\": true,\n   \"reports\": true,\n   \"zeroDay\": false\n  },\n  \"attributes\": [\n   \"ea consectetur non amet\",\n   \"voluptate elit qui\"\n  ],\n  \"plans\": [\n   {\n    \"id\": \"officia Excepteur in\",\n    \"interval\": \"none\",\n    \"productId\": \"minim eu non elit\",\n    \"price\": 0,\n    \"trialPeriodDays\": 82224170.49405275\n   },\n   {\n    \"id\": \"commodo \",\n    \"interval\": \"none\",\n    \"productId\": \"sint dolor sed\",\n    \"price\": 0,\n    \"trialPeriodDays\": 81881899.59900802\n   }\n  ]\n }\n]"
            }
          ]
        },
        {
          "name": "Returns billing summary.",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "<Bearer Token>",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/customers/:customerId/billing",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "customers", ":customerId", "billing"],
              "variable": [
                {
                  "key": "customerId",
                  "value": "<string>",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Successful operation.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: bearer",
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/customers/:customerId/billing",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "customers", ":customerId", "billing"],
                  "variable": [
                    {
                      "key": "customerId"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"subscriptions\": [\n  {\n   \"id\": \"cupidatat co\",\n   \"paymentMethodId\": \"aliqua cillum Dui\",\n   \"startedAt\": \"1983-06-30T22:03:34.424Z\",\n   \"trialPeriodEnd\": \"1978-01-29T21:21:32.357Z\",\n   \"endAt\": \"1961-07-20T09:03:18.959Z\",\n   \"status\": \"incomplete\",\n   \"quantity\": 1,\n   \"plan\": {\n    \"id\": \"do ex\",\n    \"interval\": \"none\",\n    \"productId\": \"\",\n    \"price\": 0,\n    \"trialPeriodDays\": 39203547.375618555\n   }\n  },\n  {\n   \"id\": \"id labore\",\n   \"paymentMethodId\": \"pariatur fugiat dolo\",\n   \"startedAt\": \"1961-06-22T18:42:11.936Z\",\n   \"trialPeriodEnd\": \"1997-01-03T10:16:50.009Z\",\n   \"endAt\": \"1947-11-03T01:46:55.854Z\",\n   \"status\": \"incomplete\",\n   \"quantity\": 1,\n   \"plan\": {\n    \"id\": \"occaecat tempor sunt\",\n    \"interval\": \"none\",\n    \"productId\": \"dolore \",\n    \"price\": 0,\n    \"trialPeriodDays\": 82696038.60421139\n   }\n  }\n ],\n \"contactInfo\": {\n  \"city\": \"<string>\",\n  \"zip\": \"<string>\",\n  \"country\": \"<string>\",\n  \"line1\": \"<string>\",\n  \"name\": \"<string>\",\n  \"email\": \"<email>\",\n  \"state\": \"<string>\",\n  \"line2\": \"<string>\",\n  \"phone\": \"<string>\"\n },\n \"taxes\": [\n  {\n   \"rate\": -19008638.892957747,\n   \"name\": \"quis\"\n  },\n  {\n   \"rate\": -13414411.916494012,\n   \"name\": \"officia\"\n  }\n ]\n}"
            }
          ]
        },
        {
          "name": "The first step in Sign Up form. All the fields are mandatory.",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<email>\",\n    \"password\": \"<string>\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "register"]
            }
          },
          "response": [
            {
              "name": "Missing credentials.",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<email>\",\n    \"password\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/register",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "register"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"name\": \"BAD_REQUEST\",\n \"message\": \"ullamco laborum\",\n \"status\": 400,\n \"errors\": [\n  {\n   \"name\": \"qui\",\n   \"message\": \"amet veniam\"\n  },\n  {\n   \"name\": \"enim commodo\",\n   \"message\": \"dolor do laborum aute tempor\"\n  }\n ],\n \"stack\": [\n  \"commodo est\",\n  \"velit dolor cillum aliqua\"\n ]\n}"
            },
            {
              "name": "User created.",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<email>\",\n    \"password\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/register",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "register"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "An account is already registered with that email address.",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<email>\",\n    \"password\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/register",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "register"]
                }
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"name\": \"CONFLICT\",\n \"message\": \"cillum\",\n \"status\": 409,\n \"errors\": [\n  {\n   \"name\": \"commodo in ut r\",\n   \"message\": \"ullamco\"\n  },\n  {\n   \"name\": \"Ut aliquip\",\n   \"message\": \"Ut tempor eu anim\"\n  }\n ],\n \"stack\": [\n  \"et Duis ad dolore tempor\",\n  \"qui velit elit\"\n ]\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "well Known Controller Change Password Page",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/.well-known/change-password",
          "host": ["{{baseUrl}}"],
          "path": [".well-known", "change-password"]
        }
      },
      "response": [
        {
          "name": "Moved Permanently",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/.well-known/change-password",
              "host": ["{{baseUrl}}"],
              "path": [".well-known", "change-password"]
            }
          },
          "status": "Moved Permanently",
          "code": 301,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n \"name\": \"MOVED_PERMANENTLY\",\n \"message\": \"elit cillum\",\n \"status\": 301,\n \"errors\": [\n  {\n   \"name\": \"nostrud dolore Ut dolor ut\",\n   \"message\": \"aliquip est eu magna labore\"\n  },\n  {\n   \"name\": \"Ut\",\n   \"message\": \"officia incidi\"\n  }\n ],\n \"stack\": [\n  \"id minim in\",\n  \"aute non\"\n ]\n}"
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://development.playground.nexploit.app",
      "type": "string"
    }
  ]
}
